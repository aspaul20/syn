-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity get_random is
port (
    ap_ready : OUT STD_LOGIC;
    lfsr31_read : IN STD_LOGIC_VECTOR (31 downto 0);
    lfsr32_read : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of get_random is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_69 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000001101001";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv12_69 : STD_LOGIC_VECTOR (11 downto 0) := "000001101001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv31_36 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000110110";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal feedback_fu_42_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i_cast_cast_ca_fu_56_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_i_cast_fu_46_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal lfsr32_val_fu_82_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal feedback_1_fu_92_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i4_cast_cast_c_fu_106_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_i2_cast_fu_96_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal lfsr31_val_fu_132_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_cast_cast_fu_124_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_22_fu_114_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_64_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast2_cast_fu_74_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_fu_148_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_142_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_cast_fu_154_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_cast_32_fu_160_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lfsr_write_assign_i5_fu_138_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lfsr_write_assign_i_s_fu_88_p1 : STD_LOGIC_VECTOR (31 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return_0 <= tmp_cast_32_fu_160_p1;
    ap_return_1 <= lfsr_write_assign_i5_fu_138_p1;
    ap_return_2 <= lfsr_write_assign_i_s_fu_88_p1;
    feedback_1_fu_92_p1 <= lfsr31_read(1 - 1 downto 0);
    feedback_fu_42_p1 <= lfsr32_read(1 - 1 downto 0);
    lfsr31_val_fu_132_p2 <= (tmp_i2_cast_fu_96_p4 xor tmp_2_i4_cast_cast_c_fu_106_p3);
    lfsr32_val_fu_82_p2 <= (tmp_i_cast_fu_46_p4 xor tmp_2_i_cast_cast_ca_fu_56_p3);
    lfsr_write_assign_i5_fu_138_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lfsr31_val_fu_132_p2),32));
    lfsr_write_assign_i_s_fu_88_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lfsr32_val_fu_82_p2),32));
    p_cast2_cast_fu_74_p3 <= 
        ap_const_lv12_69 when (feedback_fu_42_p1(0) = '1') else 
        ap_const_lv12_0;
    p_cast_cast_fu_124_p3 <= 
        ap_const_lv12_36 when (feedback_1_fu_92_p1(0) = '1') else 
        ap_const_lv12_0;
    tmp1_fu_148_p2 <= (tmp_s_fu_64_p4 xor p_cast2_cast_fu_74_p3);
    tmp_22_fu_114_p4 <= lfsr31_read(12 downto 1);
    tmp_2_i4_cast_cast_c_fu_106_p3 <= 
        ap_const_lv31_36 when (feedback_1_fu_92_p1(0) = '1') else 
        ap_const_lv31_0;
    tmp_2_i_cast_cast_ca_fu_56_p3 <= 
        ap_const_lv31_69 when (feedback_fu_42_p1(0) = '1') else 
        ap_const_lv31_0;
    tmp_cast_32_fu_160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_cast_fu_154_p2),32));
    tmp_cast_fu_154_p2 <= (tmp_fu_142_p2 xor tmp1_fu_148_p2);
    tmp_fu_142_p2 <= (tmp_22_fu_114_p4 xor p_cast_cast_fu_124_p3);
    tmp_i2_cast_fu_96_p4 <= lfsr31_read(31 downto 1);
    tmp_i_cast_fu_46_p4 <= lfsr32_read(31 downto 1);
    tmp_s_fu_64_p4 <= lfsr32_read(12 downto 1);
end behav;
