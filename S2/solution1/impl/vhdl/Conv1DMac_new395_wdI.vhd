-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Conv1DMac_new395_wdI_rom is 
    generic(
             DWIDTH     : integer := 7; 
             AWIDTH     : integer := 12; 
             MEM_SIZE    : integer := 4096
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Conv1DMac_new395_wdI_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 1024=> "0000000", 1025 => "0010010", 1026 to 1028=> "0000000", 1029 => "0000001", 
    1030 to 1034=> "0000000", 1035 => "1111101", 1036 to 1037=> "0000000", 1038 => "1111111", 
    1039 to 1041=> "0000000", 1042 => "0010100", 1043 to 1046=> "0000000", 1047 => "0011001", 
    1048 => "0010110", 1049 => "1111110", 1050 => "0000000", 1051 => "1111111", 
    1052 to 1057=> "0000000", 1058 => "1111110", 1059 => "0000000", 1060 => "1111110", 
    1061 to 1067=> "0000000", 1068 => "1111111", 1069 => "0000000", 1070 => "0001100", 
    1071 to 1073=> "0000000", 1074 => "1111111", 1075 to 1076=> "0000000", 1077 => "0011100", 
    1078 to 1079=> "0000000", 1080 => "0000001", 1081 => "0000000", 1082 => "0000001", 
    1083 to 1085=> "0000000", 1086 => "0000100", 1087 to 1088=> "0000000", 1089 => "0000100", 
    1090 => "1111111", 1091 to 1092=> "0000000", 1093 => "1111101", 1094 to 1099=> "0000000", 
    1100 => "1111111", 1101 => "0000000", 1102 => "0000001", 1103 to 1104=> "0000000", 
    1105 => "1111111", 1106 => "0000100", 1107 to 1110=> "0000000", 1111 to 1112=> "0000101", 
    1113 => "0000011", 1114 to 1121=> "0000000", 1122 => "0000001", 1123 => "0000000", 
    1124 => "0000101", 1125 to 1130=> "0000000", 1131 => "1111111", 1132 to 1133=> "0000000", 
    1134 => "0000010", 1135 to 1137=> "0000000", 1138 => "0000001", 1139 to 1140=> "0000000", 
    1141 => "0000111", 1142 to 1143=> "0000000", 1144 => "0000001", 1145 => "1111111", 
    1146 => "1111110", 1147 to 1149=> "0000000", 1150 => "1111101", 1151 to 1281=> "0000000", 
    1282 => "0000101", 1283 to 1284=> "0000000", 1285 => "0000100", 1286 => "0000010", 
    1287 to 1304=> "0000000", 1305 => "0000100", 1306 to 1315=> "0000000", 1316 => "0000100", 
    1317 to 1322=> "0000000", 1323 => "0000101", 1324 to 1337=> "0000000", 1338 => "0000100", 
    1339 to 1341=> "0000000", 1342 => "0000010", 1343 to 1345=> "0000000", 1346 => "0000001", 
    1347 to 1348=> "0000000", 1349 => "0000001", 1350 to 1354=> "0000000", 1355 => "0000001", 
    1356 to 1368=> "0000000", 1369 => "0000001", 1370 to 1379=> "0000000", 1380 => "0000011", 
    1381 to 1386=> "0000000", 1387 => "0000001", 1388 to 1399=> "0000000", 1400 => "0000001", 
    1401 to 1405=> "0000000", 1406 => "1111111", 1407 to 1920=> "0000000", 1921 => "0010011", 
    1922 to 1924=> "0000000", 1925 => "0000001", 1926 to 1930=> "0000000", 1931 => "1111101", 
    1932 => "1111111", 1933 => "0000000", 1934 => "1111111", 1935 to 1936=> "0000000", 
    1937 => "1111111", 1938 => "0010101", 1939 to 1942=> "0000000", 1943 => "0011011", 
    1944 => "0010111", 1945 => "1111110", 1946 => "0000000", 1947 => "1111111", 
    1948 to 1952=> "0000000", 1953 => "1111111", 1954 => "1111110", 1955 => "0000000", 
    1956 => "1111110", 1957 to 1963=> "0000000", 1964 => "1111111", 1965 => "0000000", 
    1966 => "0001101", 1967 to 1969=> "0000000", 1970 to 1971=> "1111111", 1972 => "0000000", 
    1973 => "0011110", 1974 to 1975=> "0000000", 1976 => "0000001", 1977 => "0000000", 
    1978 => "0000001", 1979 to 1981=> "0000000", 1982 => "0000100", 1983 to 1984=> "0000000", 
    1985 => "0000100", 1986 to 1988=> "0000000", 1989 => "1111101", 1990 => "0000001", 
    1991 to 1997=> "0000000", 1998 => "0000001", 1999 to 2001=> "0000000", 2002 => "0000101", 
    2003 to 2006=> "0000000", 2007 => "0000110", 2008 => "0000101", 2009 => "0000100", 
    2010 => "0000000", 2011 => "0000001", 2012 to 2017=> "0000000", 2018 => "0000001", 
    2019 => "0000000", 2020 => "0000110", 2021 to 2029=> "0000000", 2030 => "0000010", 
    2031 to 2033=> "0000000", 2034 => "0000010", 2035 to 2036=> "0000000", 2037 => "0000111", 
    2038 to 2039=> "0000000", 2040 => "0000001", 2041 => "1111111", 2042 => "1111110", 
    2043 to 2045=> "0000000", 2046 => "1111100", 2047 to 2049=> "0000000", 2050 => "0000010", 
    2051 to 2052=> "0000000", 2053 => "0000010", 2054 => "0000001", 2055 to 2072=> "0000000", 
    2073 => "0000001", 2074 to 2083=> "0000000", 2084 => "0000010", 2085 to 2090=> "0000000", 
    2091 => "0000010", 2092 to 2105=> "0000000", 2106 => "0000010", 2107 to 2109=> "0000000", 
    2110 => "0000001", 2111 to 2136=> "0000000", 2137 => "0000001", 2138 to 2147=> "0000000", 
    2148 => "0000001", 2149 to 2304=> "0000000", 2305 => "0000001", 2306 => "1111111", 
    2307 to 2308=> "0000000", 2309 => "1111111", 2310 to 2314=> "0000000", 2315 => "0000011", 
    2316 to 2320=> "0000000", 2321 => "0101011", 2322 to 2326=> "0000000", 2327 => "0000001", 
    2328 => "0000000", 2329 => "0000010", 2330 to 2337=> "0000000", 2338 => "0000010", 
    2339 => "0000000", 2340 => "0000001", 2341 to 2347=> "0000000", 2348 => "0000001", 
    2349 to 2353=> "0000000", 2354 => "0000001", 2355 => "0101110", 2356 to 2359=> "0000000", 
    2360 => "0000001", 2361 => "1111111", 2362 => "0000001", 2363 => "0000000", 
    2364 => "0000110", 2365 => "0000000", 2366 => "1111111", 2367 to 2369=> "0000000", 
    2370 => "0000010", 2371 to 2372=> "0000000", 2373 => "0000001", 2374 to 2378=> "0000000", 
    2379 => "1111110", 2380 to 2381=> "0000000", 2382 => "0000010", 2383 to 2384=> "0000000", 
    2385 => "0001100", 2386 to 2392=> "0000000", 2393 => "1111101", 2394 => "0000000", 
    2395 => "0000001", 2396 to 2400=> "0000000", 2401 => "1111111", 2402 to 2403=> "0000000", 
    2404 => "1111111", 2405 to 2417=> "0000000", 2418 => "1111111", 2419 => "0001101", 
    2420 to 2424=> "0000000", 2425 => "0000001", 2426 => "1111111", 2427 => "0000000", 
    2428 => "0000001", 2429 => "0000000", 2430 => "0000111", 2431 to 2954=> "0000000", 
    2955 => "1111110", 2956 => "0011010", 2957 => "0000000", 2958 => "1111111", 
    2959 to 2961=> "0000000", 2962 => "0000001", 2963 to 2967=> "0000000", 2968 => "0000001", 
    2969 => "1111111", 2970 => "0000000", 2971 => "1111111", 2972 to 2976=> "0000000", 
    2977 => "0011000", 2978 => "1111111", 2979 => "0000000", 2980 => "1111111", 
    2981 to 2987=> "0000000", 2988 => "1111111", 2989 to 2993=> "0000000", 2994 => "1111111", 
    2995 => "0000001", 2996 to 2999=> "0000000", 3000 => "1111111", 3001 => "0011011", 
    3002 to 3005=> "0000000", 3006 => "0000011", 3007 to 3009=> "0000000", 3010 => "1111111", 
    3011 to 3012=> "0000000", 3013 to 3014=> "1111111", 3015 to 3018=> "0000000", 3019 => "0000001", 
    3020 => "0000101", 3021 to 3024=> "0000000", 3025 => "0000001", 3026 to 3032=> "0000000", 
    3033 => "0000011", 3034 to 3040=> "0000000", 3041 => "0001000", 3042 => "0000001", 
    3043 => "0000000", 3044 => "0000011", 3045 to 3050=> "0000000", 3051 => "1111111", 
    3052 to 3057=> "0000000", 3058 => "0000001", 3059 to 3064=> "0000000", 3065 => "0000010", 
    3066 => "1111111", 3067 to 3069=> "0000000", 3070 => "1111110", 3071 to 3969=> "0000000", 
    3970 => "1111111", 3971 to 3972=> "0000000", 3973 => "1111111", 3974 to 3978=> "0000000", 
    3979 => "0000010", 3980 => "0000001", 3981 => "0000000", 3982 => "0010011", 
    3983 to 3991=> "0000000", 3992 => "1111111", 3993 to 3994=> "0000000", 3995 => "0010111", 
    3996 to 4000=> "0000000", 4001 => "0000001", 4002 => "0011111", 4003 to 4011=> "0000000", 
    4012 => "0010110", 4013 to 4017=> "0000000", 4018 => "0001110", 4019 => "0000001", 
    4020 => "0000000", 4021 => "1111111", 4022 to 4023=> "0000000", 4024 => "0000010", 
    4025 to 4029=> "0000000", 4030 => "1111110", 4031 to 4033=> "0000000", 4034 => "0000001", 
    4035 to 4036=> "0000000", 4037 => "0000010", 4038 to 4045=> "0000000", 4046 => "0000100", 
    4047 to 4048=> "0000000", 4049 => "1111111", 4050 to 4056=> "0000000", 4057 => "1111111", 
    4058 => "0000000", 4059 => "0000100", 4060 to 4065=> "0000000", 4066 => "0000110", 
    4067 => "0000000", 4068 => "1111111", 4069 to 4075=> "0000000", 4076 => "0000101", 
    4077 to 4081=> "0000000", 4082 => "0000010", 4083 => "1111111", 4084 to 4087=> "0000000", 
    4088 => "1111111", 4089 to 4093=> "0000000", 4094 => "1111111", 4095 => "0000000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity Conv1DMac_new395_wdI is
    generic (
        DataWidth : INTEGER := 7;
        AddressRange : INTEGER := 4096;
        AddressWidth : INTEGER := 12);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Conv1DMac_new395_wdI is
    component Conv1DMac_new395_wdI_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Conv1DMac_new395_wdI_rom_U :  component Conv1DMac_new395_wdI_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


