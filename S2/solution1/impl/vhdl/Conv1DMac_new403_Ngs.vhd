-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Conv1DMac_new403_Ngs_rom is 
    generic(
             DWIDTH     : integer := 4; 
             AWIDTH     : integer := 12; 
             MEM_SIZE    : integer := 4096
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Conv1DMac_new403_Ngs_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 767=> "0000", 768 => "1110", 769 => "0001", 770 => "1101", 771 to 774=> "0000", 
    775 => "1111", 776 => "0011", 777 => "0000", 778 => "0011", 779 => "1111", 
    780 => "0001", 781 => "0010", 782 to 783=> "0000", 784 => "1100", 785 => "0001", 
    786 => "1100", 787 => "1110", 788 to 790=> "0000", 791 => "1111", 792 to 793=> "0000", 
    794 => "0100", 795 to 797=> "0000", 798 => "0001", 799 to 800=> "0000", 801 => "0011", 
    802 => "1111", 803 => "0101", 804 => "0000", 805 => "0010", 806 => "1111", 
    807 to 809=> "0000", 810 => "1101", 811 => "0101", 812 => "1111", 813 to 816=> "0000", 
    817 => "1111", 818 to 820=> "0000", 821 => "1101", 822 => "0100", 823 => "0000", 
    824 => "0100", 825 => "0000", 826 => "0001", 827 => "0110", 828 => "0001", 
    829 to 839=> "0000", 840 to 841=> "1111", 842 => "0011", 843 to 844=> "0000", 845 => "0001", 
    846 => "0011", 847 => "0000", 848 => "1101", 849 => "0000", 850 => "1111", 
    851 => "1110", 852 => "0000", 853 => "1101", 854 to 855=> "0000", 856 => "0001", 
    857 => "0000", 858 => "1110", 859 => "0000", 860 => "1110", 861 to 862=> "0000", 
    863 => "0011", 864 => "0100", 865 to 868=> "0000", 869 => "0001", 870 => "1100", 
    871 => "1101", 872 => "1111", 873 to 875=> "0000", 876 => "0001", 877 => "0000", 
    878 => "1111", 879 to 885=> "0000", 886 => "0100", 887 => "1110", 888 to 891=> "0000", 
    892 => "0010", 893 => "0000", 894 => "0001", 895 to 1023=> "0000", 1024 => "1111", 
    1025 => "0001", 1026 => "1111", 1027 to 1030=> "0000", 1031 => "1111", 1032 => "0001", 
    1033 to 1035=> "0000", 1036 => "1110", 1037 => "1111", 1038 to 1049=> "0000", 1050 => "0001", 
    1051 to 1053=> "0000", 1054 => "0001", 1055 => "0000", 1056 to 1057=> "0001", 1058 => "1111", 
    1059 to 1061=> "0000", 1062 => "1111", 1063 to 1066=> "0000", 1067 => "1111", 1068 => "0001", 
    1069 => "1111", 1070 to 1072=> "0000", 1073 => "0001", 1074 to 1079=> "0000", 1080 => "1110", 
    1081 => "0000", 1082 => "0011", 1083 to 1084=> "0001", 1085 to 1089=> "0000", 1090 => "0001", 
    1091 to 1103=> "0000", 1104 => "1111", 1105 to 1108=> "0000", 1109 => "1111", 1110 to 1111=> "0000", 
    1112 => "0001", 1113 to 1115=> "0000", 1116 => "1111", 1117 to 1122=> "0000", 1123 => "0001", 
    1124 => "0000", 1125 => "1111", 1126 => "0000", 1127 => "0001", 1128 => "1111", 
    1129 to 1131=> "0000", 1132 => "0001", 1133 to 1141=> "0000", 1142 => "0001", 1143 => "1111", 
    1144 to 1149=> "0000", 1150 => "0010", 1151 => "0000", 1152 => "0010", 1153 => "0101", 
    1154 => "1101", 1155 to 1158=> "0000", 1159 => "1100", 1160 => "0011", 1161 => "0000", 
    1162 => "1111", 1163 => "1110", 1164 => "1111", 1165 => "0011", 1166 to 1167=> "0000", 
    1168 => "1110", 1169 to 1170=> "1111", 1171 => "0011", 1172 to 1173=> "0000", 1174 => "0011", 
    1175 => "0001", 1176 to 1177=> "0000", 1178 => "0011", 1179 to 1181=> "0000", 1182 => "1101", 
    1183 => "0000", 1184 => "0011", 1185 => "1111", 1186 => "1110", 1187 => "1111", 
    1188 => "0000", 1189 => "1110", 1190 => "0001", 1191 to 1194=> "0000", 1195 => "0010", 
    1196 to 1197=> "0011", 1198 to 1200=> "0000", 1201 => "0101", 1202 to 1204=> "0000", 1205 => "0010", 
    1206 => "0001", 1207 => "0000", 1208 => "1111", 1209 to 1210=> "0000", 1211 => "0001", 
    1212 to 1217=> "0000", 1218 => "1111", 1219 to 1223=> "0000", 1224 => "0100", 1225 => "0010", 
    1226 => "0100", 1227 to 1228=> "0000", 1229 to 1230=> "1101", 1231 => "0000", 1232 => "1111", 
    1233 => "0000", 1234 => "1100", 1235 to 1236=> "0000", 1237 => "1101", 1238 to 1239=> "0000", 
    1240 => "1101", 1241 => "0000", 1242 => "0011", 1243 => "0000", 1244 => "1111", 
    1245 to 1246=> "0000", 1247 => "0100", 1248 => "0001", 1249 to 1250=> "0000", 1251 => "0001", 
    1252 => "0000", 1253 => "0010", 1254 => "1110", 1255 => "1111", 1256 to 1259=> "0000", 
    1260 => "1101", 1261 => "0000", 1262 => "0011", 1263 to 1269=> "0000", 1270 => "1111", 
    1271 => "0001", 1272 => "0000", 1273 => "1100", 1274 to 1275=> "0000", 1276 => "1111", 
    1277 => "0000", 1278 => "0001", 1279 to 1919=> "0000", 1920 => "0001", 1921 => "0100", 
    1922 => "1110", 1923 to 1926=> "0000", 1927 => "1100", 1928 => "0011", 1929 => "0000", 
    1930 => "1111", 1931 => "1110", 1932 => "1111", 1933 => "0010", 1934 to 1935=> "0000", 
    1936 => "1110", 1937 to 1938=> "1111", 1939 => "0010", 1940 to 1941=> "0000", 1942 => "0011", 
    1943 => "0001", 1944 to 1945=> "0000", 1946 => "0011", 1947 to 1949=> "0000", 1950 => "1101", 
    1951 => "0000", 1952 => "0011", 1953 to 1954=> "1111", 1955 to 1956=> "0000", 1957 => "1110", 
    1958 => "0001", 1959 to 1962=> "0000", 1963 => "0010", 1964 => "0011", 1965 => "0010", 
    1966 to 1968=> "0000", 1969 => "0101", 1970 to 1972=> "0000", 1973 => "0010", 1974 => "0001", 
    1975 => "0000", 1976 => "1111", 1977 to 1978=> "0000", 1979 => "0001", 1980 to 1991=> "0000", 
    1992 => "0100", 1993 => "0001", 1994 => "0100", 1995 to 1996=> "0000", 1997 to 1998=> "1101", 
    1999 => "0000", 2000 => "1111", 2001 => "0000", 2002 => "1101", 2003 to 2004=> "0000", 
    2005 => "1110", 2006 to 2007=> "0000", 2008 => "1101", 2009 => "0000", 2010 => "0011", 
    2011 => "0000", 2012 => "1111", 2013 to 2014=> "0000", 2015 => "0011", 2016 => "0001", 
    2017 to 2018=> "0000", 2019 => "0001", 2020 => "0000", 2021 => "0010", 2022 => "1110", 
    2023 => "1111", 2024 to 2027=> "0000", 2028 => "1101", 2029 => "0000", 2030 => "0011", 
    2031 to 2037=> "0000", 2038 => "1111", 2039 => "0001", 2040 => "0000", 2041 => "1100", 
    2042 to 2043=> "0000", 2044 => "1111", 2045 => "0000", 2046 => "0001", 2047 => "0000", 
    2048 => "1110", 2049 => "0001", 2050 => "1101", 2051 to 2054=> "0000", 2055 => "1111", 
    2056 => "0010", 2057 => "0000", 2058 => "0011", 2059 => "1111", 2060 => "0001", 
    2061 => "0010", 2062 to 2063=> "0000", 2064 => "1101", 2065 => "0001", 2066 => "1101", 
    2067 => "1110", 2068 to 2070=> "0000", 2071 => "1111", 2072 to 2073=> "0000", 2074 => "0100", 
    2075 to 2077=> "0000", 2078 => "0001", 2079 to 2080=> "0000", 2081 => "0011", 2082 => "1111", 
    2083 => "0100", 2084 => "0000", 2085 => "0010", 2086 => "1111", 2087 to 2089=> "0000", 
    2090 => "1101", 2091 => "0100", 2092 => "1111", 2093 to 2096=> "0000", 2097 => "1111", 
    2098 to 2100=> "0000", 2101 => "1101", 2102 => "0100", 2103 => "0000", 2104 => "0100", 
    2105 => "0000", 2106 => "0001", 2107 => "0110", 2108 => "0001", 2109 to 2119=> "0000", 
    2120 to 2121=> "1111", 2122 => "0011", 2123 to 2124=> "0000", 2125 => "0001", 2126 => "0011", 
    2127 => "0000", 2128 => "1110", 2129 => "0000", 2130 => "1111", 2131 => "1110", 
    2132 => "0000", 2133 => "1110", 2134 to 2135=> "0000", 2136 => "0001", 2137 => "0000", 
    2138 => "1110", 2139 => "0000", 2140 => "1110", 2141 to 2142=> "0000", 2143 => "0010", 
    2144 => "0100", 2145 to 2148=> "0000", 2149 => "0001", 2150 => "1100", 2151 => "1101", 
    2152 => "1111", 2153 to 2155=> "0000", 2156 => "0001", 2157 => "0000", 2158 => "1111", 
    2159 to 2165=> "0000", 2166 => "0100", 2167 => "1110", 2168 to 2171=> "0000", 2172 => "0010", 
    2173 => "0000", 2174 => "0001", 2175 to 2943=> "0000", 2944 => "1101", 2945 => "1110", 
    2946 => "0010", 2947 to 2951=> "0000", 2952 => "0101", 2953 => "0000", 2954 => "1011", 
    2955 => "1101", 2956 => "0001", 2957 => "0011", 2958 to 2959=> "0000", 2960 => "0001", 
    2961 => "1110", 2962 => "0001", 2963 to 2965=> "0000", 2966 => "1101", 2967 => "0100", 
    2968 to 2969=> "0000", 2970 => "1110", 2971 to 2975=> "0000", 2976 => "0011", 2977 => "0001", 
    2978 to 2979=> "0100", 2980 to 2981=> "0000", 2982 => "1111", 2983 to 2985=> "0000", 2986 => "1101", 
    2987 => "0010", 2988 => "1110", 2989 => "0001", 2990 to 2992=> "0000", 2993 => "0001", 
    2994 to 2997=> "0000", 2998 => "1011", 2999 to 3001=> "0000", 3002 => "1111", 3003 => "0100", 
    3004 to 3009=> "0000", 3010 => "1101", 3011 to 3015=> "0000", 3016 => "1111", 3017 => "1010", 
    3018 => "1110", 3019 to 3020=> "0000", 3021 => "1100", 3022 => "0001", 3023 => "0000", 
    3024 => "0010", 3025 to 3026=> "0000", 3027 => "1111", 3028 => "0000", 3029 => "1111", 
    3030 to 3031=> "0000", 3032 => "1111", 3033 => "0000", 3034 => "1111", 3035 to 3038=> "0000", 
    3039 => "0001", 3040 => "1111", 3041 to 3042=> "0000", 3043 => "0110", 3044 => "0000", 
    3045 => "1100", 3046 to 3047=> "0000", 3048 => "0010", 3049 to 3051=> "0000", 3052 => "1110", 
    3053 => "0000", 3054 => "0101", 3055 to 3061=> "0000", 3062 => "1111", 3063 => "0010", 
    3064 to 3067=> "0000", 3068 => "0101", 3069 to 4095=> "0000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity Conv1DMac_new403_Ngs is
    generic (
        DataWidth : INTEGER := 4;
        AddressRange : INTEGER := 4096;
        AddressWidth : INTEGER := 12);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Conv1DMac_new403_Ngs is
    component Conv1DMac_new403_Ngs_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Conv1DMac_new403_Ngs_rom_U :  component Conv1DMac_new403_Ngs_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


