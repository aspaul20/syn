// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __Conv1DMac_new_1_wRg6_H__
#define __Conv1DMac_new_1_wRg6_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct Conv1DMac_new_1_wRg6_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 7;
  static const unsigned AddressRange = 4096;
  static const unsigned AddressWidth = 12;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(Conv1DMac_new_1_wRg6_ram) {
        ram[0] = "0b0010000";
        for (unsigned i = 1; i < 19 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[19] = "0b0001101";
        for (unsigned i = 20; i < 28 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[28] = "0b1111111";
        ram[29] = "0b0001111";
        for (unsigned i = 30; i < 35 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[35] = "0b0000001";
        for (unsigned i = 36; i < 56 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[56] = "0b0010000";
        for (unsigned i = 57; i < 63 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[63] = "0b1111111";
        ram[64] = "0b0001111";
        for (unsigned i = 65; i < 73 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[73] = "0b0001110";
        for (unsigned i = 74; i < 93 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[93] = "0b0001111";
        ram[94] = "0b1111111";
        ram[95] = "0b0000000";
        ram[96] = "0b0000000";
        ram[97] = "0b1111111";
        ram[98] = "0b0000000";
        ram[99] = "0b0001111";
        for (unsigned i = 100; i < 121 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[121] = "0b0010000";
        for (unsigned i = 122; i < 384 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[384] = "0b0000001";
        for (unsigned i = 385; i < 403 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[403] = "0b0000001";
        for (unsigned i = 404; i < 412 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[412] = "0b0010000";
        ram[413] = "0b0000001";
        ram[414] = "0b0000000";
        ram[415] = "0b0000000";
        ram[416] = "0b0000000";
        ram[417] = "0b0000000";
        ram[418] = "0b0000111";
        for (unsigned i = 419; i < 440 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[440] = "0b0000001";
        for (unsigned i = 441; i < 447 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[447] = "0b0010011";
        ram[448] = "0b0000001";
        for (unsigned i = 449; i < 457 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[457] = "0b0000001";
        for (unsigned i = 458; i < 477 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[477] = "0b0000001";
        ram[478] = "0b0000000";
        ram[479] = "0b0000000";
        ram[480] = "0b0000000";
        ram[481] = "0b0010010";
        ram[482] = "0b0000000";
        ram[483] = "0b0000001";
        for (unsigned i = 484; i < 503 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[503] = "0b0000001";
        ram[504] = "0b0000000";
        ram[505] = "0b0000001";
        for (unsigned i = 506; i < 512 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[512] = "0b0000100";
        ram[513] = "0b0000000";
        ram[514] = "0b0000000";
        ram[515] = "0b0000000";
        ram[516] = "0b0010101";
        for (unsigned i = 517; i < 531 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[531] = "0b0000011";
        for (unsigned i = 532; i < 538 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[538] = "0b0000011";
        ram[539] = "0b0000000";
        ram[540] = "0b0000010";
        ram[541] = "0b0000011";
        ram[542] = "0b0000000";
        ram[543] = "0b0000000";
        ram[544] = "0b0000000";
        ram[545] = "0b0000000";
        ram[546] = "0b0000010";
        for (unsigned i = 547; i < 568 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[568] = "0b0000011";
        for (unsigned i = 569; i < 575 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[575] = "0b0000011";
        ram[576] = "0b0000100";
        ram[577] = "0b0000000";
        ram[578] = "0b0000011";
        for (unsigned i = 579; i < 585 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[585] = "0b0000100";
        for (unsigned i = 586; i < 591 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[591] = "0b0000011";
        ram[592] = "0b0011010";
        for (unsigned i = 593; i < 599 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[599] = "0b0000001";
        for (unsigned i = 600; i < 605 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[605] = "0b0000011";
        ram[606] = "0b0011110";
        ram[607] = "0b0000000";
        ram[608] = "0b0000000";
        ram[609] = "0b0000011";
        ram[610] = "0b0000000";
        ram[611] = "0b0000100";
        ram[612] = "0b0000000";
        ram[613] = "0b0000000";
        ram[614] = "0b0000000";
        ram[615] = "0b0000000";
        ram[616] = "0b0000010";
        ram[617] = "0b0000000";
        ram[618] = "0b0000000";
        ram[619] = "0b0000000";
        ram[620] = "0b0000000";
        ram[621] = "0b0000010";
        for (unsigned i = 622; i < 633 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[633] = "0b0000100";
        for (unsigned i = 634; i < 768 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[768] = "0b0001111";
        for (unsigned i = 769; i < 787 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[787] = "0b0001100";
        for (unsigned i = 788; i < 797 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[797] = "0b0001110";
        ram[798] = "0b0000000";
        ram[799] = "0b0000000";
        ram[800] = "0b0000000";
        ram[801] = "0b0000000";
        ram[802] = "0b0000001";
        ram[803] = "0b0000001";
        for (unsigned i = 804; i < 824 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[824] = "0b0001111";
        for (unsigned i = 825; i < 832 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[832] = "0b0001110";
        for (unsigned i = 833; i < 841 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[841] = "0b0001101";
        for (unsigned i = 842; i < 861 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[861] = "0b0001110";
        for (unsigned i = 862; i < 867 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[867] = "0b0001110";
        for (unsigned i = 868; i < 889 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[889] = "0b0001111";
        for (unsigned i = 890; i < 1152 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1152] = "0b1111111";
        for (unsigned i = 1153; i < 1178 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1178] = "0b0101100";
        ram[1179] = "0b0000000";
        ram[1180] = "0b1111111";
        for (unsigned i = 1181; i < 1218 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1218] = "0b0100110";
        for (unsigned i = 1219; i < 1231 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1231] = "0b0100110";
        for (unsigned i = 1232; i < 1246 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1246] = "0b1111111";
        ram[1247] = "0b0000000";
        ram[1248] = "0b0000000";
        ram[1249] = "0b1111111";
        ram[1250] = "0b0000000";
        ram[1251] = "0b1111111";
        ram[1252] = "0b0000000";
        ram[1253] = "0b0000000";
        ram[1254] = "0b0000000";
        ram[1255] = "0b0000000";
        ram[1256] = "0b0100000";
        for (unsigned i = 1257; i < 1434 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1434] = "0b0000001";
        ram[1435] = "0b0000000";
        ram[1436] = "0b0000000";
        ram[1437] = "0b1111111";
        for (unsigned i = 1438; i < 1446 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1446] = "0b0111010";
        for (unsigned i = 1447; i < 1455 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1455] = "0b0110000";
        for (unsigned i = 1456; i < 1470 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1470] = "0b0110011";
        ram[1471] = "0b0000000";
        ram[1472] = "0b0000000";
        ram[1473] = "0b0000000";
        ram[1474] = "0b0000001";
        for (unsigned i = 1475; i < 1501 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1501] = "0b0000001";
        ram[1502] = "0b1111111";
        ram[1503] = "0b0000000";
        ram[1504] = "0b0000000";
        ram[1505] = "0b0000000";
        ram[1506] = "0b0000000";
        ram[1507] = "0b1111111";
        for (unsigned i = 1508; i < 2944 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[2944] = "0b0001111";
        ram[2945] = "0b0000000";
        ram[2946] = "0b0000000";
        ram[2947] = "0b0000000";
        ram[2948] = "0b1111111";
        for (unsigned i = 2949; i < 2963 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[2963] = "0b0001101";
        for (unsigned i = 2964; i < 2970 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[2970] = "0b0000001";
        ram[2971] = "0b0000000";
        ram[2972] = "0b0000000";
        ram[2973] = "0b0001110";
        ram[2974] = "0b0000000";
        ram[2975] = "0b0000000";
        ram[2976] = "0b0000000";
        ram[2977] = "0b0000000";
        ram[2978] = "0b0000001";
        ram[2979] = "0b0000001";
        for (unsigned i = 2980; i < 3000 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3000] = "0b0001111";
        for (unsigned i = 3001; i < 3008 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3008] = "0b0001110";
        ram[3009] = "0b0000000";
        ram[3010] = "0b0000001";
        for (unsigned i = 3011; i < 3017 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3017] = "0b0001110";
        for (unsigned i = 3018; i < 3023 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3023] = "0b0000001";
        ram[3024] = "0b1111111";
        for (unsigned i = 3025; i < 3037 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3037] = "0b0001111";
        ram[3038] = "0b1111111";
        ram[3039] = "0b0000000";
        ram[3040] = "0b0000000";
        ram[3041] = "0b0000000";
        ram[3042] = "0b0000000";
        ram[3043] = "0b0001111";
        for (unsigned i = 3044; i < 3065 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3065] = "0b0001111";
        for (unsigned i = 3066; i < 3072 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3072] = "0b1111110";
        ram[3073] = "0b0000000";
        ram[3074] = "0b0000000";
        ram[3075] = "0b0000000";
        ram[3076] = "0b0101100";
        for (unsigned i = 3077; i < 3091 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3091] = "0b1111111";
        for (unsigned i = 3092; i < 3098 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3098] = "0b1111110";
        ram[3099] = "0b0000000";
        ram[3100] = "0b1111111";
        ram[3101] = "0b1111110";
        for (unsigned i = 3102; i < 3128 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3128] = "0b1111110";
        for (unsigned i = 3129; i < 3134 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3134] = "0b0000001";
        ram[3135] = "0b1111111";
        ram[3136] = "0b1111111";
        ram[3137] = "0b0000000";
        ram[3138] = "0b1111110";
        for (unsigned i = 3139; i < 3145 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3145] = "0b1111110";
        for (unsigned i = 3146; i < 3151 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3151] = "0b1111110";
        ram[3152] = "0b0110111";
        for (unsigned i = 3153; i < 3159 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3159] = "0b0000010";
        for (unsigned i = 3160; i < 3165 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3165] = "0b1111101";
        ram[3166] = "0b0111100";
        ram[3167] = "0b0000000";
        ram[3168] = "0b0000000";
        ram[3169] = "0b1111111";
        ram[3170] = "0b0000000";
        ram[3171] = "0b1111111";
        ram[3172] = "0b0000000";
        ram[3173] = "0b0000000";
        ram[3174] = "0b0000000";
        ram[3175] = "0b0000000";
        ram[3176] = "0b1111110";
        ram[3177] = "0b0000000";
        ram[3178] = "0b0000000";
        ram[3179] = "0b0000000";
        ram[3180] = "0b0000000";
        ram[3181] = "0b0000100";
        for (unsigned i = 3182; i < 3193 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3193] = "0b1111111";
        for (unsigned i = 3194; i < 4096 ; i = i + 1) {
            ram[i] = "0b0000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(Conv1DMac_new_1_wRg6) {


static const unsigned DataWidth = 7;
static const unsigned AddressRange = 4096;
static const unsigned AddressWidth = 12;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


Conv1DMac_new_1_wRg6_ram* meminst;


SC_CTOR(Conv1DMac_new_1_wRg6) {
meminst = new Conv1DMac_new_1_wRg6_ram("Conv1DMac_new_1_wRg6_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~Conv1DMac_new_1_wRg6() {
    delete meminst;
}


};//endmodule
#endif
