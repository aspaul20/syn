// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv1DMac_new403_HH_
#define _Conv1DMac_new403_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "computeS2_mux_325yd2_x_x_x.h"
#include "Conv1DMac_new403_Lf8.h"
#include "Conv1DMac_new403_Mgi.h"
#include "Conv1DMac_new403_Ngs.h"
#include "Conv1DMac_new403_OgC.h"

namespace ap_rtl {

struct Conv1DMac_new403 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_signal< sc_lv<8> > ap_var_for_const1;
    sc_signal< sc_lv<8> > ap_var_for_const0;
    sc_signal< sc_lv<8> > ap_var_for_const2;
    sc_signal< sc_lv<8> > ap_var_for_const3;
    sc_signal< sc_lv<8> > ap_var_for_const4;
    sc_signal< sc_lv<8> > ap_var_for_const5;
    sc_signal< sc_lv<8> > ap_var_for_const6;
    sc_signal< sc_lv<8> > ap_var_for_const7;
    sc_signal< sc_lv<8> > ap_var_for_const8;
    sc_signal< sc_lv<8> > ap_var_for_const9;


    // Module declarations
    Conv1DMac_new403(sc_module_name name);
    SC_HAS_PROCESS(Conv1DMac_new403);

    ~Conv1DMac_new403();

    sc_trace_file* mVcdFile;

    Conv1DMac_new403_Lf8* weights9_m_weights_V_U;
    Conv1DMac_new403_Mgi* weights9_m_weights_V_1_U;
    Conv1DMac_new403_Ngs* weights9_m_weights_V_2_U;
    Conv1DMac_new403_OgC* weights9_m_weights_V_3_U;
    computeS2_mux_325yd2_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,5,8>* computeS2_mux_325yd2_x_x_x_U92;
    computeS2_mux_325yd2_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,5,8>* computeS2_mux_325yd2_x_x_x_U93;
    computeS2_mux_325yd2_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,5,8>* computeS2_mux_325yd2_x_x_x_U94;
    computeS2_mux_325yd2_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,5,8>* computeS2_mux_325yd2_x_x_x_U95;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<12> > weights9_m_weights_V_address0;
    sc_signal< sc_logic > weights9_m_weights_V_ce0;
    sc_signal< sc_lv<4> > weights9_m_weights_V_q0;
    sc_signal< sc_lv<12> > weights9_m_weights_V_1_address0;
    sc_signal< sc_logic > weights9_m_weights_V_1_ce0;
    sc_signal< sc_lv<4> > weights9_m_weights_V_1_q0;
    sc_signal< sc_lv<12> > weights9_m_weights_V_2_address0;
    sc_signal< sc_logic > weights9_m_weights_V_2_ce0;
    sc_signal< sc_lv<4> > weights9_m_weights_V_2_q0;
    sc_signal< sc_lv<12> > weights9_m_weights_V_3_address0;
    sc_signal< sc_logic > weights9_m_weights_V_3_ce0;
    sc_signal< sc_lv<4> > weights9_m_weights_V_3_q0;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten3_reg_1224;
    sc_signal< sc_lv<1> > exitcond_flatten3_reg_1224_pp0_iter1_reg;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > tmp_60_reg_1251;
    sc_signal< sc_lv<1> > tmp_60_reg_1251_pp0_iter3_reg;
    sc_signal< sc_lv<20> > indvar_flatten3_reg_221;
    sc_signal< sc_lv<14> > indvar_flatten_reg_232;
    sc_signal< sc_lv<6> > nm_reg_243;
    sc_signal< sc_lv<8> > sf_reg_254;
    sc_signal< sc_lv<1> > exitcond_flatten3_fu_297_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten3_reg_1224_pp0_iter2_reg;
    sc_signal< sc_lv<20> > indvar_flatten_next3_fu_303_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<5> > nm_t_mid2_fu_397_p3;
    sc_signal< sc_lv<5> > nm_t_mid2_reg_1233;
    sc_signal< sc_lv<5> > nm_t_mid2_reg_1233_pp0_iter1_reg;
    sc_signal< sc_lv<5> > nm_t_mid2_reg_1233_pp0_iter2_reg;
    sc_signal< sc_lv<5> > nm_t_mid2_reg_1233_pp0_iter3_reg;
    sc_signal< sc_lv<6> > nm_mid2_fu_405_p3;
    sc_signal< sc_lv<12> > tmp_37_fu_417_p2;
    sc_signal< sc_lv<12> > tmp_37_reg_1246;
    sc_signal< sc_lv<1> > tmp_60_fu_423_p2;
    sc_signal< sc_lv<1> > tmp_60_reg_1251_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_60_reg_1251_pp0_iter2_reg;
    sc_signal< sc_lv<8> > sf_1_fu_429_p2;
    sc_signal< sc_lv<14> > indvar_flatten_next_fu_441_p3;
    sc_signal< sc_lv<8> > tmp_V_reg_1285;
    sc_signal< sc_lv<4> > weights9_m_weights_V_5_reg_1290;
    sc_signal< sc_lv<4> > weights9_m_weights_V_7_reg_1295;
    sc_signal< sc_lv<4> > weights9_m_weights_V_9_reg_1300;
    sc_signal< sc_lv<4> > weights9_m_weights_V_11_reg_1305;
    sc_signal< sc_lv<6> > tmp1_fu_542_p2;
    sc_signal< sc_lv<6> > tmp1_reg_1310;
    sc_signal< sc_lv<6> > tmp2_fu_631_p2;
    sc_signal< sc_lv<6> > tmp2_reg_1315;
    sc_signal< sc_lv<6> > tmp3_fu_720_p2;
    sc_signal< sc_lv<6> > tmp3_reg_1320;
    sc_signal< sc_lv<6> > tmp4_fu_809_p2;
    sc_signal< sc_lv<6> > tmp4_reg_1325;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<64> > tmp_38_fu_449_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > macRegisters_0_V_1_fu_140;
    sc_signal< sc_lv<8> > macRegisters_0_V_fu_830_p2;
    sc_signal< sc_lv<8> > macRegisters_1_V_1_fu_144;
    sc_signal< sc_lv<8> > macRegisters_1_V_fu_839_p2;
    sc_signal< sc_lv<8> > macRegisters_2_V_1_fu_148;
    sc_signal< sc_lv<8> > macRegisters_2_V_fu_848_p2;
    sc_signal< sc_lv<8> > macRegisters_3_V_1_fu_152;
    sc_signal< sc_lv<8> > macRegisters_3_V_fu_857_p2;
    sc_signal< sc_lv<5> > tmp_fu_285_p1;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_309_p2;
    sc_signal< sc_lv<12> > tmp_s_fu_289_p3;
    sc_signal< sc_lv<1> > tmp_289_fu_345_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_339_p2;
    sc_signal< sc_lv<6> > nm_mid_fu_315_p3;
    sc_signal< sc_lv<1> > tmp_91_mid_fu_351_p2;
    sc_signal< sc_lv<1> > tmp_270_fu_363_p2;
    sc_signal< sc_lv<6> > nm_1_fu_357_p2;
    sc_signal< sc_lv<5> > tmp_309_fu_377_p1;
    sc_signal< sc_lv<12> > tmp_90_mid1_fu_381_p3;
    sc_signal< sc_lv<12> > tmp_90_mid_fu_323_p3;
    sc_signal< sc_lv<5> > nm_t_mid_fu_331_p3;
    sc_signal< sc_lv<8> > sf_mid2_fu_369_p3;
    sc_signal< sc_lv<12> > tmp_90_mid2_fu_389_p3;
    sc_signal< sc_lv<12> > sf_cast1_fu_413_p1;
    sc_signal< sc_lv<14> > indvar_flatten_op_fu_435_p2;
    sc_signal< sc_lv<8> > p_Val2_s_132_fu_462_p0;
    sc_signal< sc_lv<12> > p_08_cast_cast_fu_456_p1;
    sc_signal< sc_lv<4> > p_Val2_s_132_fu_462_p1;
    sc_signal< sc_lv<12> > p_Val2_s_132_fu_462_p2;
    sc_signal< sc_lv<5> > tmp_311_fu_476_p4;
    sc_signal< sc_lv<1> > tmp_313_fu_498_p1;
    sc_signal< sc_lv<1> > tmp_310_fu_468_p3;
    sc_signal< sc_lv<5> > tmp_42_fu_508_p4;
    sc_signal< sc_lv<1> > tmp_41_fu_502_p2;
    sc_signal< sc_lv<6> > tmp_43_fu_518_p3;
    sc_signal< sc_lv<1> > tmp_44_fu_526_p2;
    sc_signal< sc_lv<1> > tmp_312_fu_490_p3;
    sc_signal< sc_lv<1> > qb_assign_2_fu_532_p2;
    sc_signal< sc_lv<6> > p_Val2_cast_cast_fu_486_p1;
    sc_signal< sc_lv<6> > tmp_138_cast_cast_fu_538_p1;
    sc_signal< sc_lv<8> > p_Val2_1_fu_551_p0;
    sc_signal< sc_lv<4> > p_Val2_1_fu_551_p1;
    sc_signal< sc_lv<12> > p_Val2_1_fu_551_p2;
    sc_signal< sc_lv<5> > tmp_315_fu_565_p4;
    sc_signal< sc_lv<1> > tmp_317_fu_587_p1;
    sc_signal< sc_lv<1> > tmp_314_fu_557_p3;
    sc_signal< sc_lv<5> > tmp_48_fu_597_p4;
    sc_signal< sc_lv<1> > tmp_47_fu_591_p2;
    sc_signal< sc_lv<6> > tmp_49_fu_607_p3;
    sc_signal< sc_lv<1> > tmp_227_1_fu_615_p2;
    sc_signal< sc_lv<1> > tmp_316_fu_579_p3;
    sc_signal< sc_lv<1> > qb_assign_2_1_fu_621_p2;
    sc_signal< sc_lv<6> > p_Val2_81_1_cast_c_fu_575_p1;
    sc_signal< sc_lv<6> > tmp_228_1_cast_cast_fu_627_p1;
    sc_signal< sc_lv<8> > p_Val2_2_fu_640_p0;
    sc_signal< sc_lv<4> > p_Val2_2_fu_640_p1;
    sc_signal< sc_lv<12> > p_Val2_2_fu_640_p2;
    sc_signal< sc_lv<5> > tmp_319_fu_654_p4;
    sc_signal< sc_lv<1> > tmp_321_fu_676_p1;
    sc_signal< sc_lv<1> > tmp_318_fu_646_p3;
    sc_signal< sc_lv<5> > tmp_53_fu_686_p4;
    sc_signal< sc_lv<1> > tmp_52_fu_680_p2;
    sc_signal< sc_lv<6> > tmp_54_fu_696_p3;
    sc_signal< sc_lv<1> > tmp_227_2_fu_704_p2;
    sc_signal< sc_lv<1> > tmp_320_fu_668_p3;
    sc_signal< sc_lv<1> > qb_assign_2_2_fu_710_p2;
    sc_signal< sc_lv<6> > p_Val2_81_2_cast_c_fu_664_p1;
    sc_signal< sc_lv<6> > tmp_228_2_cast_cast_fu_716_p1;
    sc_signal< sc_lv<8> > p_Val2_3_fu_729_p0;
    sc_signal< sc_lv<4> > p_Val2_3_fu_729_p1;
    sc_signal< sc_lv<12> > p_Val2_3_fu_729_p2;
    sc_signal< sc_lv<5> > tmp_323_fu_743_p4;
    sc_signal< sc_lv<1> > tmp_325_fu_765_p1;
    sc_signal< sc_lv<1> > tmp_322_fu_735_p3;
    sc_signal< sc_lv<5> > tmp_58_fu_775_p4;
    sc_signal< sc_lv<1> > tmp_57_fu_769_p2;
    sc_signal< sc_lv<6> > tmp_59_fu_785_p3;
    sc_signal< sc_lv<1> > tmp_227_3_fu_793_p2;
    sc_signal< sc_lv<1> > tmp_324_fu_757_p3;
    sc_signal< sc_lv<1> > qb_assign_2_3_fu_799_p2;
    sc_signal< sc_lv<6> > p_Val2_81_3_cast_c_fu_753_p1;
    sc_signal< sc_lv<6> > tmp_228_3_cast_cast_fu_805_p1;
    sc_signal< sc_lv<8> > tmp1_cast_fu_827_p1;
    sc_signal< sc_lv<8> > tmp2_cast_fu_836_p1;
    sc_signal< sc_lv<8> > tmp3_cast_fu_845_p1;
    sc_signal< sc_lv<8> > tmp4_cast_fu_854_p1;
    sc_signal< sc_lv<8> > tmp_61_fu_883_p34;
    sc_signal< sc_lv<8> > tmp_62_fu_958_p34;
    sc_signal< sc_lv<8> > tmp_63_fu_1033_p34;
    sc_signal< sc_lv<8> > tmp_64_fu_1108_p34;
    sc_signal< sc_lv<8> > p_Val2_22_3_fu_1177_p2;
    sc_signal< sc_lv<8> > p_Val2_22_2_fu_1102_p2;
    sc_signal< sc_lv<8> > p_Val2_22_1_fu_1027_p2;
    sc_signal< sc_lv<8> > p_Val2_s_fu_952_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<20> ap_const_lv20_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<20> ap_const_lv20_80000;
    static const sc_lv<20> ap_const_lv20_1;
    static const sc_lv<14> ap_const_lv14_1000;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<14> ap_const_lv14_1;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_7;
    static const sc_lv<8> ap_const_lv8_B;
    static const sc_lv<8> ap_const_lv8_9;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<8> ap_const_lv8_C;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_6;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_A;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten3_fu_297_p2();
    void thread_exitcond_flatten_fu_309_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_indvar_flatten_next3_fu_303_p2();
    void thread_indvar_flatten_next_fu_441_p3();
    void thread_indvar_flatten_op_fu_435_p2();
    void thread_internal_ap_ready();
    void thread_macRegisters_0_V_fu_830_p2();
    void thread_macRegisters_1_V_fu_839_p2();
    void thread_macRegisters_2_V_fu_848_p2();
    void thread_macRegisters_3_V_fu_857_p2();
    void thread_nm_1_fu_357_p2();
    void thread_nm_mid2_fu_405_p3();
    void thread_nm_mid_fu_315_p3();
    void thread_nm_t_mid2_fu_397_p3();
    void thread_nm_t_mid_fu_331_p3();
    void thread_not_exitcond_flatten_fu_339_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_08_cast_cast_fu_456_p1();
    void thread_p_Val2_1_fu_551_p0();
    void thread_p_Val2_1_fu_551_p1();
    void thread_p_Val2_1_fu_551_p2();
    void thread_p_Val2_22_1_fu_1027_p2();
    void thread_p_Val2_22_2_fu_1102_p2();
    void thread_p_Val2_22_3_fu_1177_p2();
    void thread_p_Val2_2_fu_640_p0();
    void thread_p_Val2_2_fu_640_p1();
    void thread_p_Val2_2_fu_640_p2();
    void thread_p_Val2_3_fu_729_p0();
    void thread_p_Val2_3_fu_729_p1();
    void thread_p_Val2_3_fu_729_p2();
    void thread_p_Val2_81_1_cast_c_fu_575_p1();
    void thread_p_Val2_81_2_cast_c_fu_664_p1();
    void thread_p_Val2_81_3_cast_c_fu_753_p1();
    void thread_p_Val2_cast_cast_fu_486_p1();
    void thread_p_Val2_s_132_fu_462_p0();
    void thread_p_Val2_s_132_fu_462_p1();
    void thread_p_Val2_s_132_fu_462_p2();
    void thread_p_Val2_s_fu_952_p2();
    void thread_qb_assign_2_1_fu_621_p2();
    void thread_qb_assign_2_2_fu_710_p2();
    void thread_qb_assign_2_3_fu_799_p2();
    void thread_qb_assign_2_fu_532_p2();
    void thread_real_start();
    void thread_sf_1_fu_429_p2();
    void thread_sf_cast1_fu_413_p1();
    void thread_sf_mid2_fu_369_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_cast_fu_827_p1();
    void thread_tmp1_fu_542_p2();
    void thread_tmp2_cast_fu_836_p1();
    void thread_tmp2_fu_631_p2();
    void thread_tmp3_cast_fu_845_p1();
    void thread_tmp3_fu_720_p2();
    void thread_tmp4_cast_fu_854_p1();
    void thread_tmp4_fu_809_p2();
    void thread_tmp_138_cast_cast_fu_538_p1();
    void thread_tmp_227_1_fu_615_p2();
    void thread_tmp_227_2_fu_704_p2();
    void thread_tmp_227_3_fu_793_p2();
    void thread_tmp_228_1_cast_cast_fu_627_p1();
    void thread_tmp_228_2_cast_cast_fu_716_p1();
    void thread_tmp_228_3_cast_cast_fu_805_p1();
    void thread_tmp_270_fu_363_p2();
    void thread_tmp_289_fu_345_p2();
    void thread_tmp_309_fu_377_p1();
    void thread_tmp_310_fu_468_p3();
    void thread_tmp_311_fu_476_p4();
    void thread_tmp_312_fu_490_p3();
    void thread_tmp_313_fu_498_p1();
    void thread_tmp_314_fu_557_p3();
    void thread_tmp_315_fu_565_p4();
    void thread_tmp_316_fu_579_p3();
    void thread_tmp_317_fu_587_p1();
    void thread_tmp_318_fu_646_p3();
    void thread_tmp_319_fu_654_p4();
    void thread_tmp_320_fu_668_p3();
    void thread_tmp_321_fu_676_p1();
    void thread_tmp_322_fu_735_p3();
    void thread_tmp_323_fu_743_p4();
    void thread_tmp_324_fu_757_p3();
    void thread_tmp_325_fu_765_p1();
    void thread_tmp_37_fu_417_p2();
    void thread_tmp_38_fu_449_p1();
    void thread_tmp_41_fu_502_p2();
    void thread_tmp_42_fu_508_p4();
    void thread_tmp_43_fu_518_p3();
    void thread_tmp_44_fu_526_p2();
    void thread_tmp_47_fu_591_p2();
    void thread_tmp_48_fu_597_p4();
    void thread_tmp_49_fu_607_p3();
    void thread_tmp_52_fu_680_p2();
    void thread_tmp_53_fu_686_p4();
    void thread_tmp_54_fu_696_p3();
    void thread_tmp_57_fu_769_p2();
    void thread_tmp_58_fu_775_p4();
    void thread_tmp_59_fu_785_p3();
    void thread_tmp_60_fu_423_p2();
    void thread_tmp_90_mid1_fu_381_p3();
    void thread_tmp_90_mid2_fu_389_p3();
    void thread_tmp_90_mid_fu_323_p3();
    void thread_tmp_91_mid_fu_351_p2();
    void thread_tmp_fu_285_p1();
    void thread_tmp_s_fu_289_p3();
    void thread_weights9_m_weights_V_1_address0();
    void thread_weights9_m_weights_V_1_ce0();
    void thread_weights9_m_weights_V_2_address0();
    void thread_weights9_m_weights_V_2_ce0();
    void thread_weights9_m_weights_V_3_address0();
    void thread_weights9_m_weights_V_3_ce0();
    void thread_weights9_m_weights_V_address0();
    void thread_weights9_m_weights_V_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
