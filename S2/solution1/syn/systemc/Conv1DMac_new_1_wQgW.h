// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __Conv1DMac_new_1_wQgW_H__
#define __Conv1DMac_new_1_wQgW_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct Conv1DMac_new_1_wQgW_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 7;
  static const unsigned AddressRange = 4096;
  static const unsigned AddressWidth = 12;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(Conv1DMac_new_1_wQgW_ram) {
        for (unsigned i = 0; i < 128 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[128] = "0b0001111";
        for (unsigned i = 129; i < 147 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[147] = "0b0001101";
        for (unsigned i = 148; i < 157 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[157] = "0b0001110";
        ram[158] = "0b0000000";
        ram[159] = "0b0000000";
        ram[160] = "0b0000000";
        ram[161] = "0b0000000";
        ram[162] = "0b0000001";
        ram[163] = "0b0000001";
        for (unsigned i = 164; i < 184 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[184] = "0b0001111";
        for (unsigned i = 185; i < 192 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[192] = "0b0001110";
        for (unsigned i = 193; i < 201 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[201] = "0b0001110";
        for (unsigned i = 202; i < 221 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[221] = "0b0001110";
        for (unsigned i = 222; i < 227 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[227] = "0b0001111";
        for (unsigned i = 228; i < 249 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[249] = "0b0001111";
        for (unsigned i = 250; i < 644 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[644] = "0b1111111";
        for (unsigned i = 645; i < 668 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[668] = "0b0000001";
        for (unsigned i = 669; i < 674 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[674] = "0b0000001";
        ram[675] = "0b0000000";
        ram[676] = "0b0000000";
        ram[677] = "0b0000000";
        ram[678] = "0b0111010";
        for (unsigned i = 679; i < 687 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[687] = "0b0110011";
        for (unsigned i = 688; i < 702 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[702] = "0b0110101";
        ram[703] = "0b0000001";
        ram[704] = "0b0000000";
        ram[705] = "0b0000000";
        ram[706] = "0b0000001";
        for (unsigned i = 707; i < 720 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[720] = "0b1111111";
        for (unsigned i = 721; i < 733 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[733] = "0b0000001";
        ram[734] = "0b1111111";
        ram[735] = "0b0000000";
        ram[736] = "0b0000000";
        ram[737] = "0b0000001";
        ram[738] = "0b0000000";
        ram[739] = "0b1111111";
        for (unsigned i = 740; i < 1408 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1408] = "0b0010000";
        ram[1409] = "0b0000000";
        ram[1410] = "0b0000000";
        ram[1411] = "0b0000000";
        ram[1412] = "0b1111111";
        for (unsigned i = 1413; i < 1427 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1427] = "0b0001101";
        for (unsigned i = 1428; i < 1437 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1437] = "0b0001110";
        ram[1438] = "0b0000000";
        ram[1439] = "0b0000000";
        ram[1440] = "0b0000000";
        ram[1441] = "0b0000000";
        ram[1442] = "0b0000001";
        ram[1443] = "0b0000001";
        for (unsigned i = 1444; i < 1464 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1464] = "0b0001111";
        for (unsigned i = 1465; i < 1472 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1472] = "0b0001110";
        for (unsigned i = 1473; i < 1481 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1481] = "0b0001110";
        for (unsigned i = 1482; i < 1488 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1488] = "0b1111111";
        for (unsigned i = 1489; i < 1501 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1501] = "0b0001111";
        ram[1502] = "0b1111111";
        ram[1503] = "0b0000000";
        ram[1504] = "0b0000000";
        ram[1505] = "0b0000000";
        ram[1506] = "0b0000000";
        ram[1507] = "0b0001111";
        for (unsigned i = 1508; i < 1529 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1529] = "0b0001111";
        for (unsigned i = 1530; i < 1536 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1536] = "0b1111111";
        for (unsigned i = 1537; i < 1562 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1562] = "0b0100110";
        for (unsigned i = 1563; i < 1600 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1600] = "0b1111111";
        ram[1601] = "0b0000000";
        ram[1602] = "0b0100001";
        for (unsigned i = 1603; i < 1615 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1615] = "0b0100001";
        for (unsigned i = 1616; i < 1635 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1635] = "0b1111111";
        ram[1636] = "0b0000000";
        ram[1637] = "0b0000000";
        ram[1638] = "0b0000000";
        ram[1639] = "0b0000000";
        ram[1640] = "0b0011100";
        for (unsigned i = 1641; i < 1664 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1664] = "0b0001111";
        for (unsigned i = 1665; i < 1683 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1683] = "0b0001101";
        for (unsigned i = 1684; i < 1693 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1693] = "0b0001110";
        ram[1694] = "0b0000000";
        ram[1695] = "0b0000000";
        ram[1696] = "0b0000000";
        ram[1697] = "0b0000000";
        ram[1698] = "0b0000001";
        ram[1699] = "0b0000001";
        for (unsigned i = 1700; i < 1720 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1720] = "0b0001111";
        for (unsigned i = 1721; i < 1728 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1728] = "0b0001110";
        for (unsigned i = 1729; i < 1737 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1737] = "0b0001110";
        for (unsigned i = 1738; i < 1757 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1757] = "0b0001111";
        ram[1758] = "0b1111111";
        ram[1759] = "0b0000000";
        ram[1760] = "0b0000000";
        ram[1761] = "0b0000000";
        ram[1762] = "0b0000000";
        ram[1763] = "0b0001111";
        for (unsigned i = 1764; i < 1785 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[1785] = "0b0001111";
        for (unsigned i = 1786; i < 2944 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[2944] = "0b1111101";
        ram[2945] = "0b0000000";
        ram[2946] = "0b0000000";
        ram[2947] = "0b0000000";
        ram[2948] = "0b1111111";
        for (unsigned i = 2949; i < 2963 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[2963] = "0b1111111";
        for (unsigned i = 2964; i < 2970 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[2970] = "0b1111110";
        ram[2971] = "0b0000000";
        ram[2972] = "0b0101011";
        ram[2973] = "0b1111110";
        ram[2974] = "0b0000000";
        ram[2975] = "0b0000000";
        ram[2976] = "0b0000000";
        ram[2977] = "0b0000000";
        ram[2978] = "0b0010000";
        ram[2979] = "0b0000000";
        ram[2980] = "0b0000000";
        ram[2981] = "0b0000000";
        ram[2982] = "0b1111111";
        for (unsigned i = 2983; i < 2991 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[2991] = "0b1111111";
        for (unsigned i = 2992; i < 3000 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3000] = "0b1111110";
        for (unsigned i = 3001; i < 3006 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3006] = "0b1111111";
        ram[3007] = "0b0110010";
        ram[3008] = "0b1111110";
        ram[3009] = "0b0000000";
        ram[3010] = "0b1111110";
        for (unsigned i = 3011; i < 3017 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3017] = "0b1111110";
        for (unsigned i = 3018; i < 3023 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3023] = "0b1111111";
        ram[3024] = "0b1111111";
        for (unsigned i = 3025; i < 3037 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3037] = "0b1111110";
        ram[3038] = "0b1111110";
        ram[3039] = "0b0000000";
        ram[3040] = "0b0000000";
        ram[3041] = "0b0110001";
        ram[3042] = "0b0000000";
        ram[3043] = "0b1111111";
        for (unsigned i = 3044; i < 3063 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3063] = "0b0000010";
        ram[3064] = "0b0000000";
        ram[3065] = "0b1111110";
        for (unsigned i = 3066; i < 3328 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3328] = "0b0001101";
        ram[3329] = "0b0000000";
        ram[3330] = "0b0000000";
        ram[3331] = "0b0000000";
        ram[3332] = "0b0000001";
        for (unsigned i = 3333; i < 3347 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3347] = "0b0001011";
        for (unsigned i = 3348; i < 3357 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3357] = "0b0001011";
        ram[3358] = "0b0000000";
        ram[3359] = "0b0000000";
        ram[3360] = "0b0000000";
        ram[3361] = "0b0000000";
        ram[3362] = "0b0000001";
        ram[3363] = "0b0000001";
        for (unsigned i = 3364; i < 3384 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3384] = "0b0001100";
        for (unsigned i = 3385; i < 3392 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3392] = "0b0001100";
        for (unsigned i = 3393; i < 3401 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3401] = "0b0001011";
        for (unsigned i = 3402; i < 3408 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3408] = "0b0000001";
        for (unsigned i = 3409; i < 3421 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3421] = "0b0001100";
        ram[3422] = "0b0000001";
        ram[3423] = "0b0000000";
        ram[3424] = "0b0000000";
        ram[3425] = "0b0000000";
        ram[3426] = "0b0000000";
        ram[3427] = "0b0001100";
        for (unsigned i = 3428; i < 3449 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[3449] = "0b0001100";
        for (unsigned i = 3450; i < 4096 ; i = i + 1) {
            ram[i] = "0b0000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(Conv1DMac_new_1_wQgW) {


static const unsigned DataWidth = 7;
static const unsigned AddressRange = 4096;
static const unsigned AddressWidth = 12;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


Conv1DMac_new_1_wQgW_ram* meminst;


SC_CTOR(Conv1DMac_new_1_wQgW) {
meminst = new Conv1DMac_new_1_wQgW_ram("Conv1DMac_new_1_wQgW_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~Conv1DMac_new_1_wQgW() {
    delete meminst;
}


};//endmodule
#endif
