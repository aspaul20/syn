-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Conv1DMac_new403_Lf8_rom is 
    generic(
             DWIDTH     : integer := 4; 
             AWIDTH     : integer := 12; 
             MEM_SIZE    : integer := 4096
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Conv1DMac_new403_Lf8_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "0000", 1 => "0010", 2 to 6=> "0000", 7 => "1111", 8 to 11=> "0000", 
    12 => "0001", 13 to 16=> "0000", 17 to 18=> "0011", 19 => "1110", 20 to 21=> "0000", 
    22 => "0001", 23 => "0010", 24 to 25=> "0000", 26 => "0001", 27 to 29=> "0000", 
    30 => "1111", 31 to 32=> "0000", 33 => "0010", 34 => "0000", 35 => "1110", 
    36 => "0000", 37 => "1110", 38 => "1101", 39 to 41=> "0000", 42 => "1110", 
    43 => "0010", 44 => "0001", 45 => "1101", 46 to 53=> "0000", 54 => "0010", 
    55 => "0000", 56 => "1111", 57 to 58=> "0000", 59 => "1111", 60 => "0011", 
    61 to 65=> "0000", 66 => "1111", 67 to 71=> "0000", 72 => "1110", 73 => "1111", 
    74 to 76=> "0000", 77 => "0010", 78 to 79=> "0000", 80 => "0010", 81 to 82=> "0000", 
    83 => "0011", 84 => "0000", 85 => "0001", 86 to 87=> "0000", 88 => "0001", 
    89 to 91=> "0000", 92 => "0011", 93 to 94=> "0000", 95 => "0001", 96 => "1111", 
    97 to 98=> "0000", 99 => "0011", 100 to 101=> "0000", 102 => "0011", 103 => "0000", 
    104 => "0011", 105 to 117=> "0000", 118 => "1111", 119 => "1110", 120 => "0000", 
    121 => "1111", 122 to 123=> "0000", 124 => "1111", 125 to 127=> "0000", 128 => "1110", 
    129 => "1111", 130 => "0010", 131 to 135=> "0000", 136 => "0011", 137 => "0000", 
    138 => "1101", 139 => "1110", 140 => "0001", 141 => "0010", 142 to 144=> "0000", 
    145 => "1111", 146 to 149=> "0000", 150 => "1110", 151 => "0010", 152 to 153=> "0000", 
    154 => "1111", 155 to 159=> "0000", 160 => "0010", 161 => "0001", 162 => "0011", 
    163 => "0010", 164 to 169=> "0000", 170 => "1110", 171 => "0010", 172 => "1111", 
    173 => "0001", 174 to 176=> "0000", 177 => "0001", 178 to 181=> "0000", 182 => "1101", 
    183 to 185=> "0000", 186 => "1111", 187 => "0011", 188 to 193=> "0000", 194 => "1110", 
    195 to 199=> "0000", 200 => "1111", 201 => "1100", 202 => "1111", 203 to 204=> "0000", 
    205 => "1110", 206 => "0001", 207 => "0000", 208 => "0010", 209 to 215=> "0000", 
    216 => "1111", 217 => "0000", 218 => "1111", 219 to 222=> "0000", 223 => "0001", 
    224 => "1111", 225 to 226=> "0000", 227 => "0100", 228 => "0000", 229 => "1110", 
    230 to 231=> "0000", 232 => "0001", 233 to 235=> "0000", 236 => "1111", 237 => "0000", 
    238 => "0011", 239 to 245=> "0000", 246 => "1111", 247 => "0001", 248 to 251=> "0000", 
    252 => "0011", 253 to 895=> "0000", 896 => "1110", 897 => "0010", 898 => "1110", 
    899 to 902=> "0000", 903 => "1110", 904 => "0011", 905 => "0000", 906 => "1111", 
    907 => "0001", 908 => "1100", 909 => "1101", 910 to 911=> "0000", 912 => "0001", 
    913 to 914=> "0000", 915 => "0010", 916 to 917=> "0000", 918 => "1111", 919 => "1110", 
    920 to 921=> "0000", 922 => "0011", 923 to 925=> "0000", 926 => "0010", 927 => "0000", 
    928 => "0001", 929 => "0011", 930 => "1101", 931 => "0001", 932 => "0000", 
    933 => "0001", 934 => "1110", 935 to 937=> "0000", 938 => "1111", 939 => "1101", 
    940 => "0010", 941 => "1110", 942 to 944=> "0000", 945 => "0001", 946 to 948=> "0000", 
    949 => "1111", 950 => "0001", 951 => "0000", 952 => "1100", 953 => "0000", 
    954 => "0111", 955 => "0001", 956 => "0010", 957 to 961=> "0000", 962 => "0010", 
    963 to 968=> "0000", 969 => "1111", 970 to 973=> "0000", 974 => "1111", 975 => "0000", 
    976 => "1101", 977 to 978=> "0000", 979 => "1111", 980 => "0000", 981 => "1110", 
    982 to 983=> "0000", 984 => "0010", 985 => "0000", 986 => "0001", 987 => "0000", 
    988 => "1110", 989 to 990=> "0000", 991 => "1111", 992 to 994=> "0000", 995 => "0010", 
    996 => "0000", 997 => "1101", 998 => "0000", 999 => "0010", 1000 => "1110", 
    1001 to 1003=> "0000", 1004 => "0010", 1005 to 1013=> "0000", 1014 => "0010", 1015 => "1101", 
    1016 => "0000", 1017 => "1111", 1018 to 1019=> "0000", 1020 => "1111", 1021 => "0000", 
    1022 => "0101", 1023 to 1791=> "0000", 1792 => "1111", 1793 => "0010", 1794 to 1798=> "0000", 
    1799 => "1111", 1800 to 1803=> "0000", 1804 => "0001", 1805 to 1808=> "0000", 1809 => "0011", 
    1810 => "0010", 1811 => "1110", 1812 to 1813=> "0000", 1814 => "0001", 1815 => "0010", 
    1816 to 1817=> "0000", 1818 => "0001", 1819 to 1821=> "0000", 1822 => "1111", 1823 to 1824=> "0000", 
    1825 => "0010", 1826 => "0000", 1827 => "1110", 1828 => "0000", 1829 => "1110", 
    1830 => "1101", 1831 to 1833=> "0000", 1834 => "1110", 1835 => "0010", 1836 => "0001", 
    1837 => "1101", 1838 to 1845=> "0000", 1846 => "0010", 1847 => "0000", 1848 => "1111", 
    1849 => "0000", 1850 => "0001", 1851 => "1111", 1852 => "0011", 1853 to 1857=> "0000", 
    1858 => "1111", 1859 to 1863=> "0000", 1864 => "1110", 1865 => "1111", 1866 to 1868=> "0000", 
    1869 => "0010", 1870 to 1871=> "0000", 1872 => "0010", 1873 to 1874=> "0000", 1875 => "0011", 
    1876 => "0000", 1877 => "0001", 1878 to 1879=> "0000", 1880 => "0001", 1881 to 1883=> "0000", 
    1884 => "0011", 1885 to 1886=> "0000", 1887 => "0001", 1888 => "1111", 1889 to 1890=> "0000", 
    1891 => "0011", 1892 to 1893=> "0000", 1894 => "0010", 1895 => "0000", 1896 => "0011", 
    1897 to 1901=> "0000", 1902 => "1111", 1903 to 1909=> "0000", 1910 => "1111", 1911 => "1110", 
    1912 => "0000", 1913 => "1111", 1914 to 1915=> "0000", 1916 => "1111", 1917 to 2047=> "0000", 
    2048 => "1111", 2049 => "0001", 2050 to 2054=> "0000", 2055 => "1111", 2056 to 2059=> "0000", 
    2060 => "0001", 2061 to 2064=> "0000", 2065 => "0011", 2066 => "0010", 2067 => "1110", 
    2068 to 2069=> "0000", 2070 => "0001", 2071 => "0010", 2072 to 2073=> "0000", 2074 => "0001", 
    2075 to 2077=> "0000", 2078 => "1111", 2079 to 2080=> "0000", 2081 => "0010", 2082 => "0000", 
    2083 => "1110", 2084 => "0000", 2085 => "1110", 2086 => "1101", 2087 to 2089=> "0000", 
    2090 => "1110", 2091 => "0010", 2092 => "0001", 2093 => "1101", 2094 to 2101=> "0000", 
    2102 => "0001", 2103 => "0000", 2104 => "1111", 2105 to 2106=> "0000", 2107 => "1111", 
    2108 => "0011", 2109 to 2113=> "0000", 2114 => "1111", 2115 to 2119=> "0000", 2120 => "1110", 
    2121 => "1111", 2122 to 2124=> "0000", 2125 => "0010", 2126 to 2127=> "0000", 2128 => "0010", 
    2129 to 2130=> "0000", 2131 => "0011", 2132 => "0000", 2133 => "0001", 2134 to 2135=> "0000", 
    2136 => "0001", 2137 to 2139=> "0000", 2140 => "0011", 2141 to 2142=> "0000", 2143 => "0001", 
    2144 => "1111", 2145 to 2146=> "0000", 2147 => "0011", 2148 to 2149=> "0000", 2150 => "0010", 
    2151 => "0000", 2152 => "0011", 2153 to 2165=> "0000", 2166 => "1111", 2167 => "1110", 
    2168 => "0000", 2169 => "1111", 2170 to 2171=> "0000", 2172 => "1111", 2173 => "0000", 
    2174 => "1111", 2175 to 2559=> "0000", 2560 to 2561=> "1110", 2562 => "0010", 2563 to 2567=> "0000", 
    2568 => "0101", 2569 => "0000", 2570 => "1100", 2571 => "1101", 2572 => "0001", 
    2573 => "0010", 2574 to 2575=> "0000", 2576 => "0001", 2577 => "1110", 2578 => "0001", 
    2579 to 2581=> "0000", 2582 => "1101", 2583 => "0011", 2584 to 2585=> "0000", 2586 => "1110", 
    2587 to 2591=> "0000", 2592 => "0011", 2593 => "0001", 2594 => "0100", 2595 => "0011", 
    2596 to 2597=> "0000", 2598 => "1111", 2599 to 2601=> "0000", 2602 => "1101", 2603 => "0010", 
    2604 => "1110", 2605 => "0001", 2606 to 2608=> "0000", 2609 => "0001", 2610 to 2613=> "0000", 
    2614 => "1011", 2615 to 2617=> "0000", 2618 => "1111", 2619 => "0011", 2620 to 2625=> "0000", 
    2626 => "1101", 2627 to 2631=> "0000", 2632 => "1111", 2633 => "1010", 2634 => "1110", 
    2635 to 2636=> "0000", 2637 => "1101", 2638 => "0001", 2639 => "0000", 2640 => "0010", 
    2641 to 2642=> "0000", 2643 => "1111", 2644 => "0000", 2645 => "1111", 2646 to 2647=> "0000", 
    2648 => "1111", 2649 => "0000", 2650 => "1111", 2651 to 2654=> "0000", 2655 => "0001", 
    2656 => "1111", 2657 to 2658=> "0000", 2659 => "0101", 2660 => "0000", 2661 => "1101", 
    2662 to 2663=> "0000", 2664 => "0001", 2665 to 2667=> "0000", 2668 => "1110", 2669 => "0000", 
    2670 => "0101", 2671 to 2677=> "0000", 2678 => "1111", 2679 => "0010", 2680 to 2683=> "0000", 
    2684 => "0101", 2685 to 3327=> "0000", 3328 => "1110", 3329 => "0001", 3330 => "1110", 
    3331 to 3334=> "0000", 3335 => "1111", 3336 => "0010", 3337 => "0000", 3338 => "0011", 
    3339 => "0000", 3340 to 3341=> "0001", 3342 to 3343=> "0000", 3344 => "1101", 3345 => "0000", 
    3346 => "1101", 3347 => "1111", 3348 to 3350=> "0000", 3351 => "1111", 3352 to 3353=> "0000", 
    3354 => "0011", 3355 to 3357=> "0000", 3358 => "0001", 3359 to 3360=> "0000", 3361 => "0011", 
    3362 => "1111", 3363 => "0011", 3364 => "0000", 3365 => "0001", 3366 => "1111", 
    3367 to 3369=> "0000", 3370 => "1110", 3371 => "0100", 3372 => "1111", 3373 to 3376=> "0000", 
    3377 => "1111", 3378 to 3380=> "0000", 3381 => "1110", 3382 => "0011", 3383 => "0000", 
    3384 => "0011", 3385 => "0000", 3386 => "0001", 3387 => "0101", 3388 => "0001", 
    3389 to 3399=> "0000", 3400 to 3401=> "1111", 3402 => "0010", 3403 to 3404=> "0000", 3405 => "0001", 
    3406 => "0010", 3407 => "0000", 3408 => "1110", 3409 => "0000", 3410 => "1111", 
    3411 => "1110", 3412 => "0000", 3413 => "1110", 3414 to 3415=> "0000", 3416 => "0001", 
    3417 => "0000", 3418 => "1110", 3419 => "0000", 3420 => "1110", 3421 to 3422=> "0000", 
    3423 => "0010", 3424 => "0011", 3425 to 3428=> "0000", 3429 => "0001", 3430 => "1101", 
    3431 => "1110", 3432 => "1111", 3433 to 3435=> "0000", 3436 => "0001", 3437 => "0000", 
    3438 => "1111", 3439 to 3445=> "0000", 3446 => "0011", 3447 => "1110", 3448 to 3451=> "0000", 
    3452 => "0001", 3453 => "0000", 3454 => "0001", 3455 to 4095=> "0000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity Conv1DMac_new403_Lf8 is
    generic (
        DataWidth : INTEGER := 4;
        AddressRange : INTEGER := 4096;
        AddressWidth : INTEGER := 12);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Conv1DMac_new403_Lf8 is
    component Conv1DMac_new403_Lf8_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Conv1DMac_new403_Lf8_rom_U :  component Conv1DMac_new403_Lf8_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


