// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv1DMac_new413 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [31:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [13:0] weights16_m_weights_3_address0;
reg    weights16_m_weights_3_ce0;
wire   [4:0] weights16_m_weights_3_q0;
wire   [13:0] weights16_m_weights_2_address0;
reg    weights16_m_weights_2_ce0;
wire   [4:0] weights16_m_weights_2_q0;
wire   [13:0] weights16_m_weights_1_address0;
reg    weights16_m_weights_1_ce0;
wire   [4:0] weights16_m_weights_1_q0;
wire   [13:0] weights16_m_weights_s_address0;
reg    weights16_m_weights_s_ce0;
wire   [5:0] weights16_m_weights_s_q0;
reg    in_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten7_reg_1508;
reg   [0:0] exitcond_flatten7_reg_1508_pp0_iter1_reg;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] tmp_134_reg_1535;
reg   [0:0] tmp_134_reg_1535_pp0_iter3_reg;
reg   [20:0] indvar_flatten7_reg_251;
reg   [15:0] indvar_flatten_reg_262;
reg   [6:0] nm_reg_273;
reg   [8:0] sf_reg_284;
wire   [0:0] exitcond_flatten7_fu_327_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten7_reg_1508_pp0_iter2_reg;
wire   [20:0] indvar_flatten_next7_fu_333_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] nm_t_mid2_fu_427_p3;
reg   [5:0] nm_t_mid2_reg_1517;
reg   [5:0] nm_t_mid2_reg_1517_pp0_iter1_reg;
reg   [5:0] nm_t_mid2_reg_1517_pp0_iter2_reg;
reg   [5:0] nm_t_mid2_reg_1517_pp0_iter3_reg;
wire   [6:0] nm_mid2_fu_435_p3;
wire   [13:0] tmp_114_fu_447_p2;
reg   [13:0] tmp_114_reg_1530;
wire   [0:0] tmp_134_fu_453_p2;
reg   [0:0] tmp_134_reg_1535_pp0_iter1_reg;
reg   [0:0] tmp_134_reg_1535_pp0_iter2_reg;
wire   [8:0] sf_1_fu_459_p2;
wire   [15:0] indvar_flatten_next_fu_471_p3;
reg  signed [7:0] tmp_V_reg_1569;
reg   [4:0] weights16_m_weights_5_reg_1574;
reg   [4:0] weights16_m_weights_7_reg_1579;
reg   [4:0] weights16_m_weights_9_reg_1584;
reg   [6:0] tmp_89_reg_1589;
reg   [0:0] tmp_951_reg_1594;
wire   [0:0] tmp_255_3_fu_554_p2;
reg   [0:0] tmp_255_3_reg_1599;
wire   [6:0] tmp1_fu_649_p2;
reg   [6:0] tmp1_reg_1604;
wire   [6:0] tmp2_fu_738_p2;
reg   [6:0] tmp2_reg_1609;
wire   [6:0] tmp3_fu_827_p2;
reg   [6:0] tmp3_reg_1614;
wire   [7:0] macRegisters_3_V_fu_850_p2;
reg   [7:0] macRegisters_3_V_reg_1619;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
wire   [63:0] tmp_115_fu_479_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] macRegisters_0_V_3_fu_170;
wire   [7:0] macRegisters_0_V_fu_873_p2;
reg   [7:0] macRegisters_1_V_3_fu_174;
wire   [7:0] macRegisters_1_V_fu_882_p2;
reg   [7:0] macRegisters_2_V_3_fu_178;
wire   [7:0] macRegisters_2_V_fu_891_p2;
reg   [7:0] macRegisters_3_V_3_fu_182;
wire   [5:0] tmp_fu_315_p1;
wire   [0:0] exitcond_flatten_fu_339_p2;
wire   [13:0] tmp_s_fu_319_p3;
wire   [0:0] tmp_883_fu_375_p2;
wire   [0:0] not_exitcond_flatten_fu_369_p2;
wire   [6:0] nm_mid_fu_345_p3;
wire   [0:0] tmp_115_mid_fu_381_p2;
wire   [0:0] tmp_855_fu_393_p2;
wire   [6:0] nm_1_fu_387_p2;
wire   [5:0] tmp_937_fu_407_p1;
wire   [13:0] tmp_114_mid1_fu_411_p3;
wire   [13:0] tmp_114_mid_fu_353_p3;
wire   [5:0] nm_t_mid_fu_361_p3;
wire   [8:0] sf_mid2_fu_399_p3;
wire   [13:0] tmp_114_mid2_fu_419_p3;
wire   [13:0] sf_cast2_fu_443_p1;
wire   [15:0] indvar_flatten_op_fu_465_p2;
wire  signed [7:0] p_08_cast_cast_fu_486_p0;
wire  signed [7:0] p_Val2_3_fu_494_p0;
wire  signed [5:0] p_Val2_3_fu_494_p1;
wire   [13:0] p_Val2_3_fu_494_p2;
wire   [0:0] tmp_952_fu_526_p1;
wire   [0:0] tmp_950_fu_500_p3;
wire   [4:0] tmp_132_fu_536_p4;
wire   [0:0] tmp_131_fu_530_p2;
wire   [5:0] tmp_133_fu_546_p3;
wire  signed [7:0] p_Val2_s_fu_569_p0;
wire  signed [12:0] p_08_cast1_cast_fu_563_p1;
wire  signed [4:0] p_Val2_s_fu_569_p1;
wire   [12:0] p_Val2_s_fu_569_p2;
wire   [5:0] tmp_939_fu_583_p4;
wire   [0:0] tmp_941_fu_605_p1;
wire   [0:0] tmp_938_fu_575_p3;
wire   [4:0] tmp_118_fu_615_p4;
wire   [0:0] tmp_117_fu_609_p2;
wire   [5:0] tmp_119_fu_625_p3;
wire   [0:0] tmp_120_fu_633_p2;
wire   [0:0] tmp_940_fu_597_p3;
wire   [0:0] qb_assign_1_fu_639_p2;
wire  signed [6:0] p_Val2_cast_fu_593_p1;
wire   [6:0] tmp_121_cast_fu_645_p1;
wire  signed [7:0] p_Val2_1_fu_658_p0;
wire  signed [4:0] p_Val2_1_fu_658_p1;
wire   [12:0] p_Val2_1_fu_658_p2;
wire   [5:0] tmp_943_fu_672_p4;
wire   [0:0] tmp_945_fu_694_p1;
wire   [0:0] tmp_942_fu_664_p3;
wire   [4:0] tmp_124_fu_704_p4;
wire   [0:0] tmp_123_fu_698_p2;
wire   [5:0] tmp_125_fu_714_p3;
wire   [0:0] tmp_255_1_fu_722_p2;
wire   [0:0] tmp_944_fu_686_p3;
wire   [0:0] qb_assign_1_1_fu_728_p2;
wire  signed [6:0] p_Val2_87_1_cast_fu_682_p1;
wire   [6:0] tmp_256_1_cast_fu_734_p1;
wire  signed [7:0] p_Val2_2_fu_747_p0;
wire  signed [4:0] p_Val2_2_fu_747_p1;
wire   [12:0] p_Val2_2_fu_747_p2;
wire   [5:0] tmp_947_fu_761_p4;
wire   [0:0] tmp_949_fu_783_p1;
wire   [0:0] tmp_946_fu_753_p3;
wire   [4:0] tmp_128_fu_793_p4;
wire   [0:0] tmp_127_fu_787_p2;
wire   [5:0] tmp_129_fu_803_p3;
wire   [0:0] tmp_255_2_fu_811_p2;
wire   [0:0] tmp_948_fu_775_p3;
wire   [0:0] qb_assign_1_2_fu_817_p2;
wire  signed [6:0] p_Val2_87_2_cast_fu_771_p1;
wire   [6:0] tmp_256_2_cast_fu_823_p1;
wire   [0:0] qb_assign_1_3_fu_836_p2;
wire   [7:0] tmp_256_3_fu_840_p1;
wire   [7:0] tmp4_fu_844_p2;
wire  signed [7:0] tmp_90_fu_833_p1;
wire  signed [7:0] tmp1_cast_fu_870_p1;
wire  signed [7:0] tmp2_cast_fu_879_p1;
wire  signed [7:0] tmp3_cast_fu_888_p1;
wire   [7:0] tmp_91_fu_912_p66;
wire   [7:0] tmp_92_fu_1051_p66;
wire   [7:0] tmp_93_fu_1190_p66;
wire   [7:0] tmp_94_fu_1329_p66;
wire   [7:0] p_Val2_21_3_fu_1462_p2;
wire   [7:0] p_Val2_21_2_fu_1323_p2;
wire   [7:0] p_Val2_21_1_fu_1184_p2;
wire   [7:0] p_Val2_9_fu_1045_p2;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

Conv1DMac_new413_VhK #(
    .DataWidth( 5 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights16_m_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights16_m_weights_3_address0),
    .ce0(weights16_m_weights_3_ce0),
    .q0(weights16_m_weights_3_q0)
);

Conv1DMac_new413_WhU #(
    .DataWidth( 5 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights16_m_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights16_m_weights_2_address0),
    .ce0(weights16_m_weights_2_ce0),
    .q0(weights16_m_weights_2_q0)
);

Conv1DMac_new413_Xh4 #(
    .DataWidth( 5 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights16_m_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights16_m_weights_1_address0),
    .ce0(weights16_m_weights_1_ce0),
    .q0(weights16_m_weights_1_q0)
);

Conv1DMac_new413_Yie #(
    .DataWidth( 6 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights16_m_weights_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights16_m_weights_s_address0),
    .ce0(weights16_m_weights_s_ce0),
    .q0(weights16_m_weights_s_q0)
);

computeS3_mux_646yd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_U130(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd16),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(8'd12),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd13),
    .din12(8'd10),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd9),
    .din17(8'd11),
    .din18(8'd0),
    .din19(8'd0),
    .din20(8'd0),
    .din21(8'd10),
    .din22(8'd0),
    .din23(8'd0),
    .din24(8'd0),
    .din25(8'd13),
    .din26(8'd0),
    .din27(8'd0),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd8),
    .din31(8'd12),
    .din32(8'd0),
    .din33(8'd18),
    .din34(8'd0),
    .din35(8'd14),
    .din36(8'd5),
    .din37(8'd0),
    .din38(8'd0),
    .din39(8'd0),
    .din40(8'd0),
    .din41(8'd0),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd0),
    .din45(8'd0),
    .din46(8'd5),
    .din47(8'd0),
    .din48(8'd0),
    .din49(8'd12),
    .din50(8'd27),
    .din51(8'd0),
    .din52(8'd11),
    .din53(8'd0),
    .din54(8'd13),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd6),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd0),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd11),
    .din64(nm_t_mid2_reg_1517_pp0_iter3_reg),
    .dout(tmp_91_fu_912_p66)
);

computeS3_mux_646yd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_U131(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd8),
    .din11(8'd13),
    .din12(8'd0),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd0),
    .din17(8'd0),
    .din18(8'd0),
    .din19(8'd0),
    .din20(8'd0),
    .din21(8'd0),
    .din22(8'd0),
    .din23(8'd0),
    .din24(8'd0),
    .din25(8'd0),
    .din26(8'd0),
    .din27(8'd0),
    .din28(8'd3),
    .din29(8'd0),
    .din30(8'd255),
    .din31(8'd0),
    .din32(8'd0),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd0),
    .din37(8'd0),
    .din38(8'd0),
    .din39(8'd0),
    .din40(8'd12),
    .din41(8'd0),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd10),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd12),
    .din48(8'd0),
    .din49(8'd0),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd0),
    .din53(8'd0),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd6),
    .din57(8'd0),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd0),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1517_pp0_iter3_reg),
    .dout(tmp_92_fu_1051_p66)
);

computeS3_mux_646yd2_x_x_x_x_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_x_x_x_x_x_U132(
    .din0(8'd0),
    .din1(8'd252),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd10),
    .din10(8'd0),
    .din11(8'd9),
    .din12(8'd0),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd0),
    .din17(8'd0),
    .din18(8'd0),
    .din19(8'd7),
    .din20(8'd0),
    .din21(8'd0),
    .din22(8'd6),
    .din23(8'd0),
    .din24(8'd0),
    .din25(8'd0),
    .din26(8'd0),
    .din27(8'd9),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd0),
    .din31(8'd0),
    .din32(8'd0),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd0),
    .din37(8'd0),
    .din38(8'd11),
    .din39(8'd9),
    .din40(8'd0),
    .din41(8'd0),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd0),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd0),
    .din48(8'd13),
    .din49(8'd0),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd0),
    .din53(8'd0),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd0),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd0),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1517_pp0_iter3_reg),
    .dout(tmp_93_fu_1190_p66)
);

computeS3_mux_646yd2_x_x_x_x_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_x_x_x_x_x_U133(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd19),
    .din6(8'd3),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd8),
    .din11(8'd0),
    .din12(8'd0),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd0),
    .din17(8'd0),
    .din18(8'd0),
    .din19(8'd0),
    .din20(8'd0),
    .din21(8'd0),
    .din22(8'd0),
    .din23(8'd0),
    .din24(8'd0),
    .din25(8'd0),
    .din26(8'd9),
    .din27(8'd0),
    .din28(8'd254),
    .din29(8'd0),
    .din30(8'd0),
    .din31(8'd0),
    .din32(8'd0),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd12),
    .din37(8'd0),
    .din38(8'd0),
    .din39(8'd11),
    .din40(8'd0),
    .din41(8'd0),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd0),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd19),
    .din48(8'd0),
    .din49(8'd0),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd9),
    .din53(8'd0),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd12),
    .din57(8'd21),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd0),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd12),
    .din64(nm_t_mid2_reg_1517_pp0_iter3_reg),
    .dout(tmp_94_fu_1329_p66)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten7_fu_327_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten7_reg_251 <= indvar_flatten_next7_fu_333_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten7_reg_251 <= 21'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten7_fu_327_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_262 <= indvar_flatten_next_fu_471_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_262 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_134_reg_1535_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_0_V_3_fu_170 <= macRegisters_0_V_fu_873_p2;
    end else if ((((tmp_134_reg_1535_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        macRegisters_0_V_3_fu_170 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_134_reg_1535_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_1_V_3_fu_174 <= macRegisters_1_V_fu_882_p2;
    end else if ((((tmp_134_reg_1535_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        macRegisters_1_V_3_fu_174 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_134_reg_1535_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_2_V_3_fu_178 <= macRegisters_2_V_fu_891_p2;
    end else if ((((tmp_134_reg_1535_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        macRegisters_2_V_3_fu_178 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_134_reg_1535_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_3_V_3_fu_182 <= macRegisters_3_V_fu_850_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_134_reg_1535_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_3_V_3_fu_182 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten7_fu_327_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nm_reg_273 <= nm_mid2_fu_435_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nm_reg_273 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten7_fu_327_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sf_reg_284 <= sf_1_fu_459_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sf_reg_284 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten7_reg_1508 <= exitcond_flatten7_fu_327_p2;
        exitcond_flatten7_reg_1508_pp0_iter1_reg <= exitcond_flatten7_reg_1508;
        nm_t_mid2_reg_1517_pp0_iter1_reg <= nm_t_mid2_reg_1517;
        tmp_134_reg_1535_pp0_iter1_reg <= tmp_134_reg_1535;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_flatten7_reg_1508_pp0_iter2_reg <= exitcond_flatten7_reg_1508_pp0_iter1_reg;
        nm_t_mid2_reg_1517_pp0_iter2_reg <= nm_t_mid2_reg_1517_pp0_iter1_reg;
        nm_t_mid2_reg_1517_pp0_iter3_reg <= nm_t_mid2_reg_1517_pp0_iter2_reg;
        tmp_134_reg_1535_pp0_iter2_reg <= tmp_134_reg_1535_pp0_iter1_reg;
        tmp_134_reg_1535_pp0_iter3_reg <= tmp_134_reg_1535_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten7_reg_1508_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_3_V_reg_1619 <= macRegisters_3_V_fu_850_p2;
        tmp1_reg_1604 <= tmp1_fu_649_p2;
        tmp2_reg_1609 <= tmp2_fu_738_p2;
        tmp3_reg_1614 <= tmp3_fu_827_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten7_fu_327_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nm_t_mid2_reg_1517 <= nm_t_mid2_fu_427_p3;
        tmp_114_reg_1530 <= tmp_114_fu_447_p2;
        tmp_134_reg_1535 <= tmp_134_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten7_reg_1508_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_255_3_reg_1599 <= tmp_255_3_fu_554_p2;
        tmp_89_reg_1589 <= {{p_Val2_3_fu_494_p2[13:7]}};
        tmp_951_reg_1594 <= p_Val2_3_fu_494_p2[32'd6];
        tmp_V_reg_1569 <= in_V_V_dout;
        weights16_m_weights_5_reg_1574 <= weights16_m_weights_3_q0;
        weights16_m_weights_7_reg_1579 <= weights16_m_weights_2_q0;
        weights16_m_weights_9_reg_1584 <= weights16_m_weights_1_q0;
    end
end

always @ (*) begin
    if ((exitcond_flatten7_fu_327_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten7_reg_1508_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten7_reg_1508_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_134_reg_1535_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_134_reg_1535_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights16_m_weights_1_ce0 = 1'b1;
    end else begin
        weights16_m_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights16_m_weights_2_ce0 = 1'b1;
    end else begin
        weights16_m_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights16_m_weights_3_ce0 = 1'b1;
    end else begin
        weights16_m_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights16_m_weights_s_ce0 = 1'b1;
    end else begin
        weights16_m_weights_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten7_fu_327_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((exitcond_flatten7_fu_327_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_134_reg_1535_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten7_reg_1508_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_134_reg_1535_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten7_reg_1508_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_134_reg_1535_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten7_reg_1508_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((exitcond_flatten7_reg_1508_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((tmp_134_reg_1535_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign exitcond_flatten7_fu_327_p2 = ((indvar_flatten7_reg_251 == 21'd1048576) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_339_p2 = ((indvar_flatten_reg_262 == 16'd16384) ? 1'b1 : 1'b0);

assign indvar_flatten_next7_fu_333_p2 = (21'd1 + indvar_flatten7_reg_251);

assign indvar_flatten_next_fu_471_p3 = ((exitcond_flatten_fu_339_p2[0:0] === 1'b1) ? 16'd1 : indvar_flatten_op_fu_465_p2);

assign indvar_flatten_op_fu_465_p2 = (indvar_flatten_reg_262 + 16'd1);

assign macRegisters_0_V_fu_873_p2 = ($signed(tmp1_cast_fu_870_p1) + $signed(macRegisters_0_V_3_fu_170));

assign macRegisters_1_V_fu_882_p2 = ($signed(tmp2_cast_fu_879_p1) + $signed(macRegisters_1_V_3_fu_174));

assign macRegisters_2_V_fu_891_p2 = ($signed(tmp3_cast_fu_888_p1) + $signed(macRegisters_2_V_3_fu_178));

assign macRegisters_3_V_fu_850_p2 = ($signed(tmp4_fu_844_p2) + $signed(tmp_90_fu_833_p1));

assign nm_1_fu_387_p2 = (7'd1 + nm_mid_fu_345_p3);

assign nm_mid2_fu_435_p3 = ((tmp_115_mid_fu_381_p2[0:0] === 1'b1) ? nm_1_fu_387_p2 : nm_mid_fu_345_p3);

assign nm_mid_fu_345_p3 = ((exitcond_flatten_fu_339_p2[0:0] === 1'b1) ? 7'd0 : nm_reg_273);

assign nm_t_mid2_fu_427_p3 = ((tmp_115_mid_fu_381_p2[0:0] === 1'b1) ? tmp_937_fu_407_p1 : nm_t_mid_fu_361_p3);

assign nm_t_mid_fu_361_p3 = ((exitcond_flatten_fu_339_p2[0:0] === 1'b1) ? 6'd0 : tmp_fu_315_p1);

assign not_exitcond_flatten_fu_369_p2 = (exitcond_flatten_fu_339_p2 ^ 1'd1);

assign out_V_V_din = {{{{p_Val2_21_3_fu_1462_p2}, {p_Val2_21_2_fu_1323_p2}}, {p_Val2_21_1_fu_1184_p2}}, {p_Val2_9_fu_1045_p2}};

assign p_08_cast1_cast_fu_563_p1 = tmp_V_reg_1569;

assign p_08_cast_cast_fu_486_p0 = in_V_V_dout;

assign p_Val2_1_fu_658_p0 = p_08_cast1_cast_fu_563_p1;

assign p_Val2_1_fu_658_p1 = weights16_m_weights_7_reg_1579;

assign p_Val2_1_fu_658_p2 = ($signed(p_Val2_1_fu_658_p0) * $signed(p_Val2_1_fu_658_p1));

assign p_Val2_21_1_fu_1184_p2 = (macRegisters_1_V_fu_882_p2 + tmp_92_fu_1051_p66);

assign p_Val2_21_2_fu_1323_p2 = (macRegisters_2_V_fu_891_p2 + tmp_93_fu_1190_p66);

assign p_Val2_21_3_fu_1462_p2 = (macRegisters_3_V_reg_1619 + tmp_94_fu_1329_p66);

assign p_Val2_2_fu_747_p0 = p_08_cast1_cast_fu_563_p1;

assign p_Val2_2_fu_747_p1 = weights16_m_weights_9_reg_1584;

assign p_Val2_2_fu_747_p2 = ($signed(p_Val2_2_fu_747_p0) * $signed(p_Val2_2_fu_747_p1));

assign p_Val2_3_fu_494_p0 = p_08_cast_cast_fu_486_p0;

assign p_Val2_3_fu_494_p1 = weights16_m_weights_s_q0;

assign p_Val2_3_fu_494_p2 = ($signed(p_Val2_3_fu_494_p0) * $signed(p_Val2_3_fu_494_p1));

assign p_Val2_87_1_cast_fu_682_p1 = $signed(tmp_943_fu_672_p4);

assign p_Val2_87_2_cast_fu_771_p1 = $signed(tmp_947_fu_761_p4);

assign p_Val2_9_fu_1045_p2 = (macRegisters_0_V_fu_873_p2 + tmp_91_fu_912_p66);

assign p_Val2_cast_fu_593_p1 = $signed(tmp_939_fu_583_p4);

assign p_Val2_s_fu_569_p0 = p_08_cast1_cast_fu_563_p1;

assign p_Val2_s_fu_569_p1 = weights16_m_weights_5_reg_1574;

assign p_Val2_s_fu_569_p2 = ($signed(p_Val2_s_fu_569_p0) * $signed(p_Val2_s_fu_569_p1));

assign qb_assign_1_1_fu_728_p2 = (tmp_944_fu_686_p3 & tmp_255_1_fu_722_p2);

assign qb_assign_1_2_fu_817_p2 = (tmp_948_fu_775_p3 & tmp_255_2_fu_811_p2);

assign qb_assign_1_3_fu_836_p2 = (tmp_951_reg_1594 & tmp_255_3_reg_1599);

assign qb_assign_1_fu_639_p2 = (tmp_940_fu_597_p3 & tmp_120_fu_633_p2);

assign sf_1_fu_459_p2 = (sf_mid2_fu_399_p3 + 9'd1);

assign sf_cast2_fu_443_p1 = sf_mid2_fu_399_p3;

assign sf_mid2_fu_399_p3 = ((tmp_855_fu_393_p2[0:0] === 1'b1) ? 9'd0 : sf_reg_284);

assign start_out = real_start;

assign tmp1_cast_fu_870_p1 = $signed(tmp1_reg_1604);

assign tmp1_fu_649_p2 = ($signed(p_Val2_cast_fu_593_p1) + $signed(tmp_121_cast_fu_645_p1));

assign tmp2_cast_fu_879_p1 = $signed(tmp2_reg_1609);

assign tmp2_fu_738_p2 = ($signed(p_Val2_87_1_cast_fu_682_p1) + $signed(tmp_256_1_cast_fu_734_p1));

assign tmp3_cast_fu_888_p1 = $signed(tmp3_reg_1614);

assign tmp3_fu_827_p2 = ($signed(p_Val2_87_2_cast_fu_771_p1) + $signed(tmp_256_2_cast_fu_823_p1));

assign tmp4_fu_844_p2 = (macRegisters_3_V_3_fu_182 + tmp_256_3_fu_840_p1);

assign tmp_114_fu_447_p2 = (tmp_114_mid2_fu_419_p3 + sf_cast2_fu_443_p1);

assign tmp_114_mid1_fu_411_p3 = {{tmp_937_fu_407_p1}, {8'd0}};

assign tmp_114_mid2_fu_419_p3 = ((tmp_115_mid_fu_381_p2[0:0] === 1'b1) ? tmp_114_mid1_fu_411_p3 : tmp_114_mid_fu_353_p3);

assign tmp_114_mid_fu_353_p3 = ((exitcond_flatten_fu_339_p2[0:0] === 1'b1) ? 14'd0 : tmp_s_fu_319_p3);

assign tmp_115_fu_479_p1 = tmp_114_reg_1530;

assign tmp_115_mid_fu_381_p2 = (tmp_883_fu_375_p2 & not_exitcond_flatten_fu_369_p2);

assign tmp_117_fu_609_p2 = (tmp_941_fu_605_p1 | tmp_938_fu_575_p3);

assign tmp_118_fu_615_p4 = {{p_Val2_s_fu_569_p2[5:1]}};

assign tmp_119_fu_625_p3 = {{tmp_118_fu_615_p4}, {tmp_117_fu_609_p2}};

assign tmp_120_fu_633_p2 = ((tmp_119_fu_625_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_121_cast_fu_645_p1 = qb_assign_1_fu_639_p2;

assign tmp_123_fu_698_p2 = (tmp_945_fu_694_p1 | tmp_942_fu_664_p3);

assign tmp_124_fu_704_p4 = {{p_Val2_1_fu_658_p2[5:1]}};

assign tmp_125_fu_714_p3 = {{tmp_124_fu_704_p4}, {tmp_123_fu_698_p2}};

assign tmp_127_fu_787_p2 = (tmp_949_fu_783_p1 | tmp_946_fu_753_p3);

assign tmp_128_fu_793_p4 = {{p_Val2_2_fu_747_p2[5:1]}};

assign tmp_129_fu_803_p3 = {{tmp_128_fu_793_p4}, {tmp_127_fu_787_p2}};

assign tmp_131_fu_530_p2 = (tmp_952_fu_526_p1 | tmp_950_fu_500_p3);

assign tmp_132_fu_536_p4 = {{p_Val2_3_fu_494_p2[5:1]}};

assign tmp_133_fu_546_p3 = {{tmp_132_fu_536_p4}, {tmp_131_fu_530_p2}};

assign tmp_134_fu_453_p2 = ((sf_mid2_fu_399_p3 == 9'd255) ? 1'b1 : 1'b0);

assign tmp_255_1_fu_722_p2 = ((tmp_125_fu_714_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_255_2_fu_811_p2 = ((tmp_129_fu_803_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_255_3_fu_554_p2 = ((tmp_133_fu_546_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_256_1_cast_fu_734_p1 = qb_assign_1_1_fu_728_p2;

assign tmp_256_2_cast_fu_823_p1 = qb_assign_1_2_fu_817_p2;

assign tmp_256_3_fu_840_p1 = qb_assign_1_3_fu_836_p2;

assign tmp_855_fu_393_p2 = (tmp_115_mid_fu_381_p2 | exitcond_flatten_fu_339_p2);

assign tmp_883_fu_375_p2 = ((sf_reg_284 == 9'd256) ? 1'b1 : 1'b0);

assign tmp_90_fu_833_p1 = $signed(tmp_89_reg_1589);

assign tmp_937_fu_407_p1 = nm_1_fu_387_p2[5:0];

assign tmp_938_fu_575_p3 = p_Val2_s_fu_569_p2[32'd12];

assign tmp_939_fu_583_p4 = {{p_Val2_s_fu_569_p2[12:7]}};

assign tmp_940_fu_597_p3 = p_Val2_s_fu_569_p2[32'd6];

assign tmp_941_fu_605_p1 = p_Val2_s_fu_569_p2[0:0];

assign tmp_942_fu_664_p3 = p_Val2_1_fu_658_p2[32'd12];

assign tmp_943_fu_672_p4 = {{p_Val2_1_fu_658_p2[12:7]}};

assign tmp_944_fu_686_p3 = p_Val2_1_fu_658_p2[32'd6];

assign tmp_945_fu_694_p1 = p_Val2_1_fu_658_p2[0:0];

assign tmp_946_fu_753_p3 = p_Val2_2_fu_747_p2[32'd12];

assign tmp_947_fu_761_p4 = {{p_Val2_2_fu_747_p2[12:7]}};

assign tmp_948_fu_775_p3 = p_Val2_2_fu_747_p2[32'd6];

assign tmp_949_fu_783_p1 = p_Val2_2_fu_747_p2[0:0];

assign tmp_950_fu_500_p3 = p_Val2_3_fu_494_p2[32'd13];

assign tmp_952_fu_526_p1 = p_Val2_3_fu_494_p2[0:0];

assign tmp_fu_315_p1 = nm_reg_273[5:0];

assign tmp_s_fu_319_p3 = {{tmp_fu_315_p1}, {8'd0}};

assign weights16_m_weights_1_address0 = tmp_115_fu_479_p1;

assign weights16_m_weights_2_address0 = tmp_115_fu_479_p1;

assign weights16_m_weights_3_address0 = tmp_115_fu_479_p1;

assign weights16_m_weights_s_address0 = tmp_115_fu_479_p1;

endmodule //Conv1DMac_new413
