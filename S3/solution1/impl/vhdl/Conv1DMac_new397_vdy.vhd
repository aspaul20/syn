-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Conv1DMac_new397_vdy_rom is 
    generic(
             DWIDTH     : integer := 5; 
             AWIDTH     : integer := 14; 
             MEM_SIZE    : integer := 16384
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Conv1DMac_new397_vdy_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 1280=> "00000", 1281 => "11111", 1282 to 1283=> "00000", 1284 => "11111", 1285 to 1289=> "00000", 
    1290 => "11111", 1291 to 1292=> "00000", 1293 => "00011", 1294 to 1304=> "00000", 1305 => "11111", 
    1306 => "00101", 1307 to 1309=> "00000", 1310 => "11111", 1311 to 1318=> "00000", 1319 => "00010", 
    1320 to 1321=> "00000", 1322 => "11111", 1323 => "00000", 1324 => "11111", 1325 to 1331=> "00000", 
    1332 => "11111", 1333 to 1338=> "00000", 1339 => "00010", 1340 to 1354=> "00000", 1355 => "00101", 
    1356 to 1371=> "00000", 1372 => "00111", 1373 => "11111", 1374 => "00000", 1375 => "00001", 
    1376 to 1382=> "00000", 1383 => "00110", 1384 => "11111", 1385 to 1389=> "00000", 1390 => "00101", 
    1391 to 1420=> "00000", 1421 => "00110", 1422 to 1424=> "00000", 1425 => "00001", 1426 to 1432=> "00000", 
    1433 => "00001", 1434 => "01011", 1435 => "11111", 1436 to 1446=> "00000", 1447 => "00100", 
    1448 to 1466=> "00000", 1467 => "00101", 1468 to 1482=> "00000", 1483 => "01001", 1484 to 1499=> "00000", 
    1500 => "01101", 1501 => "00001", 1502 to 1504=> "00000", 1505 => "11111", 1506 to 1510=> "00000", 
    1511 => "01100", 1512 to 1517=> "00000", 1518 => "01001", 1519 to 1522=> "00000", 1523 => "11111", 
    1524 to 4864=> "00000", 4865 => "00011", 4866 to 4867=> "00000", 4868 => "00011", 4869 to 4873=> "00000", 
    4874 => "00011", 4875 to 4888=> "00000", 4889 => "00011", 4890 to 4891=> "11111", 4892 to 4893=> "00000", 
    4894 => "00011", 4895 to 4905=> "00000", 4906 => "00011", 4907 => "00000", 4908 => "00011", 
    4909 to 4915=> "00000", 4916 => "00011", 4917 to 4938=> "00000", 4939 => "11111", 4940 to 4955=> "00000", 
    4956 => "11111", 4957 => "00011", 4958 to 4960=> "00000", 4961 => "11111", 4962 to 4966=> "00000", 
    4967 => "11111", 4968 => "00010", 4969 to 4973=> "00000", 4974 => "11111", 4975 to 4978=> "00000", 
    4979 => "11111", 4980 to 4992=> "00000", 4993 => "01001", 4994 to 4995=> "00000", 4996 => "01001", 
    4997 to 5001=> "00000", 5002 => "01001", 5003 => "11111", 5004 => "00000", 5005 => "00001", 
    5006 to 5008=> "00000", 5009 => "00001", 5010 to 5016=> "00000", 5017 => "01001", 5018 => "00001", 
    5019 => "11111", 5020 to 5021=> "00000", 5022 => "01001", 5023 to 5028=> "00000", 5029 => "11111", 
    5030 => "00000", 5031 => "00001", 5032 to 5033=> "00000", 5034 => "01001", 5035 => "00000", 
    5036 => "01001", 5037 to 5039=> "00000", 5040 => "11111", 5041 => "00000", 5042 => "11111", 
    5043 => "00000", 5044 => "01001", 5045 to 5050=> "00000", 5051 => "00001", 5052 to 5066=> "00000", 
    5067 => "00001", 5068 to 5084=> "00000", 5085 => "01001", 5086 to 5088=> "00000", 5089 => "11111", 
    5090 to 5094=> "00000", 5095 => "00001", 5096 => "00111", 5097 to 5376=> "00000", 5377 => "11111", 
    5378 to 5379=> "00000", 5380 => "11111", 5381 to 5385=> "00000", 5386 => "11111", 5387 => "00111", 
    5388 => "00000", 5389 => "11111", 5390 to 5395=> "00000", 5396 => "00001", 5397 to 5400=> "00000", 
    5401 to 5402=> "11111", 5403 to 5405=> "00000", 5406 => "11111", 5407 to 5412=> "00000", 5413 => "00111", 
    5414 to 5417=> "00000", 5418 => "11111", 5419 => "00000", 5420 => "11111", 5421 => "00001", 
    5422 to 5423=> "00000", 5424 => "00111", 5425 => "00000", 5426 => "00111", 5427 to 5450=> "00000", 
    5451 => "11111", 5452 to 5453=> "00000", 5454 => "00110", 5455 to 5467=> "00000", 5468 => "11111", 
    5469 to 5470=> "00000", 5471 => "00001", 5472 to 5478=> "00000", 5479 to 5480=> "11111", 5481 to 5485=> "00000", 
    5486 => "11111", 5487 to 5504=> "00000", 5505 => "00001", 5506 to 5507=> "00000", 5508 => "00001", 
    5509 to 5513=> "00000", 5514 => "00001", 5515 => "01100", 5516 => "00000", 5517 => "00001", 
    5518 to 5520=> "00000", 5521 => "00001", 5522 to 5523=> "00000", 5524 => "11111", 5525 to 5528=> "00000", 
    5529 to 5530=> "00001", 5531 to 5533=> "00000", 5534 => "00001", 5535 to 5540=> "00000", 5541 => "01100", 
    5542 => "00000", 5543 => "00001", 5544 to 5545=> "00000", 5546 => "00001", 5547 => "00000", 
    5548 => "00001", 5549 => "11111", 5550 to 5551=> "00000", 5552 => "01101", 5553 => "00000", 
    5554 => "01101", 5555 => "00000", 5556 => "00001", 5557 to 5562=> "00000", 5563 => "00001", 
    5564 to 5578=> "00000", 5579 => "00001", 5580 to 5581=> "00000", 5582 => "01011", 5583 to 5596=> "00000", 
    5597 => "00001", 5598 => "00000", 5599 => "11111", 5600 => "00000", 5601 => "11111", 
    5602 to 5606=> "00000", 5607 to 5608=> "00001", 5609 to 5618=> "00000", 5619 => "11111", 5620 to 10512=> "00000", 
    10513 => "00011", 10514 to 10515=> "00000", 10516 => "11111", 10517 to 10521=> "00000", 10522 => "11111", 
    10523 => "00110", 10524 to 10540=> "00000", 10541 => "11111", 10542 to 10587=> "00000", 10588 => "11111", 
    10589 to 10590=> "00000", 10591 => "11111", 10592 => "00000", 10593 => "00101", 10594 to 10598=> "00000", 
    10599 => "11111", 10600 to 10605=> "00000", 10606 => "11111", 10607 to 10610=> "00000", 10611 => "00101", 
    10612 to 10627=> "00000", 10628 => "00001", 10629 to 10636=> "00000", 10637 => "00001", 10638 to 10640=> "00000", 
    10641 => "00111", 10642 to 10648=> "00000", 10649 to 10650=> "00001", 10651 => "01101", 10652 to 10653=> "00000", 
    10654 => "00001", 10655 to 10662=> "00000", 10663 => "00001", 10664 to 10682=> "00000", 10683 => "00001", 
    10684 to 10698=> "00000", 10699 => "00001", 10700 to 10715=> "00000", 10716 => "00001", 10717 to 10720=> "00000", 
    10721 => "01100", 10722 to 10726=> "00000", 10727 to 10728=> "00001", 10729 to 10738=> "00000", 10739 => "01101", 
    10740 to 12304=> "00000", 12305 => "00011", 12306 to 12307=> "00000", 12308 => "11111", 12309 to 12313=> "00000", 
    12314 => "11111", 12315 => "00110", 12316 to 12332=> "00000", 12333 => "11111", 12334 to 12379=> "00000", 
    12380 => "11111", 12381 to 12382=> "00000", 12383 => "11111", 12384 => "00000", 12385 => "00110", 
    12386 to 12390=> "00000", 12391 => "11111", 12392 to 12397=> "00000", 12398 => "11111", 12399 to 12402=> "00000", 
    12403 => "00110", 12404 to 12419=> "00000", 12420 => "00001", 12421 to 12428=> "00000", 12429 => "00001", 
    12430 to 12432=> "00000", 12433 => "01000", 12434 to 12441=> "00000", 12442 => "00001", 12443 => "01110", 
    12444 to 12454=> "00000", 12455 => "00001", 12456 to 12474=> "00000", 12475 => "00001", 12476 to 12490=> "00000", 
    12491 => "00001", 12492 to 12512=> "00000", 12513 => "01101", 12514 to 12518=> "00000", 12519 to 12520=> "00001", 
    12521 to 12530=> "00000", 12531 => "01110", 12532 to 14848=> "00000", 14849 => "11111", 14850 to 14851=> "00000", 
    14852 => "11111", 14853 to 14857=> "00000", 14858 => "11111", 14859 to 14860=> "00000", 14861 => "00011", 
    14862 to 14872=> "00000", 14873 => "11111", 14874 => "00101", 14875 to 14877=> "00000", 14878 => "11111", 
    14879 to 14886=> "00000", 14887 => "00010", 14888 to 14889=> "00000", 14890 => "11111", 14891 => "00000", 
    14892 => "11111", 14893 to 14899=> "00000", 14900 => "11111", 14901 to 14906=> "00000", 14907 => "00010", 
    14908 to 14922=> "00000", 14923 => "00100", 14924 to 14939=> "00000", 14940 => "00110", 14941 => "11111", 
    14942 => "00000", 14943 => "00001", 14944 to 14950=> "00000", 14951 => "00101", 14952 to 14957=> "00000", 
    14958 => "00100", 14959 to 14988=> "00000", 14989 => "00110", 14990 to 14992=> "00000", 14993 => "00001", 
    14994 to 15000=> "00000", 15001 => "00001", 15002 => "01010", 15003 => "11111", 15004 to 15014=> "00000", 
    15015 => "00100", 15016 to 15034=> "00000", 15035 => "00101", 15036 to 15050=> "00000", 15051 => "01001", 
    15052 to 15067=> "00000", 15068 => "01100", 15069 => "00001", 15070 to 15072=> "00000", 15073 => "11111", 
    15074 to 15078=> "00000", 15079 => "01011", 15080 to 15085=> "00000", 15086 => "01000", 15087 to 15090=> "00000", 
    15091 => "11111", 15092 to 16383=> "00000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity Conv1DMac_new397_vdy is
    generic (
        DataWidth : INTEGER := 5;
        AddressRange : INTEGER := 16384;
        AddressWidth : INTEGER := 14);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Conv1DMac_new397_vdy is
    component Conv1DMac_new397_vdy_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Conv1DMac_new397_vdy_rom_U :  component Conv1DMac_new397_vdy_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


