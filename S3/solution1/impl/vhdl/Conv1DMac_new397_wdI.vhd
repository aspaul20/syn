-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Conv1DMac_new397_wdI_rom is 
    generic(
             DWIDTH     : integer := 5; 
             AWIDTH     : integer := 14; 
             MEM_SIZE    : integer := 16384
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Conv1DMac_new397_wdI_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 771=> "00000", 772 => "11111", 773 to 777=> "00000", 778 => "11111", 779 to 780=> "00000", 
    781 => "00010", 782 to 793=> "00000", 794 => "00100", 795 to 797=> "00000", 798 => "11111", 
    799 to 806=> "00000", 807 => "00010", 808 to 826=> "00000", 827 => "00010", 828 to 842=> "00000", 
    843 => "00100", 844 to 859=> "00000", 860 => "00110", 861 to 862=> "00000", 863 => "00001", 
    864 to 870=> "00000", 871 => "00101", 872 to 877=> "00000", 878 => "00100", 879 to 899=> "00000", 
    900 => "00001", 901 to 908=> "00000", 909 => "00101", 910 to 920=> "00000", 921 => "00001", 
    922 => "01001", 923 => "11111", 924 to 934=> "00000", 935 => "00011", 936 to 939=> "00000", 
    940 => "00001", 941 to 947=> "00000", 948 => "00001", 949 to 954=> "00000", 955 => "00100", 
    956 to 970=> "00000", 971 => "00111", 972 to 987=> "00000", 988 => "01010", 989 => "00001", 
    990 to 992=> "00000", 993 => "11111", 994 to 998=> "00000", 999 => "01001", 1000 to 1005=> "00000", 
    1006 => "00111", 1007 to 1010=> "00000", 1011 => "11111", 1012 to 1811=> "00000", 1812 => "00110", 
    1813 to 1828=> "00000", 1829 => "00001", 1830 to 1836=> "00000", 1837 => "00110", 1838 to 1841=> "00000", 
    1842 => "00001", 1843 to 1886=> "00000", 1887 => "00110", 1888 to 1939=> "00000", 1940 => "01100", 
    1941 to 1964=> "00000", 1965 => "01011", 1966 to 2014=> "00000", 2015 => "01100", 2016 to 3859=> "00000", 
    3860 => "00110", 3861 to 3876=> "00000", 3877 => "00001", 3878 to 3884=> "00000", 3885 => "00110", 
    3886 to 3889=> "00000", 3890 => "00001", 3891 to 3934=> "00000", 3935 => "00110", 3936 to 3987=> "00000", 
    3988 => "01100", 3989 to 4012=> "00000", 4013 => "01011", 4014 to 4062=> "00000", 4063 => "01100", 
    4064 to 13824=> "00000", 13825 => "00010", 13826 to 13827=> "00000", 13828 => "00010", 13829 to 13833=> "00000", 
    13834 => "00010", 13835 to 13848=> "00000", 13849 => "00010", 13850 to 13853=> "00000", 13854 => "00010", 
    13855 to 13865=> "00000", 13866 => "00011", 13867 => "00000", 13868 => "00010", 13869 to 13875=> "00000", 
    13876 => "00010", 13877 to 13915=> "00000", 13916 => "11111", 13917 => "00010", 13918 to 13920=> "00000", 
    13921 => "11111", 13922 to 13927=> "00000", 13928 => "00010", 13929 to 13933=> "00000", 13934 => "11111", 
    13935 to 13952=> "00000", 13953 => "00111", 13954 to 13955=> "00000", 13956 => "00111", 13957 to 13961=> "00000", 
    13962 => "01000", 13963 to 13964=> "00000", 13965 => "00001", 13966 to 13968=> "00000", 13969 => "00001", 
    13970 to 13976=> "00000", 13977 => "00111", 13978 => "00001", 13979 => "11111", 13980 to 13981=> "00000", 
    13982 => "00111", 13983 to 13990=> "00000", 13991 => "00001", 13992 to 13993=> "00000", 13994 => "01000", 
    13995 => "00000", 13996 => "00111", 13997 to 14003=> "00000", 14004 => "00111", 14005 to 14010=> "00000", 
    14011 => "00001", 14012 to 14026=> "00000", 14027 => "00001", 14028 to 14043=> "00000", 14044 => "00001", 
    14045 => "00111", 14046 to 14048=> "00000", 14049 => "11111", 14050 to 14054=> "00000", 14055 => "00010", 
    14056 => "00110", 14057 to 14061=> "00000", 14062 => "00001", 14063 to 16383=> "00000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity Conv1DMac_new397_wdI is
    generic (
        DataWidth : INTEGER := 5;
        AddressRange : INTEGER := 16384;
        AddressWidth : INTEGER := 14);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Conv1DMac_new397_wdI is
    component Conv1DMac_new397_wdI_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Conv1DMac_new397_wdI_rom_U :  component Conv1DMac_new397_wdI_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


