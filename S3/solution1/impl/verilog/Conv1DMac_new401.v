// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv1DMac_new401 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [31:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [13:0] weights12_m_weights_3_address0;
reg    weights12_m_weights_3_ce0;
wire   [6:0] weights12_m_weights_3_q0;
wire   [13:0] weights12_m_weights_2_address0;
reg    weights12_m_weights_2_ce0;
wire   [6:0] weights12_m_weights_2_q0;
wire   [13:0] weights12_m_weights_1_address0;
reg    weights12_m_weights_1_ce0;
wire   [6:0] weights12_m_weights_1_q0;
wire   [13:0] weights12_m_weights_s_address0;
reg    weights12_m_weights_s_ce0;
wire   [6:0] weights12_m_weights_s_q0;
reg    in_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_1431;
reg   [0:0] exitcond_flatten_reg_1431_pp0_iter1_reg;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] tmp_203_reg_1458;
reg   [0:0] tmp_203_reg_1458_pp0_iter3_reg;
reg   [24:0] indvar_flatten1_reg_211;
reg   [15:0] indvar_flatten_reg_222;
reg   [6:0] nm_reg_233;
reg   [8:0] sf_reg_244;
wire   [0:0] exitcond_flatten_fu_287_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [24:0] indvar_flatten_next1_fu_293_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] nm_t_mid2_fu_387_p3;
reg   [5:0] nm_t_mid2_reg_1440;
reg   [5:0] nm_t_mid2_reg_1440_pp0_iter1_reg;
reg   [5:0] nm_t_mid2_reg_1440_pp0_iter2_reg;
wire   [6:0] nm_mid2_fu_395_p3;
wire   [13:0] tmp_183_fu_407_p2;
reg   [13:0] tmp_183_reg_1453;
wire   [0:0] tmp_203_fu_413_p2;
reg   [0:0] tmp_203_reg_1458_pp0_iter1_reg;
reg   [0:0] tmp_203_reg_1458_pp0_iter2_reg;
wire   [8:0] sf_2_fu_419_p2;
wire   [15:0] indvar_flatten_next_fu_431_p3;
reg   [7:0] tmp_140_reg_1492;
reg   [0:0] tmp_981_reg_1497;
wire   [0:0] tmp_189_fu_514_p2;
reg   [0:0] tmp_189_reg_1502;
reg   [7:0] tmp_142_reg_1507;
reg   [0:0] tmp_984_reg_1512;
wire   [0:0] tmp_279_1_fu_584_p2;
reg   [0:0] tmp_279_1_reg_1517;
reg   [7:0] tmp_144_reg_1522;
reg   [0:0] tmp_987_reg_1527;
wire   [0:0] tmp_279_2_fu_654_p2;
reg   [0:0] tmp_279_2_reg_1532;
reg   [7:0] tmp_146_reg_1537;
reg   [0:0] tmp_990_reg_1542;
wire   [0:0] tmp_279_3_fu_724_p2;
reg   [0:0] tmp_279_3_reg_1547;
wire   [7:0] p_Val2_s_fu_971_p2;
reg   [7:0] p_Val2_s_reg_1552;
wire   [7:0] p_Val2_23_1_fu_1110_p2;
reg   [7:0] p_Val2_23_1_reg_1557;
wire   [7:0] p_Val2_23_2_fu_1249_p2;
reg   [7:0] p_Val2_23_2_reg_1562;
wire   [7:0] p_Val2_23_3_fu_1388_p2;
reg   [7:0] p_Val2_23_3_reg_1567;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
wire   [63:0] tmp_184_fu_439_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] macRegisters_0_V_6_fu_130;
wire   [7:0] macRegisters_0_V_fu_756_p2;
reg   [7:0] macRegisters_1_V_6_fu_134;
wire   [7:0] macRegisters_1_V_fu_775_p2;
reg   [7:0] macRegisters_2_V_6_fu_138;
wire   [7:0] macRegisters_2_V_fu_794_p2;
reg   [7:0] macRegisters_3_V_6_fu_142;
wire   [7:0] macRegisters_3_V_fu_813_p2;
wire   [5:0] tmp_fu_275_p1;
wire   [0:0] exitcond_flatten1_fu_299_p2;
wire   [13:0] tmp_s_fu_279_p3;
wire   [0:0] tmp_886_fu_335_p2;
wire   [0:0] not_exitcond_flatten_fu_329_p2;
wire   [6:0] nm_mid_fu_305_p3;
wire   [0:0] tmp_211_mid_fu_341_p2;
wire   [0:0] tmp_861_fu_353_p2;
wire   [6:0] nm_2_fu_347_p2;
wire   [5:0] tmp_979_fu_367_p1;
wire   [13:0] tmp_210_mid1_fu_371_p3;
wire   [13:0] tmp_210_mid_fu_313_p3;
wire   [5:0] nm_t_mid_fu_321_p3;
wire   [8:0] sf_mid2_fu_359_p3;
wire   [13:0] sf_cast1_fu_403_p1;
wire   [13:0] tmp_210_mid2_fu_379_p3;
wire   [15:0] indvar_flatten_op_fu_425_p2;
wire  signed [6:0] p_Val2_s_186_fu_454_p0;
wire  signed [7:0] p_Val2_s_186_fu_454_p1;
wire  signed [14:0] p_08_cast_fu_446_p1;
wire   [14:0] p_Val2_s_186_fu_454_p2;
wire   [0:0] tmp_982_fu_486_p1;
wire   [0:0] tmp_980_fu_460_p3;
wire   [4:0] tmp_187_fu_496_p4;
wire   [0:0] tmp_186_fu_490_p2;
wire   [5:0] tmp_188_fu_506_p3;
wire  signed [6:0] p_Val2_1_fu_524_p0;
wire  signed [7:0] p_Val2_1_fu_524_p1;
wire   [14:0] p_Val2_1_fu_524_p2;
wire   [0:0] tmp_985_fu_556_p1;
wire   [0:0] tmp_983_fu_530_p3;
wire   [4:0] tmp_193_fu_566_p4;
wire   [0:0] tmp_192_fu_560_p2;
wire   [5:0] tmp_194_fu_576_p3;
wire  signed [6:0] p_Val2_2_fu_594_p0;
wire  signed [7:0] p_Val2_2_fu_594_p1;
wire   [14:0] p_Val2_2_fu_594_p2;
wire   [0:0] tmp_988_fu_626_p1;
wire   [0:0] tmp_986_fu_600_p3;
wire   [4:0] tmp_197_fu_636_p4;
wire   [0:0] tmp_196_fu_630_p2;
wire   [5:0] tmp_198_fu_646_p3;
wire  signed [6:0] p_Val2_3_fu_664_p0;
wire  signed [7:0] p_Val2_3_fu_664_p1;
wire   [14:0] p_Val2_3_fu_664_p2;
wire   [0:0] tmp_991_fu_696_p1;
wire   [0:0] tmp_989_fu_670_p3;
wire   [4:0] tmp_201_fu_706_p4;
wire   [0:0] tmp_200_fu_700_p2;
wire   [5:0] tmp_202_fu_716_p3;
wire   [0:0] qb_assign_2_fu_742_p2;
wire   [7:0] tmp_190_fu_746_p1;
wire   [7:0] tmp1_fu_750_p2;
wire   [0:0] qb_assign_2_1_fu_761_p2;
wire   [7:0] tmp_280_1_fu_765_p1;
wire   [7:0] tmp2_fu_769_p2;
wire   [0:0] qb_assign_2_2_fu_780_p2;
wire   [7:0] tmp_280_2_fu_784_p1;
wire   [7:0] tmp3_fu_788_p2;
wire   [0:0] qb_assign_2_3_fu_799_p2;
wire   [7:0] tmp_280_3_fu_803_p1;
wire   [7:0] tmp4_fu_807_p2;
wire   [7:0] tmp_147_fu_838_p66;
wire   [7:0] tmp_148_fu_977_p66;
wire   [7:0] tmp_149_fu_1116_p66;
wire   [7:0] tmp_150_fu_1255_p66;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

Conv1DMac_new401_Aem #(
    .DataWidth( 7 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights12_m_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights12_m_weights_3_address0),
    .ce0(weights12_m_weights_3_ce0),
    .q0(weights12_m_weights_3_q0)
);

Conv1DMac_new401_Bew #(
    .DataWidth( 7 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights12_m_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights12_m_weights_2_address0),
    .ce0(weights12_m_weights_2_ce0),
    .q0(weights12_m_weights_2_q0)
);

Conv1DMac_new401_CeG #(
    .DataWidth( 7 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights12_m_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights12_m_weights_1_address0),
    .ce0(weights12_m_weights_1_ce0),
    .q0(weights12_m_weights_1_q0)
);

Conv1DMac_new401_DeQ #(
    .DataWidth( 7 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights12_m_weights_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights12_m_weights_s_address0),
    .ce0(weights12_m_weights_s_ce0),
    .q0(weights12_m_weights_s_q0)
);

computeS3_mux_646yd2_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_x_U47(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd0),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd255),
    .din17(8'd255),
    .din18(8'd0),
    .din19(8'd255),
    .din20(8'd0),
    .din21(8'd0),
    .din22(8'd0),
    .din23(8'd0),
    .din24(8'd0),
    .din25(8'd0),
    .din26(8'd255),
    .din27(8'd0),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd0),
    .din31(8'd0),
    .din32(8'd0),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd0),
    .din37(8'd0),
    .din38(8'd0),
    .din39(8'd0),
    .din40(8'd0),
    .din41(8'd0),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd0),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd255),
    .din48(8'd0),
    .din49(8'd0),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd0),
    .din53(8'd255),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd0),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd0),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1440_pp0_iter2_reg),
    .dout(tmp_147_fu_838_p66)
);

computeS3_mux_646yd2_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_x_U48(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd0),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd255),
    .din16(8'd0),
    .din17(8'd0),
    .din18(8'd0),
    .din19(8'd0),
    .din20(8'd0),
    .din21(8'd0),
    .din22(8'd0),
    .din23(8'd0),
    .din24(8'd0),
    .din25(8'd1),
    .din26(8'd0),
    .din27(8'd0),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd0),
    .din31(8'd0),
    .din32(8'd0),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd0),
    .din37(8'd0),
    .din38(8'd0),
    .din39(8'd0),
    .din40(8'd1),
    .din41(8'd0),
    .din42(8'd255),
    .din43(8'd0),
    .din44(8'd0),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd0),
    .din48(8'd0),
    .din49(8'd0),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd0),
    .din53(8'd0),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd0),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd0),
    .din61(8'd255),
    .din62(8'd1),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1440_pp0_iter2_reg),
    .dout(tmp_148_fu_977_p66)
);

computeS3_mux_646yd2_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_x_U49(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd255),
    .din12(8'd0),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd0),
    .din17(8'd0),
    .din18(8'd0),
    .din19(8'd0),
    .din20(8'd0),
    .din21(8'd0),
    .din22(8'd0),
    .din23(8'd0),
    .din24(8'd0),
    .din25(8'd0),
    .din26(8'd0),
    .din27(8'd0),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd0),
    .din31(8'd0),
    .din32(8'd0),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd0),
    .din37(8'd0),
    .din38(8'd0),
    .din39(8'd1),
    .din40(8'd0),
    .din41(8'd255),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd1),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd0),
    .din48(8'd0),
    .din49(8'd253),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd0),
    .din53(8'd0),
    .din54(8'd255),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd0),
    .din58(8'd0),
    .din59(8'd255),
    .din60(8'd0),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1440_pp0_iter2_reg),
    .dout(tmp_149_fu_1116_p66)
);

computeS3_mux_646yd2_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_x_U50(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd1),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd0),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd0),
    .din17(8'd0),
    .din18(8'd0),
    .din19(8'd0),
    .din20(8'd0),
    .din21(8'd255),
    .din22(8'd0),
    .din23(8'd0),
    .din24(8'd0),
    .din25(8'd0),
    .din26(8'd255),
    .din27(8'd0),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd0),
    .din31(8'd0),
    .din32(8'd0),
    .din33(8'd253),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd0),
    .din37(8'd0),
    .din38(8'd0),
    .din39(8'd0),
    .din40(8'd0),
    .din41(8'd0),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd0),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd0),
    .din48(8'd0),
    .din49(8'd0),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd0),
    .din53(8'd0),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd0),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd0),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1440_pp0_iter2_reg),
    .dout(tmp_150_fu_1255_p66)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_287_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten1_reg_211 <= indvar_flatten_next1_fu_293_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten1_reg_211 <= 25'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_287_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_222 <= indvar_flatten_next_fu_431_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_222 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_203_reg_1458_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_0_V_6_fu_130 <= macRegisters_0_V_fu_756_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_203_reg_1458_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_0_V_6_fu_130 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_203_reg_1458_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_1_V_6_fu_134 <= macRegisters_1_V_fu_775_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_203_reg_1458_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_1_V_6_fu_134 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_203_reg_1458_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_2_V_6_fu_138 <= macRegisters_2_V_fu_794_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_203_reg_1458_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_2_V_6_fu_138 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_203_reg_1458_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_3_V_6_fu_142 <= macRegisters_3_V_fu_813_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_203_reg_1458_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_3_V_6_fu_142 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_287_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nm_reg_233 <= nm_mid2_fu_395_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nm_reg_233 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_287_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sf_reg_244 <= sf_2_fu_419_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sf_reg_244 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_1431 <= exitcond_flatten_fu_287_p2;
        exitcond_flatten_reg_1431_pp0_iter1_reg <= exitcond_flatten_reg_1431;
        nm_t_mid2_reg_1440_pp0_iter1_reg <= nm_t_mid2_reg_1440;
        tmp_203_reg_1458_pp0_iter1_reg <= tmp_203_reg_1458;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_287_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nm_t_mid2_reg_1440 <= nm_t_mid2_fu_387_p3;
        tmp_183_reg_1453 <= tmp_183_fu_407_p2;
        tmp_203_reg_1458 <= tmp_203_fu_413_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        nm_t_mid2_reg_1440_pp0_iter2_reg <= nm_t_mid2_reg_1440_pp0_iter1_reg;
        tmp_203_reg_1458_pp0_iter2_reg <= tmp_203_reg_1458_pp0_iter1_reg;
        tmp_203_reg_1458_pp0_iter3_reg <= tmp_203_reg_1458_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_203_reg_1458_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_23_1_reg_1557 <= p_Val2_23_1_fu_1110_p2;
        p_Val2_23_2_reg_1562 <= p_Val2_23_2_fu_1249_p2;
        p_Val2_23_3_reg_1567 <= p_Val2_23_3_fu_1388_p2;
        p_Val2_s_reg_1552 <= p_Val2_s_fu_971_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1431_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_140_reg_1492 <= {{p_Val2_s_186_fu_454_p2[14:7]}};
        tmp_142_reg_1507 <= {{p_Val2_1_fu_524_p2[14:7]}};
        tmp_144_reg_1522 <= {{p_Val2_2_fu_594_p2[14:7]}};
        tmp_146_reg_1537 <= {{p_Val2_3_fu_664_p2[14:7]}};
        tmp_189_reg_1502 <= tmp_189_fu_514_p2;
        tmp_279_1_reg_1517 <= tmp_279_1_fu_584_p2;
        tmp_279_2_reg_1532 <= tmp_279_2_fu_654_p2;
        tmp_279_3_reg_1547 <= tmp_279_3_fu_724_p2;
        tmp_981_reg_1497 <= p_Val2_s_186_fu_454_p2[32'd6];
        tmp_984_reg_1512 <= p_Val2_1_fu_524_p2[32'd6];
        tmp_987_reg_1527 <= p_Val2_2_fu_594_p2[32'd6];
        tmp_990_reg_1542 <= p_Val2_3_fu_664_p2[32'd6];
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_287_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1431_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1431_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_203_reg_1458_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_203_reg_1458_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights12_m_weights_1_ce0 = 1'b1;
    end else begin
        weights12_m_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights12_m_weights_2_ce0 = 1'b1;
    end else begin
        weights12_m_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights12_m_weights_3_ce0 = 1'b1;
    end else begin
        weights12_m_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights12_m_weights_s_ce0 = 1'b1;
    end else begin
        weights12_m_weights_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten_fu_287_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten_fu_287_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_203_reg_1458_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten_reg_1431_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_203_reg_1458_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten_reg_1431_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_203_reg_1458_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten_reg_1431_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((exitcond_flatten_reg_1431_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((tmp_203_reg_1458_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign exitcond_flatten1_fu_299_p2 = ((indvar_flatten_reg_222 == 16'd16384) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_287_p2 = ((indvar_flatten1_reg_211 == 25'd16777216) ? 1'b1 : 1'b0);

assign indvar_flatten_next1_fu_293_p2 = (25'd1 + indvar_flatten1_reg_211);

assign indvar_flatten_next_fu_431_p3 = ((exitcond_flatten1_fu_299_p2[0:0] === 1'b1) ? 16'd1 : indvar_flatten_op_fu_425_p2);

assign indvar_flatten_op_fu_425_p2 = (indvar_flatten_reg_222 + 16'd1);

assign macRegisters_0_V_fu_756_p2 = (tmp_140_reg_1492 + tmp1_fu_750_p2);

assign macRegisters_1_V_fu_775_p2 = (tmp_142_reg_1507 + tmp2_fu_769_p2);

assign macRegisters_2_V_fu_794_p2 = (tmp_144_reg_1522 + tmp3_fu_788_p2);

assign macRegisters_3_V_fu_813_p2 = (tmp_146_reg_1537 + tmp4_fu_807_p2);

assign nm_2_fu_347_p2 = (7'd1 + nm_mid_fu_305_p3);

assign nm_mid2_fu_395_p3 = ((tmp_211_mid_fu_341_p2[0:0] === 1'b1) ? nm_2_fu_347_p2 : nm_mid_fu_305_p3);

assign nm_mid_fu_305_p3 = ((exitcond_flatten1_fu_299_p2[0:0] === 1'b1) ? 7'd0 : nm_reg_233);

assign nm_t_mid2_fu_387_p3 = ((tmp_211_mid_fu_341_p2[0:0] === 1'b1) ? tmp_979_fu_367_p1 : nm_t_mid_fu_321_p3);

assign nm_t_mid_fu_321_p3 = ((exitcond_flatten1_fu_299_p2[0:0] === 1'b1) ? 6'd0 : tmp_fu_275_p1);

assign not_exitcond_flatten_fu_329_p2 = (exitcond_flatten1_fu_299_p2 ^ 1'd1);

assign out_V_V_din = {{{{p_Val2_23_3_reg_1567}, {p_Val2_23_2_reg_1562}}, {p_Val2_23_1_reg_1557}}, {p_Val2_s_reg_1552}};

assign p_08_cast_fu_446_p1 = $signed(in_V_V_dout);

assign p_Val2_1_fu_524_p0 = weights12_m_weights_2_q0;

assign p_Val2_1_fu_524_p1 = p_08_cast_fu_446_p1;

assign p_Val2_1_fu_524_p2 = ($signed(p_Val2_1_fu_524_p0) * $signed(p_Val2_1_fu_524_p1));

assign p_Val2_23_1_fu_1110_p2 = (macRegisters_1_V_fu_775_p2 + tmp_148_fu_977_p66);

assign p_Val2_23_2_fu_1249_p2 = (macRegisters_2_V_fu_794_p2 + tmp_149_fu_1116_p66);

assign p_Val2_23_3_fu_1388_p2 = (macRegisters_3_V_fu_813_p2 + tmp_150_fu_1255_p66);

assign p_Val2_2_fu_594_p0 = weights12_m_weights_1_q0;

assign p_Val2_2_fu_594_p1 = p_08_cast_fu_446_p1;

assign p_Val2_2_fu_594_p2 = ($signed(p_Val2_2_fu_594_p0) * $signed(p_Val2_2_fu_594_p1));

assign p_Val2_3_fu_664_p0 = weights12_m_weights_s_q0;

assign p_Val2_3_fu_664_p1 = p_08_cast_fu_446_p1;

assign p_Val2_3_fu_664_p2 = ($signed(p_Val2_3_fu_664_p0) * $signed(p_Val2_3_fu_664_p1));

assign p_Val2_s_186_fu_454_p0 = weights12_m_weights_3_q0;

assign p_Val2_s_186_fu_454_p1 = p_08_cast_fu_446_p1;

assign p_Val2_s_186_fu_454_p2 = ($signed(p_Val2_s_186_fu_454_p0) * $signed(p_Val2_s_186_fu_454_p1));

assign p_Val2_s_fu_971_p2 = (macRegisters_0_V_fu_756_p2 + tmp_147_fu_838_p66);

assign qb_assign_2_1_fu_761_p2 = (tmp_984_reg_1512 & tmp_279_1_reg_1517);

assign qb_assign_2_2_fu_780_p2 = (tmp_987_reg_1527 & tmp_279_2_reg_1532);

assign qb_assign_2_3_fu_799_p2 = (tmp_990_reg_1542 & tmp_279_3_reg_1547);

assign qb_assign_2_fu_742_p2 = (tmp_981_reg_1497 & tmp_189_reg_1502);

assign sf_2_fu_419_p2 = (sf_mid2_fu_359_p3 + 9'd1);

assign sf_cast1_fu_403_p1 = sf_mid2_fu_359_p3;

assign sf_mid2_fu_359_p3 = ((tmp_861_fu_353_p2[0:0] === 1'b1) ? 9'd0 : sf_reg_244);

assign start_out = real_start;

assign tmp1_fu_750_p2 = (tmp_190_fu_746_p1 + macRegisters_0_V_6_fu_130);

assign tmp2_fu_769_p2 = (tmp_280_1_fu_765_p1 + macRegisters_1_V_6_fu_134);

assign tmp3_fu_788_p2 = (tmp_280_2_fu_784_p1 + macRegisters_2_V_6_fu_138);

assign tmp4_fu_807_p2 = (tmp_280_3_fu_803_p1 + macRegisters_3_V_6_fu_142);

assign tmp_183_fu_407_p2 = (sf_cast1_fu_403_p1 + tmp_210_mid2_fu_379_p3);

assign tmp_184_fu_439_p1 = tmp_183_reg_1453;

assign tmp_186_fu_490_p2 = (tmp_982_fu_486_p1 | tmp_980_fu_460_p3);

assign tmp_187_fu_496_p4 = {{p_Val2_s_186_fu_454_p2[5:1]}};

assign tmp_188_fu_506_p3 = {{tmp_187_fu_496_p4}, {tmp_186_fu_490_p2}};

assign tmp_189_fu_514_p2 = ((tmp_188_fu_506_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_190_fu_746_p1 = qb_assign_2_fu_742_p2;

assign tmp_192_fu_560_p2 = (tmp_985_fu_556_p1 | tmp_983_fu_530_p3);

assign tmp_193_fu_566_p4 = {{p_Val2_1_fu_524_p2[5:1]}};

assign tmp_194_fu_576_p3 = {{tmp_193_fu_566_p4}, {tmp_192_fu_560_p2}};

assign tmp_196_fu_630_p2 = (tmp_988_fu_626_p1 | tmp_986_fu_600_p3);

assign tmp_197_fu_636_p4 = {{p_Val2_2_fu_594_p2[5:1]}};

assign tmp_198_fu_646_p3 = {{tmp_197_fu_636_p4}, {tmp_196_fu_630_p2}};

assign tmp_200_fu_700_p2 = (tmp_991_fu_696_p1 | tmp_989_fu_670_p3);

assign tmp_201_fu_706_p4 = {{p_Val2_3_fu_664_p2[5:1]}};

assign tmp_202_fu_716_p3 = {{tmp_201_fu_706_p4}, {tmp_200_fu_700_p2}};

assign tmp_203_fu_413_p2 = ((sf_mid2_fu_359_p3 == 9'd255) ? 1'b1 : 1'b0);

assign tmp_210_mid1_fu_371_p3 = {{tmp_979_fu_367_p1}, {8'd0}};

assign tmp_210_mid2_fu_379_p3 = ((tmp_211_mid_fu_341_p2[0:0] === 1'b1) ? tmp_210_mid1_fu_371_p3 : tmp_210_mid_fu_313_p3);

assign tmp_210_mid_fu_313_p3 = ((exitcond_flatten1_fu_299_p2[0:0] === 1'b1) ? 14'd0 : tmp_s_fu_279_p3);

assign tmp_211_mid_fu_341_p2 = (tmp_886_fu_335_p2 & not_exitcond_flatten_fu_329_p2);

assign tmp_279_1_fu_584_p2 = ((tmp_194_fu_576_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_279_2_fu_654_p2 = ((tmp_198_fu_646_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_279_3_fu_724_p2 = ((tmp_202_fu_716_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_280_1_fu_765_p1 = qb_assign_2_1_fu_761_p2;

assign tmp_280_2_fu_784_p1 = qb_assign_2_2_fu_780_p2;

assign tmp_280_3_fu_803_p1 = qb_assign_2_3_fu_799_p2;

assign tmp_861_fu_353_p2 = (tmp_211_mid_fu_341_p2 | exitcond_flatten1_fu_299_p2);

assign tmp_886_fu_335_p2 = ((sf_reg_244 == 9'd256) ? 1'b1 : 1'b0);

assign tmp_979_fu_367_p1 = nm_2_fu_347_p2[5:0];

assign tmp_980_fu_460_p3 = p_Val2_s_186_fu_454_p2[32'd14];

assign tmp_982_fu_486_p1 = p_Val2_s_186_fu_454_p2[0:0];

assign tmp_983_fu_530_p3 = p_Val2_1_fu_524_p2[32'd14];

assign tmp_985_fu_556_p1 = p_Val2_1_fu_524_p2[0:0];

assign tmp_986_fu_600_p3 = p_Val2_2_fu_594_p2[32'd14];

assign tmp_988_fu_626_p1 = p_Val2_2_fu_594_p2[0:0];

assign tmp_989_fu_670_p3 = p_Val2_3_fu_664_p2[32'd14];

assign tmp_991_fu_696_p1 = p_Val2_3_fu_664_p2[0:0];

assign tmp_fu_275_p1 = nm_reg_233[5:0];

assign tmp_s_fu_279_p3 = {{tmp_fu_275_p1}, {8'd0}};

assign weights12_m_weights_1_address0 = tmp_184_fu_439_p1;

assign weights12_m_weights_2_address0 = tmp_184_fu_439_p1;

assign weights12_m_weights_3_address0 = tmp_184_fu_439_p1;

assign weights12_m_weights_s_address0 = tmp_184_fu_439_p1;

endmodule //Conv1DMac_new401
