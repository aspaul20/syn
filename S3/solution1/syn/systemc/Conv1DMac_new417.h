// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv1DMac_new417_HH_
#define _Conv1DMac_new417_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "computeS3_mux_646yd2_x_x_x_x_x_x.h"
#include "Conv1DMac_new417_0iy.h"
#include "Conv1DMac_new417_1iI.h"
#include "Conv1DMac_new417_2iS.h"
#include "Conv1DMac_new417_3i2.h"

namespace ap_rtl {

struct Conv1DMac_new417 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_signal< sc_lv<8> > ap_var_for_const0;
    sc_signal< sc_lv<8> > ap_var_for_const1;
    sc_signal< sc_lv<8> > ap_var_for_const2;
    sc_signal< sc_lv<8> > ap_var_for_const3;
    sc_signal< sc_lv<8> > ap_var_for_const4;
    sc_signal< sc_lv<8> > ap_var_for_const5;
    sc_signal< sc_lv<8> > ap_var_for_const6;
    sc_signal< sc_lv<8> > ap_var_for_const7;
    sc_signal< sc_lv<8> > ap_var_for_const8;
    sc_signal< sc_lv<8> > ap_var_for_const9;
    sc_signal< sc_lv<8> > ap_var_for_const10;
    sc_signal< sc_lv<8> > ap_var_for_const11;
    sc_signal< sc_lv<8> > ap_var_for_const12;
    sc_signal< sc_lv<8> > ap_var_for_const13;
    sc_signal< sc_lv<8> > ap_var_for_const14;
    sc_signal< sc_lv<8> > ap_var_for_const15;
    sc_signal< sc_lv<8> > ap_var_for_const16;
    sc_signal< sc_lv<8> > ap_var_for_const17;
    sc_signal< sc_lv<8> > ap_var_for_const18;
    sc_signal< sc_lv<8> > ap_var_for_const19;


    // Module declarations
    Conv1DMac_new417(sc_module_name name);
    SC_HAS_PROCESS(Conv1DMac_new417);

    ~Conv1DMac_new417();

    sc_trace_file* mVcdFile;

    Conv1DMac_new417_0iy* weights17_m_weights_3_U;
    Conv1DMac_new417_1iI* weights17_m_weights_2_U;
    Conv1DMac_new417_2iS* weights17_m_weights_1_U;
    Conv1DMac_new417_3i2* weights17_m_weights_s_U;
    computeS3_mux_646yd2_x_x_x_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_x_x_x_U148;
    computeS3_mux_646yd2_x_x_x_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_x_x_x_U149;
    computeS3_mux_646yd2_x_x_x_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_x_x_x_U150;
    computeS3_mux_646yd2_x_x_x_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_x_x_x_U151;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<14> > weights17_m_weights_3_address0;
    sc_signal< sc_logic > weights17_m_weights_3_ce0;
    sc_signal< sc_lv<6> > weights17_m_weights_3_q0;
    sc_signal< sc_lv<14> > weights17_m_weights_2_address0;
    sc_signal< sc_logic > weights17_m_weights_2_ce0;
    sc_signal< sc_lv<6> > weights17_m_weights_2_q0;
    sc_signal< sc_lv<14> > weights17_m_weights_1_address0;
    sc_signal< sc_logic > weights17_m_weights_1_ce0;
    sc_signal< sc_lv<6> > weights17_m_weights_1_q0;
    sc_signal< sc_lv<14> > weights17_m_weights_s_address0;
    sc_signal< sc_logic > weights17_m_weights_s_ce0;
    sc_signal< sc_lv<6> > weights17_m_weights_s_q0;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten6_reg_1479;
    sc_signal< sc_lv<1> > exitcond_flatten6_reg_1479_pp0_iter1_reg;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > tmp_111_reg_1506;
    sc_signal< sc_lv<1> > tmp_111_reg_1506_pp0_iter3_reg;
    sc_signal< sc_lv<21> > indvar_flatten6_reg_243;
    sc_signal< sc_lv<16> > indvar_flatten_reg_254;
    sc_signal< sc_lv<7> > nm_reg_265;
    sc_signal< sc_lv<9> > sf_reg_276;
    sc_signal< sc_lv<1> > exitcond_flatten6_fu_319_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<21> > indvar_flatten_next6_fu_325_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<6> > nm_t_mid2_fu_419_p3;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1488;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1488_pp0_iter1_reg;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1488_pp0_iter2_reg;
    sc_signal< sc_lv<7> > nm_mid2_fu_427_p3;
    sc_signal< sc_lv<14> > tmp_106_fu_439_p2;
    sc_signal< sc_lv<14> > tmp_106_reg_1501;
    sc_signal< sc_lv<1> > tmp_111_fu_445_p2;
    sc_signal< sc_lv<1> > tmp_111_reg_1506_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_111_reg_1506_pp0_iter2_reg;
    sc_signal< sc_lv<9> > sf_1_fu_451_p2;
    sc_signal< sc_lv<16> > indvar_flatten_next_fu_463_p3;
    sc_signal< sc_lv<7> > tmp_67_reg_1540;
    sc_signal< sc_lv<1> > tmp_926_reg_1545;
    sc_signal< sc_lv<1> > tmp_108_fu_546_p2;
    sc_signal< sc_lv<1> > tmp_108_reg_1550;
    sc_signal< sc_lv<7> > tmp_70_reg_1555;
    sc_signal< sc_lv<1> > tmp_929_reg_1560;
    sc_signal< sc_lv<1> > tmp_255_1_fu_616_p2;
    sc_signal< sc_lv<1> > tmp_255_1_reg_1565;
    sc_signal< sc_lv<7> > tmp_73_reg_1570;
    sc_signal< sc_lv<1> > tmp_932_reg_1575;
    sc_signal< sc_lv<1> > tmp_255_2_fu_686_p2;
    sc_signal< sc_lv<1> > tmp_255_2_reg_1580;
    sc_signal< sc_lv<7> > tmp_76_reg_1585;
    sc_signal< sc_lv<1> > tmp_935_reg_1590;
    sc_signal< sc_lv<1> > tmp_255_3_fu_756_p2;
    sc_signal< sc_lv<1> > tmp_255_3_reg_1595;
    sc_signal< sc_lv<8> > p_Val2_7_fu_1019_p2;
    sc_signal< sc_lv<8> > p_Val2_7_reg_1600;
    sc_signal< sc_lv<8> > p_Val2_21_1_fu_1158_p2;
    sc_signal< sc_lv<8> > p_Val2_21_1_reg_1605;
    sc_signal< sc_lv<8> > p_Val2_21_2_fu_1297_p2;
    sc_signal< sc_lv<8> > p_Val2_21_2_reg_1610;
    sc_signal< sc_lv<8> > p_Val2_21_3_fu_1436_p2;
    sc_signal< sc_lv<8> > p_Val2_21_3_reg_1615;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<64> > tmp_107_fu_471_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > macRegisters_0_V_2_fu_162;
    sc_signal< sc_lv<8> > macRegisters_0_V_fu_791_p2;
    sc_signal< sc_lv<8> > macRegisters_1_V_2_fu_166;
    sc_signal< sc_lv<8> > macRegisters_1_V_fu_814_p2;
    sc_signal< sc_lv<8> > macRegisters_2_V_2_fu_170;
    sc_signal< sc_lv<8> > macRegisters_2_V_fu_837_p2;
    sc_signal< sc_lv<8> > macRegisters_3_V_2_fu_174;
    sc_signal< sc_lv<8> > macRegisters_3_V_fu_860_p2;
    sc_signal< sc_lv<6> > tmp_fu_307_p1;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_331_p2;
    sc_signal< sc_lv<14> > tmp_s_fu_311_p3;
    sc_signal< sc_lv<1> > tmp_882_fu_367_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_361_p2;
    sc_signal< sc_lv<7> > nm_mid_fu_337_p3;
    sc_signal< sc_lv<1> > tmp_108_mid_fu_373_p2;
    sc_signal< sc_lv<1> > tmp_853_fu_385_p2;
    sc_signal< sc_lv<7> > nm_1_fu_379_p2;
    sc_signal< sc_lv<6> > tmp_924_fu_399_p1;
    sc_signal< sc_lv<14> > tmp_107_mid1_fu_403_p3;
    sc_signal< sc_lv<14> > tmp_107_mid_fu_345_p3;
    sc_signal< sc_lv<6> > nm_t_mid_fu_353_p3;
    sc_signal< sc_lv<9> > sf_mid2_fu_391_p3;
    sc_signal< sc_lv<14> > sf_cast1_fu_435_p1;
    sc_signal< sc_lv<14> > tmp_107_mid2_fu_411_p3;
    sc_signal< sc_lv<16> > indvar_flatten_op_fu_457_p2;
    sc_signal< sc_lv<6> > p_Val2_s_fu_486_p0;
    sc_signal< sc_lv<8> > p_Val2_s_fu_486_p1;
    sc_signal< sc_lv<14> > p_08_cast_cast_fu_478_p1;
    sc_signal< sc_lv<14> > p_Val2_s_fu_486_p2;
    sc_signal< sc_lv<1> > tmp_927_fu_518_p1;
    sc_signal< sc_lv<1> > tmp_925_fu_492_p3;
    sc_signal< sc_lv<5> > tmp_93_fu_528_p4;
    sc_signal< sc_lv<1> > tmp_92_fu_522_p2;
    sc_signal< sc_lv<6> > tmp_94_fu_538_p3;
    sc_signal< sc_lv<6> > p_Val2_1_fu_556_p0;
    sc_signal< sc_lv<8> > p_Val2_1_fu_556_p1;
    sc_signal< sc_lv<14> > p_Val2_1_fu_556_p2;
    sc_signal< sc_lv<1> > tmp_930_fu_588_p1;
    sc_signal< sc_lv<1> > tmp_928_fu_562_p3;
    sc_signal< sc_lv<5> > tmp_97_fu_598_p4;
    sc_signal< sc_lv<1> > tmp_96_fu_592_p2;
    sc_signal< sc_lv<6> > tmp_98_fu_608_p3;
    sc_signal< sc_lv<6> > p_Val2_2_fu_626_p0;
    sc_signal< sc_lv<8> > p_Val2_2_fu_626_p1;
    sc_signal< sc_lv<14> > p_Val2_2_fu_626_p2;
    sc_signal< sc_lv<1> > tmp_933_fu_658_p1;
    sc_signal< sc_lv<1> > tmp_931_fu_632_p3;
    sc_signal< sc_lv<5> > tmp_101_fu_668_p4;
    sc_signal< sc_lv<1> > tmp_100_fu_662_p2;
    sc_signal< sc_lv<6> > tmp_102_fu_678_p3;
    sc_signal< sc_lv<6> > p_Val2_3_fu_696_p0;
    sc_signal< sc_lv<8> > p_Val2_3_fu_696_p1;
    sc_signal< sc_lv<14> > p_Val2_3_fu_696_p2;
    sc_signal< sc_lv<1> > tmp_936_fu_728_p1;
    sc_signal< sc_lv<1> > tmp_934_fu_702_p3;
    sc_signal< sc_lv<5> > tmp_105_fu_738_p4;
    sc_signal< sc_lv<1> > tmp_104_fu_732_p2;
    sc_signal< sc_lv<6> > tmp_110_fu_748_p3;
    sc_signal< sc_lv<1> > qb_assign_1_fu_777_p2;
    sc_signal< sc_lv<8> > tmp_109_fu_781_p1;
    sc_signal< sc_lv<8> > tmp_68_fu_774_p1;
    sc_signal< sc_lv<8> > tmp1_fu_785_p2;
    sc_signal< sc_lv<1> > qb_assign_1_1_fu_800_p2;
    sc_signal< sc_lv<8> > tmp_256_1_fu_804_p1;
    sc_signal< sc_lv<8> > tmp_71_fu_797_p1;
    sc_signal< sc_lv<8> > tmp2_fu_808_p2;
    sc_signal< sc_lv<1> > qb_assign_1_2_fu_823_p2;
    sc_signal< sc_lv<8> > tmp_256_2_fu_827_p1;
    sc_signal< sc_lv<8> > tmp_74_fu_820_p1;
    sc_signal< sc_lv<8> > tmp3_fu_831_p2;
    sc_signal< sc_lv<1> > qb_assign_1_3_fu_846_p2;
    sc_signal< sc_lv<8> > tmp_256_3_fu_850_p1;
    sc_signal< sc_lv<8> > tmp_77_fu_843_p1;
    sc_signal< sc_lv<8> > tmp4_fu_854_p2;
    sc_signal< sc_lv<8> > tmp_78_fu_886_p66;
    sc_signal< sc_lv<8> > tmp_79_fu_1025_p66;
    sc_signal< sc_lv<8> > tmp_80_fu_1164_p66;
    sc_signal< sc_lv<8> > tmp_81_fu_1303_p66;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<21> ap_const_lv21_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<21> ap_const_lv21_100000;
    static const sc_lv<21> ap_const_lv21_1;
    static const sc_lv<16> ap_const_lv16_4000;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<9> ap_const_lv9_FF;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_F9;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_7;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_12;
    static const sc_lv<8> ap_const_lv8_15;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_8;
    static const sc_lv<8> ap_const_lv8_F7;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<8> ap_const_lv8_14;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<8> ap_const_lv8_B;
    static const sc_lv<8> ap_const_lv8_A;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_FA;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const11();
    void thread_ap_var_for_const12();
    void thread_ap_var_for_const13();
    void thread_ap_var_for_const14();
    void thread_ap_var_for_const15();
    void thread_ap_var_for_const16();
    void thread_ap_var_for_const17();
    void thread_ap_var_for_const18();
    void thread_ap_var_for_const19();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten6_fu_319_p2();
    void thread_exitcond_flatten_fu_331_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_indvar_flatten_next6_fu_325_p2();
    void thread_indvar_flatten_next_fu_463_p3();
    void thread_indvar_flatten_op_fu_457_p2();
    void thread_internal_ap_ready();
    void thread_macRegisters_0_V_fu_791_p2();
    void thread_macRegisters_1_V_fu_814_p2();
    void thread_macRegisters_2_V_fu_837_p2();
    void thread_macRegisters_3_V_fu_860_p2();
    void thread_nm_1_fu_379_p2();
    void thread_nm_mid2_fu_427_p3();
    void thread_nm_mid_fu_337_p3();
    void thread_nm_t_mid2_fu_419_p3();
    void thread_nm_t_mid_fu_353_p3();
    void thread_not_exitcond_flatten_fu_361_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_08_cast_cast_fu_478_p1();
    void thread_p_Val2_1_fu_556_p0();
    void thread_p_Val2_1_fu_556_p1();
    void thread_p_Val2_1_fu_556_p2();
    void thread_p_Val2_21_1_fu_1158_p2();
    void thread_p_Val2_21_2_fu_1297_p2();
    void thread_p_Val2_21_3_fu_1436_p2();
    void thread_p_Val2_2_fu_626_p0();
    void thread_p_Val2_2_fu_626_p1();
    void thread_p_Val2_2_fu_626_p2();
    void thread_p_Val2_3_fu_696_p0();
    void thread_p_Val2_3_fu_696_p1();
    void thread_p_Val2_3_fu_696_p2();
    void thread_p_Val2_7_fu_1019_p2();
    void thread_p_Val2_s_fu_486_p0();
    void thread_p_Val2_s_fu_486_p1();
    void thread_p_Val2_s_fu_486_p2();
    void thread_qb_assign_1_1_fu_800_p2();
    void thread_qb_assign_1_2_fu_823_p2();
    void thread_qb_assign_1_3_fu_846_p2();
    void thread_qb_assign_1_fu_777_p2();
    void thread_real_start();
    void thread_sf_1_fu_451_p2();
    void thread_sf_cast1_fu_435_p1();
    void thread_sf_mid2_fu_391_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_fu_785_p2();
    void thread_tmp2_fu_808_p2();
    void thread_tmp3_fu_831_p2();
    void thread_tmp4_fu_854_p2();
    void thread_tmp_100_fu_662_p2();
    void thread_tmp_101_fu_668_p4();
    void thread_tmp_102_fu_678_p3();
    void thread_tmp_104_fu_732_p2();
    void thread_tmp_105_fu_738_p4();
    void thread_tmp_106_fu_439_p2();
    void thread_tmp_107_fu_471_p1();
    void thread_tmp_107_mid1_fu_403_p3();
    void thread_tmp_107_mid2_fu_411_p3();
    void thread_tmp_107_mid_fu_345_p3();
    void thread_tmp_108_fu_546_p2();
    void thread_tmp_108_mid_fu_373_p2();
    void thread_tmp_109_fu_781_p1();
    void thread_tmp_110_fu_748_p3();
    void thread_tmp_111_fu_445_p2();
    void thread_tmp_255_1_fu_616_p2();
    void thread_tmp_255_2_fu_686_p2();
    void thread_tmp_255_3_fu_756_p2();
    void thread_tmp_256_1_fu_804_p1();
    void thread_tmp_256_2_fu_827_p1();
    void thread_tmp_256_3_fu_850_p1();
    void thread_tmp_68_fu_774_p1();
    void thread_tmp_71_fu_797_p1();
    void thread_tmp_74_fu_820_p1();
    void thread_tmp_77_fu_843_p1();
    void thread_tmp_853_fu_385_p2();
    void thread_tmp_882_fu_367_p2();
    void thread_tmp_924_fu_399_p1();
    void thread_tmp_925_fu_492_p3();
    void thread_tmp_927_fu_518_p1();
    void thread_tmp_928_fu_562_p3();
    void thread_tmp_92_fu_522_p2();
    void thread_tmp_930_fu_588_p1();
    void thread_tmp_931_fu_632_p3();
    void thread_tmp_933_fu_658_p1();
    void thread_tmp_934_fu_702_p3();
    void thread_tmp_936_fu_728_p1();
    void thread_tmp_93_fu_528_p4();
    void thread_tmp_94_fu_538_p3();
    void thread_tmp_96_fu_592_p2();
    void thread_tmp_97_fu_598_p4();
    void thread_tmp_98_fu_608_p3();
    void thread_tmp_fu_307_p1();
    void thread_tmp_s_fu_311_p3();
    void thread_weights17_m_weights_1_address0();
    void thread_weights17_m_weights_1_ce0();
    void thread_weights17_m_weights_2_address0();
    void thread_weights17_m_weights_2_ce0();
    void thread_weights17_m_weights_3_address0();
    void thread_weights17_m_weights_3_ce0();
    void thread_weights17_m_weights_s_address0();
    void thread_weights17_m_weights_s_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
