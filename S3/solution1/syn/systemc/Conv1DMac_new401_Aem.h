// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __Conv1DMac_new401_Aem_H__
#define __Conv1DMac_new401_Aem_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct Conv1DMac_new401_Aem_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 7;
  static const unsigned AddressRange = 16384;
  static const unsigned AddressWidth = 14;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(Conv1DMac_new401_Aem_ram) {
        for (unsigned i = 0; i < 28 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[28] = "0b0010000";
        for (unsigned i = 29; i < 51 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[51] = "0b1111111";
        ram[52] = "0b0000010";
        for (unsigned i = 53; i < 60 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[60] = "0b0001110";
        for (unsigned i = 61; i < 77 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[77] = "0b0010001";
        for (unsigned i = 78; i < 100 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[100] = "0b0010000";
        for (unsigned i = 101; i < 122 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[122] = "0b0000001";
        ram[123] = "0b0010000";
        for (unsigned i = 124; i < 156 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[156] = "0b0001110";
        for (unsigned i = 157; i < 193 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[193] = "0b1111111";
        for (unsigned i = 194; i < 218 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[218] = "0b0001110";
        for (unsigned i = 219; i < 542 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[542] = "0b0000001";
        for (unsigned i = 543; i < 574 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[574] = "0b0000001";
        ram[575] = "0b0000000";
        ram[576] = "0b0000000";
        ram[577] = "0b0000000";
        ram[578] = "0b0000000";
        ram[579] = "0b0000001";
        for (unsigned i = 580; i < 611 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[611] = "0b0000001";
        for (unsigned i = 612; i < 704 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[704] = "0b0000001";
        for (unsigned i = 705; i < 760 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[760] = "0b0000001";
        for (unsigned i = 761; i < 4126 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[4126] = "0b1111111";
        for (unsigned i = 4127; i < 4158 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[4158] = "0b1111111";
        ram[4159] = "0b0000000";
        ram[4160] = "0b0000000";
        ram[4161] = "0b0000000";
        ram[4162] = "0b0000000";
        ram[4163] = "0b1111111";
        for (unsigned i = 4164; i < 4195 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[4195] = "0b1111111";
        for (unsigned i = 4196; i < 4288 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[4288] = "0b1111111";
        for (unsigned i = 4289; i < 4344 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[4344] = "0b1111111";
        for (unsigned i = 4345; i < 4382 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[4382] = "0b0100001";
        for (unsigned i = 4383; i < 4391 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[4391] = "0b0000010";
        for (unsigned i = 4392; i < 4414 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[4414] = "0b0100000";
        ram[4415] = "0b0000000";
        ram[4416] = "0b0000000";
        ram[4417] = "0b0000000";
        ram[4418] = "0b0000000";
        ram[4419] = "0b0100100";
        for (unsigned i = 4420; i < 4451 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[4451] = "0b0100010";
        for (unsigned i = 4452; i < 4525 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[4525] = "0b0000001";
        for (unsigned i = 4526; i < 4544 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[4544] = "0b0011111";
        for (unsigned i = 4545; i < 4600 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[4600] = "0b0011000";
        for (unsigned i = 4601; i < 4915 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[4915] = "0b1111111";
        for (unsigned i = 4916; i < 5029 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5029] = "0b1111111";
        for (unsigned i = 5030; i < 5040 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5040] = "0b1111111";
        for (unsigned i = 5041; i < 5057 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5057] = "0b1111111";
        for (unsigned i = 5058; i < 5646 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5646] = "0b1111111";
        for (unsigned i = 5647; i < 5660 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5660] = "0b1111110";
        for (unsigned i = 5661; i < 5676 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5676] = "0b1111111";
        for (unsigned i = 5677; i < 5683 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5683] = "0b0101000";
        for (unsigned i = 5684; i < 5703 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5703] = "0b0000001";
        for (unsigned i = 5704; i < 5709 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5709] = "0b1111111";
        for (unsigned i = 5710; i < 5717 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5717] = "0b1111111";
        for (unsigned i = 5718; i < 5732 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5732] = "0b1111111";
        for (unsigned i = 5733; i < 5755 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5755] = "0b1111110";
        for (unsigned i = 5756; i < 5797 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5797] = "0b0101000";
        for (unsigned i = 5798; i < 5808 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5808] = "0b0101000";
        for (unsigned i = 5809; i < 5825 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5825] = "0b0101000";
        for (unsigned i = 5826; i < 5850 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5850] = "0b1111111";
        for (unsigned i = 5851; i < 5872 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[5872] = "0b0000001";
        for (unsigned i = 5873; i < 6677 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[6677] = "0b1111111";
        for (unsigned i = 6678; i < 6684 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[6684] = "0b1111111";
        for (unsigned i = 6685; i < 6700 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[6700] = "0b0011100";
        for (unsigned i = 6701; i < 6707 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[6707] = "0b1111111";
        for (unsigned i = 6708; i < 6716 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[6716] = "0b0000001";
        for (unsigned i = 6717; i < 6741 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[6741] = "0b0011110";
        for (unsigned i = 6742; i < 6812 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[6812] = "0b0000001";
        for (unsigned i = 6813; i < 6824 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[6824] = "0b0011100";
        for (unsigned i = 6825; i < 6849 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[6849] = "0b1111111";
        for (unsigned i = 6850; i < 6863 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[6863] = "0b0010111";
        for (unsigned i = 6864; i < 6874 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[6874] = "0b0000001";
        for (unsigned i = 6875; i < 6880 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[6880] = "0b0000001";
        for (unsigned i = 6881; i < 6889 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[6889] = "0b1111111";
        for (unsigned i = 6890; i < 7708 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[7708] = "0b0010000";
        for (unsigned i = 7709; i < 7731 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[7731] = "0b1111111";
        ram[7732] = "0b0000011";
        for (unsigned i = 7733; i < 7740 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[7740] = "0b0001111";
        for (unsigned i = 7741; i < 7757 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[7757] = "0b0010001";
        for (unsigned i = 7758; i < 7780 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[7780] = "0b0010000";
        for (unsigned i = 7781; i < 7802 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[7802] = "0b0000010";
        ram[7803] = "0b0010001";
        for (unsigned i = 7804; i < 7836 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[7836] = "0b0001110";
        for (unsigned i = 7837; i < 7898 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[7898] = "0b0001110";
        for (unsigned i = 7899; i < 7911 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[7911] = "0b0000001";
        for (unsigned i = 7912; i < 10780 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[10780] = "0b0001111";
        for (unsigned i = 10781; i < 10803 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[10803] = "0b1111111";
        ram[10804] = "0b0000010";
        for (unsigned i = 10805; i < 10812 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[10812] = "0b0001110";
        for (unsigned i = 10813; i < 10829 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[10829] = "0b0010001";
        for (unsigned i = 10830; i < 10852 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[10852] = "0b0010000";
        for (unsigned i = 10853; i < 10874 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[10874] = "0b0000001";
        ram[10875] = "0b0010000";
        for (unsigned i = 10876; i < 10908 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[10908] = "0b0001110";
        for (unsigned i = 10909; i < 10970 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[10970] = "0b0001110";
        for (unsigned i = 10971; i < 12316 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[12316] = "0b1111111";
        for (unsigned i = 12317; i < 12332 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[12332] = "0b0011110";
        for (unsigned i = 12333; i < 12348 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[12348] = "0b0000001";
        for (unsigned i = 12349; i < 12373 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[12373] = "0b0100000";
        for (unsigned i = 12374; i < 12456 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[12456] = "0b0011111";
        for (unsigned i = 12457; i < 12495 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[12495] = "0b0011001";
        for (unsigned i = 12496; i < 12506 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[12506] = "0b0000001";
        for (unsigned i = 12507; i < 12512 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[12512] = "0b0000001";
        for (unsigned i = 12513; i < 13582 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[13582] = "0b0010101";
        for (unsigned i = 13583; i < 13589 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[13589] = "0b0011111";
        for (unsigned i = 13590; i < 13668 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[13668] = "0b1111110";
        for (unsigned i = 13669; i < 13691 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[13691] = "0b1111111";
        for (unsigned i = 13692; i < 13708 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[13708] = "0b0011100";
        for (unsigned i = 13709; i < 13739 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[13739] = "0b0011000";
        for (unsigned i = 13740; i < 13753 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[13753] = "0b0000001";
        for (unsigned i = 13754; i < 13786 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[13786] = "0b0000010";
        for (unsigned i = 13787; i < 13799 ; i = i + 1) {
            ram[i] = "0b0000000";
        }
        ram[13799] = "0b0011100";
        ram[13800] = "0b0000000";
        ram[13801] = "0b0011110";
        for (unsigned i = 13802; i < 16384 ; i = i + 1) {
            ram[i] = "0b0000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(Conv1DMac_new401_Aem) {


static const unsigned DataWidth = 7;
static const unsigned AddressRange = 16384;
static const unsigned AddressWidth = 14;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


Conv1DMac_new401_Aem_ram* meminst;


SC_CTOR(Conv1DMac_new401_Aem) {
meminst = new Conv1DMac_new401_Aem_ram("Conv1DMac_new401_Aem_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~Conv1DMac_new401_Aem() {
    delete meminst;
}


};//endmodule
#endif
