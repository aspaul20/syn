// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv1DMac_new_HH_
#define _Conv1DMac_new_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "computeS3_mux_646yd2_x_x_x_x_x_x_x_x.h"
#include "Conv1DMac_new_weibak.h"
#include "Conv1DMac_new_weibbk.h"
#include "Conv1DMac_new_weibck.h"
#include "Conv1DMac_new_weibdk.h"

namespace ap_rtl {

struct Conv1DMac_new : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_signal< sc_lv<8> > ap_var_for_const0;
    sc_signal< sc_lv<8> > ap_var_for_const1;
    sc_signal< sc_lv<8> > ap_var_for_const2;
    sc_signal< sc_lv<8> > ap_var_for_const3;
    sc_signal< sc_lv<8> > ap_var_for_const4;
    sc_signal< sc_lv<8> > ap_var_for_const5;
    sc_signal< sc_lv<8> > ap_var_for_const6;
    sc_signal< sc_lv<8> > ap_var_for_const7;
    sc_signal< sc_lv<8> > ap_var_for_const8;
    sc_signal< sc_lv<8> > ap_var_for_const9;
    sc_signal< sc_lv<8> > ap_var_for_const10;
    sc_signal< sc_lv<8> > ap_var_for_const11;
    sc_signal< sc_lv<8> > ap_var_for_const12;
    sc_signal< sc_lv<8> > ap_var_for_const13;
    sc_signal< sc_lv<8> > ap_var_for_const14;
    sc_signal< sc_lv<8> > ap_var_for_const15;
    sc_signal< sc_lv<8> > ap_var_for_const16;
    sc_signal< sc_lv<8> > ap_var_for_const17;
    sc_signal< sc_lv<8> > ap_var_for_const18;
    sc_signal< sc_lv<8> > ap_var_for_const19;
    sc_signal< sc_lv<8> > ap_var_for_const20;
    sc_signal< sc_lv<8> > ap_var_for_const21;
    sc_signal< sc_lv<8> > ap_var_for_const22;
    sc_signal< sc_lv<8> > ap_var_for_const23;
    sc_signal< sc_lv<8> > ap_var_for_const24;
    sc_signal< sc_lv<8> > ap_var_for_const25;
    sc_signal< sc_lv<8> > ap_var_for_const26;
    sc_signal< sc_lv<8> > ap_var_for_const27;
    sc_signal< sc_lv<8> > ap_var_for_const28;
    sc_signal< sc_lv<8> > ap_var_for_const29;


    // Module declarations
    Conv1DMac_new(sc_module_name name);
    SC_HAS_PROCESS(Conv1DMac_new);

    ~Conv1DMac_new();

    sc_trace_file* mVcdFile;

    Conv1DMac_new_weibak* weights19_m_weights_3_U;
    Conv1DMac_new_weibbk* weights19_m_weights_2_U;
    Conv1DMac_new_weibck* weights19_m_weights_1_U;
    Conv1DMac_new_weibdk* weights19_m_weights_s_U;
    computeS3_mux_646yd2_x_x_x_x_x_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_x_x_x_x_x_U188;
    computeS3_mux_646yd2_x_x_x_x_x_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_x_x_x_x_x_U189;
    computeS3_mux_646yd2_x_x_x_x_x_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_x_x_x_x_x_U190;
    computeS3_mux_646yd2_x_x_x_x_x_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_x_x_x_x_x_U191;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<14> > weights19_m_weights_3_address0;
    sc_signal< sc_logic > weights19_m_weights_3_ce0;
    sc_signal< sc_lv<6> > weights19_m_weights_3_q0;
    sc_signal< sc_lv<14> > weights19_m_weights_2_address0;
    sc_signal< sc_logic > weights19_m_weights_2_ce0;
    sc_signal< sc_lv<6> > weights19_m_weights_2_q0;
    sc_signal< sc_lv<14> > weights19_m_weights_1_address0;
    sc_signal< sc_logic > weights19_m_weights_1_ce0;
    sc_signal< sc_lv<6> > weights19_m_weights_1_q0;
    sc_signal< sc_lv<14> > weights19_m_weights_s_address0;
    sc_signal< sc_logic > weights19_m_weights_s_ce0;
    sc_signal< sc_lv<6> > weights19_m_weights_s_q0;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_1499;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_1499_pp0_iter1_reg;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > tmp_160_reg_1526;
    sc_signal< sc_lv<1> > tmp_160_reg_1526_pp0_iter3_reg;
    sc_signal< sc_lv<21> > indvar_flatten4_reg_263;
    sc_signal< sc_lv<16> > indvar_flatten_reg_274;
    sc_signal< sc_lv<7> > nm_reg_285;
    sc_signal< sc_lv<9> > sf_reg_296;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_339_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<21> > indvar_flatten_next1_fu_345_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<6> > nm_t_mid2_fu_439_p3;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1508;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1508_pp0_iter1_reg;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1508_pp0_iter2_reg;
    sc_signal< sc_lv<7> > nm_mid2_fu_447_p3;
    sc_signal< sc_lv<14> > tmp_140_fu_459_p2;
    sc_signal< sc_lv<14> > tmp_140_reg_1521;
    sc_signal< sc_lv<1> > tmp_160_fu_465_p2;
    sc_signal< sc_lv<1> > tmp_160_reg_1526_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_160_reg_1526_pp0_iter2_reg;
    sc_signal< sc_lv<9> > sf_1_fu_471_p2;
    sc_signal< sc_lv<16> > indvar_flatten_next_fu_483_p3;
    sc_signal< sc_lv<7> > tmp_96_reg_1560;
    sc_signal< sc_lv<1> > tmp_1024_reg_1565;
    sc_signal< sc_lv<1> > tmp_161_fu_566_p2;
    sc_signal< sc_lv<1> > tmp_161_reg_1570;
    sc_signal< sc_lv<7> > tmp_99_reg_1575;
    sc_signal< sc_lv<1> > tmp_1027_reg_1580;
    sc_signal< sc_lv<1> > tmp_255_1_fu_636_p2;
    sc_signal< sc_lv<1> > tmp_255_1_reg_1585;
    sc_signal< sc_lv<7> > tmp_102_reg_1590;
    sc_signal< sc_lv<1> > tmp_1030_reg_1595;
    sc_signal< sc_lv<1> > tmp_255_2_fu_706_p2;
    sc_signal< sc_lv<1> > tmp_255_2_reg_1600;
    sc_signal< sc_lv<7> > tmp_105_reg_1605;
    sc_signal< sc_lv<1> > tmp_1033_reg_1610;
    sc_signal< sc_lv<1> > tmp_255_3_fu_776_p2;
    sc_signal< sc_lv<1> > tmp_255_3_reg_1615;
    sc_signal< sc_lv<8> > p_Val2_s_fu_1039_p2;
    sc_signal< sc_lv<8> > p_Val2_s_reg_1620;
    sc_signal< sc_lv<8> > p_Val2_21_1_fu_1178_p2;
    sc_signal< sc_lv<8> > p_Val2_21_1_reg_1625;
    sc_signal< sc_lv<8> > p_Val2_21_2_fu_1317_p2;
    sc_signal< sc_lv<8> > p_Val2_21_2_reg_1630;
    sc_signal< sc_lv<8> > p_Val2_21_3_fu_1456_p2;
    sc_signal< sc_lv<8> > p_Val2_21_3_reg_1635;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<64> > tmp_143_fu_491_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > macRegisters_0_V_9_fu_182;
    sc_signal< sc_lv<8> > macRegisters_0_V_fu_811_p2;
    sc_signal< sc_lv<8> > macRegisters_1_V_9_fu_186;
    sc_signal< sc_lv<8> > macRegisters_1_V_fu_834_p2;
    sc_signal< sc_lv<8> > macRegisters_2_V_9_fu_190;
    sc_signal< sc_lv<8> > macRegisters_2_V_fu_857_p2;
    sc_signal< sc_lv<8> > macRegisters_3_V_9_fu_194;
    sc_signal< sc_lv<8> > macRegisters_3_V_fu_880_p2;
    sc_signal< sc_lv<6> > tmp_fu_327_p1;
    sc_signal< sc_lv<1> > exitcond_flatten4_fu_351_p2;
    sc_signal< sc_lv<14> > tmp_138_fu_331_p3;
    sc_signal< sc_lv<1> > tmp_s_fu_387_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_381_p2;
    sc_signal< sc_lv<7> > nm_mid_fu_357_p3;
    sc_signal< sc_lv<1> > tmp_139_mid_fu_393_p2;
    sc_signal< sc_lv<1> > tmp_867_fu_405_p2;
    sc_signal< sc_lv<7> > nm_1_fu_399_p2;
    sc_signal< sc_lv<6> > tmp_1022_fu_419_p1;
    sc_signal< sc_lv<14> > tmp_138_mid1_fu_423_p3;
    sc_signal< sc_lv<14> > tmp_138_mid_fu_365_p3;
    sc_signal< sc_lv<6> > nm_t_mid_fu_373_p3;
    sc_signal< sc_lv<9> > sf_mid2_fu_411_p3;
    sc_signal< sc_lv<14> > sf_cast1_fu_455_p1;
    sc_signal< sc_lv<14> > tmp_138_mid2_fu_431_p3;
    sc_signal< sc_lv<16> > indvar_flatten_op_fu_477_p2;
    sc_signal< sc_lv<6> > p_Val2_s_188_fu_506_p0;
    sc_signal< sc_lv<8> > p_Val2_s_188_fu_506_p1;
    sc_signal< sc_lv<14> > p_08_cast_cast_fu_498_p1;
    sc_signal< sc_lv<14> > p_Val2_s_188_fu_506_p2;
    sc_signal< sc_lv<1> > tmp_1025_fu_538_p1;
    sc_signal< sc_lv<1> > tmp_1023_fu_512_p3;
    sc_signal< sc_lv<5> > tmp_146_fu_548_p4;
    sc_signal< sc_lv<1> > tmp_145_fu_542_p2;
    sc_signal< sc_lv<6> > tmp_147_fu_558_p3;
    sc_signal< sc_lv<6> > p_Val2_1_fu_576_p0;
    sc_signal< sc_lv<8> > p_Val2_1_fu_576_p1;
    sc_signal< sc_lv<14> > p_Val2_1_fu_576_p2;
    sc_signal< sc_lv<1> > tmp_1028_fu_608_p1;
    sc_signal< sc_lv<1> > tmp_1026_fu_582_p3;
    sc_signal< sc_lv<5> > tmp_150_fu_618_p4;
    sc_signal< sc_lv<1> > tmp_149_fu_612_p2;
    sc_signal< sc_lv<6> > tmp_151_fu_628_p3;
    sc_signal< sc_lv<6> > p_Val2_2_fu_646_p0;
    sc_signal< sc_lv<8> > p_Val2_2_fu_646_p1;
    sc_signal< sc_lv<14> > p_Val2_2_fu_646_p2;
    sc_signal< sc_lv<1> > tmp_1031_fu_678_p1;
    sc_signal< sc_lv<1> > tmp_1029_fu_652_p3;
    sc_signal< sc_lv<5> > tmp_154_fu_688_p4;
    sc_signal< sc_lv<1> > tmp_153_fu_682_p2;
    sc_signal< sc_lv<6> > tmp_155_fu_698_p3;
    sc_signal< sc_lv<6> > p_Val2_3_fu_716_p0;
    sc_signal< sc_lv<8> > p_Val2_3_fu_716_p1;
    sc_signal< sc_lv<14> > p_Val2_3_fu_716_p2;
    sc_signal< sc_lv<1> > tmp_1034_fu_748_p1;
    sc_signal< sc_lv<1> > tmp_1032_fu_722_p3;
    sc_signal< sc_lv<5> > tmp_158_fu_758_p4;
    sc_signal< sc_lv<1> > tmp_157_fu_752_p2;
    sc_signal< sc_lv<6> > tmp_159_fu_768_p3;
    sc_signal< sc_lv<1> > qb_assign_1_fu_797_p2;
    sc_signal< sc_lv<8> > tmp_162_fu_801_p1;
    sc_signal< sc_lv<8> > tmp_97_fu_794_p1;
    sc_signal< sc_lv<8> > tmp1_fu_805_p2;
    sc_signal< sc_lv<1> > qb_assign_1_1_fu_820_p2;
    sc_signal< sc_lv<8> > tmp_256_1_fu_824_p1;
    sc_signal< sc_lv<8> > tmp_100_fu_817_p1;
    sc_signal< sc_lv<8> > tmp2_fu_828_p2;
    sc_signal< sc_lv<1> > qb_assign_1_2_fu_843_p2;
    sc_signal< sc_lv<8> > tmp_256_2_fu_847_p1;
    sc_signal< sc_lv<8> > tmp_103_fu_840_p1;
    sc_signal< sc_lv<8> > tmp3_fu_851_p2;
    sc_signal< sc_lv<1> > qb_assign_1_3_fu_866_p2;
    sc_signal< sc_lv<8> > tmp_256_3_fu_870_p1;
    sc_signal< sc_lv<8> > tmp_106_fu_863_p1;
    sc_signal< sc_lv<8> > tmp4_fu_874_p2;
    sc_signal< sc_lv<8> > tmp_107_fu_906_p66;
    sc_signal< sc_lv<8> > tmp_108_fu_1045_p66;
    sc_signal< sc_lv<8> > tmp_109_fu_1184_p66;
    sc_signal< sc_lv<8> > tmp_110_fu_1323_p66;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<21> ap_const_lv21_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<21> ap_const_lv21_100000;
    static const sc_lv<21> ap_const_lv21_1;
    static const sc_lv<16> ap_const_lv16_4000;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<9> ap_const_lv9_FF;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_7;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<8> ap_const_lv8_A;
    static const sc_lv<8> ap_const_lv8_6;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_B;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<8> ap_const_lv8_F;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_8;
    static const sc_lv<8> ap_const_lv8_11;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<8> ap_const_lv8_F8;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<8> ap_const_lv8_9;
    static const sc_lv<8> ap_const_lv8_19;
    static const sc_lv<8> ap_const_lv8_15;
    static const sc_lv<8> ap_const_lv8_13;
    static const sc_lv<8> ap_const_lv8_E;
    static const sc_lv<8> ap_const_lv8_C;
    static const sc_lv<8> ap_const_lv8_12;
    static const sc_lv<8> ap_const_lv8_14;
    static const sc_lv<8> ap_const_lv8_F1;
    static const sc_lv<8> ap_const_lv8_F7;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const11();
    void thread_ap_var_for_const12();
    void thread_ap_var_for_const13();
    void thread_ap_var_for_const14();
    void thread_ap_var_for_const15();
    void thread_ap_var_for_const16();
    void thread_ap_var_for_const17();
    void thread_ap_var_for_const18();
    void thread_ap_var_for_const19();
    void thread_ap_var_for_const20();
    void thread_ap_var_for_const21();
    void thread_ap_var_for_const22();
    void thread_ap_var_for_const23();
    void thread_ap_var_for_const24();
    void thread_ap_var_for_const25();
    void thread_ap_var_for_const26();
    void thread_ap_var_for_const27();
    void thread_ap_var_for_const28();
    void thread_ap_var_for_const29();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten4_fu_351_p2();
    void thread_exitcond_flatten_fu_339_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_indvar_flatten_next1_fu_345_p2();
    void thread_indvar_flatten_next_fu_483_p3();
    void thread_indvar_flatten_op_fu_477_p2();
    void thread_internal_ap_ready();
    void thread_macRegisters_0_V_fu_811_p2();
    void thread_macRegisters_1_V_fu_834_p2();
    void thread_macRegisters_2_V_fu_857_p2();
    void thread_macRegisters_3_V_fu_880_p2();
    void thread_nm_1_fu_399_p2();
    void thread_nm_mid2_fu_447_p3();
    void thread_nm_mid_fu_357_p3();
    void thread_nm_t_mid2_fu_439_p3();
    void thread_nm_t_mid_fu_373_p3();
    void thread_not_exitcond_flatten_fu_381_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_08_cast_cast_fu_498_p1();
    void thread_p_Val2_1_fu_576_p0();
    void thread_p_Val2_1_fu_576_p1();
    void thread_p_Val2_1_fu_576_p2();
    void thread_p_Val2_21_1_fu_1178_p2();
    void thread_p_Val2_21_2_fu_1317_p2();
    void thread_p_Val2_21_3_fu_1456_p2();
    void thread_p_Val2_2_fu_646_p0();
    void thread_p_Val2_2_fu_646_p1();
    void thread_p_Val2_2_fu_646_p2();
    void thread_p_Val2_3_fu_716_p0();
    void thread_p_Val2_3_fu_716_p1();
    void thread_p_Val2_3_fu_716_p2();
    void thread_p_Val2_s_188_fu_506_p0();
    void thread_p_Val2_s_188_fu_506_p1();
    void thread_p_Val2_s_188_fu_506_p2();
    void thread_p_Val2_s_fu_1039_p2();
    void thread_qb_assign_1_1_fu_820_p2();
    void thread_qb_assign_1_2_fu_843_p2();
    void thread_qb_assign_1_3_fu_866_p2();
    void thread_qb_assign_1_fu_797_p2();
    void thread_real_start();
    void thread_sf_1_fu_471_p2();
    void thread_sf_cast1_fu_455_p1();
    void thread_sf_mid2_fu_411_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_fu_805_p2();
    void thread_tmp2_fu_828_p2();
    void thread_tmp3_fu_851_p2();
    void thread_tmp4_fu_874_p2();
    void thread_tmp_100_fu_817_p1();
    void thread_tmp_1022_fu_419_p1();
    void thread_tmp_1023_fu_512_p3();
    void thread_tmp_1025_fu_538_p1();
    void thread_tmp_1026_fu_582_p3();
    void thread_tmp_1028_fu_608_p1();
    void thread_tmp_1029_fu_652_p3();
    void thread_tmp_1031_fu_678_p1();
    void thread_tmp_1032_fu_722_p3();
    void thread_tmp_1034_fu_748_p1();
    void thread_tmp_103_fu_840_p1();
    void thread_tmp_106_fu_863_p1();
    void thread_tmp_138_fu_331_p3();
    void thread_tmp_138_mid1_fu_423_p3();
    void thread_tmp_138_mid2_fu_431_p3();
    void thread_tmp_138_mid_fu_365_p3();
    void thread_tmp_139_mid_fu_393_p2();
    void thread_tmp_140_fu_459_p2();
    void thread_tmp_143_fu_491_p1();
    void thread_tmp_145_fu_542_p2();
    void thread_tmp_146_fu_548_p4();
    void thread_tmp_147_fu_558_p3();
    void thread_tmp_149_fu_612_p2();
    void thread_tmp_150_fu_618_p4();
    void thread_tmp_151_fu_628_p3();
    void thread_tmp_153_fu_682_p2();
    void thread_tmp_154_fu_688_p4();
    void thread_tmp_155_fu_698_p3();
    void thread_tmp_157_fu_752_p2();
    void thread_tmp_158_fu_758_p4();
    void thread_tmp_159_fu_768_p3();
    void thread_tmp_160_fu_465_p2();
    void thread_tmp_161_fu_566_p2();
    void thread_tmp_162_fu_801_p1();
    void thread_tmp_255_1_fu_636_p2();
    void thread_tmp_255_2_fu_706_p2();
    void thread_tmp_255_3_fu_776_p2();
    void thread_tmp_256_1_fu_824_p1();
    void thread_tmp_256_2_fu_847_p1();
    void thread_tmp_256_3_fu_870_p1();
    void thread_tmp_867_fu_405_p2();
    void thread_tmp_97_fu_794_p1();
    void thread_tmp_fu_327_p1();
    void thread_tmp_s_fu_387_p2();
    void thread_weights19_m_weights_1_address0();
    void thread_weights19_m_weights_1_ce0();
    void thread_weights19_m_weights_2_address0();
    void thread_weights19_m_weights_2_ce0();
    void thread_weights19_m_weights_3_address0();
    void thread_weights19_m_weights_3_ce0();
    void thread_weights19_m_weights_s_address0();
    void thread_weights19_m_weights_s_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
