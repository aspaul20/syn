// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv1DMac_new409_HH_
#define _Conv1DMac_new409_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "computeS3_mux_646yd2_x_x_x.h"
#include "Conv1DMac_new409_KfY.h"
#include "Conv1DMac_new409_Lf8.h"
#include "Conv1DMac_new409_Mgi.h"
#include "Conv1DMac_new409_Ngs.h"

namespace ap_rtl {

struct Conv1DMac_new409 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_signal< sc_lv<8> > ap_var_for_const0;
    sc_signal< sc_lv<8> > ap_var_for_const1;
    sc_signal< sc_lv<8> > ap_var_for_const2;
    sc_signal< sc_lv<8> > ap_var_for_const3;
    sc_signal< sc_lv<8> > ap_var_for_const4;
    sc_signal< sc_lv<8> > ap_var_for_const5;
    sc_signal< sc_lv<8> > ap_var_for_const6;
    sc_signal< sc_lv<8> > ap_var_for_const7;
    sc_signal< sc_lv<8> > ap_var_for_const8;
    sc_signal< sc_lv<8> > ap_var_for_const9;
    sc_signal< sc_lv<8> > ap_var_for_const10;
    sc_signal< sc_lv<8> > ap_var_for_const11;


    // Module declarations
    Conv1DMac_new409(sc_module_name name);
    SC_HAS_PROCESS(Conv1DMac_new409);

    ~Conv1DMac_new409();

    sc_trace_file* mVcdFile;

    Conv1DMac_new409_KfY* weights14_m_weights_3_U;
    Conv1DMac_new409_Lf8* weights14_m_weights_2_U;
    Conv1DMac_new409_Mgi* weights14_m_weights_1_U;
    Conv1DMac_new409_Ngs* weights14_m_weights_s_U;
    computeS3_mux_646yd2_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_U87;
    computeS3_mux_646yd2_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_U88;
    computeS3_mux_646yd2_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_U89;
    computeS3_mux_646yd2_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS3_mux_646yd2_x_x_x_U90;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<14> > weights14_m_weights_3_address0;
    sc_signal< sc_logic > weights14_m_weights_3_ce0;
    sc_signal< sc_lv<6> > weights14_m_weights_3_q0;
    sc_signal< sc_lv<14> > weights14_m_weights_2_address0;
    sc_signal< sc_logic > weights14_m_weights_2_ce0;
    sc_signal< sc_lv<6> > weights14_m_weights_2_q0;
    sc_signal< sc_lv<14> > weights14_m_weights_1_address0;
    sc_signal< sc_logic > weights14_m_weights_1_ce0;
    sc_signal< sc_lv<6> > weights14_m_weights_1_q0;
    sc_signal< sc_lv<14> > weights14_m_weights_s_address0;
    sc_signal< sc_logic > weights14_m_weights_s_ce0;
    sc_signal< sc_lv<6> > weights14_m_weights_s_q0;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten8_reg_1463;
    sc_signal< sc_lv<1> > exitcond_flatten8_reg_1463_pp0_iter1_reg;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > tmp_157_reg_1490;
    sc_signal< sc_lv<1> > tmp_157_reg_1490_pp0_iter3_reg;
    sc_signal< sc_lv<25> > indvar_flatten8_reg_227;
    sc_signal< sc_lv<16> > indvar_flatten_reg_238;
    sc_signal< sc_lv<7> > nm_reg_249;
    sc_signal< sc_lv<9> > sf_reg_260;
    sc_signal< sc_lv<1> > exitcond_flatten8_fu_303_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<25> > indvar_flatten_next8_fu_309_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<6> > nm_t_mid2_fu_403_p3;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1472;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1472_pp0_iter1_reg;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1472_pp0_iter2_reg;
    sc_signal< sc_lv<7> > nm_mid2_fu_411_p3;
    sc_signal< sc_lv<14> > tmp_137_fu_423_p2;
    sc_signal< sc_lv<14> > tmp_137_reg_1485;
    sc_signal< sc_lv<1> > tmp_157_fu_429_p2;
    sc_signal< sc_lv<1> > tmp_157_reg_1490_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_157_reg_1490_pp0_iter2_reg;
    sc_signal< sc_lv<9> > sf_2_fu_435_p2;
    sc_signal< sc_lv<16> > indvar_flatten_next_fu_447_p3;
    sc_signal< sc_lv<7> > tmp_112_reg_1524;
    sc_signal< sc_lv<1> > tmp_955_reg_1529;
    sc_signal< sc_lv<1> > tmp_143_fu_530_p2;
    sc_signal< sc_lv<1> > tmp_143_reg_1534;
    sc_signal< sc_lv<7> > tmp_115_reg_1539;
    sc_signal< sc_lv<1> > tmp_958_reg_1544;
    sc_signal< sc_lv<1> > tmp_279_1_fu_600_p2;
    sc_signal< sc_lv<1> > tmp_279_1_reg_1549;
    sc_signal< sc_lv<7> > tmp_118_reg_1554;
    sc_signal< sc_lv<1> > tmp_961_reg_1559;
    sc_signal< sc_lv<1> > tmp_279_2_fu_670_p2;
    sc_signal< sc_lv<1> > tmp_279_2_reg_1564;
    sc_signal< sc_lv<7> > tmp_121_reg_1569;
    sc_signal< sc_lv<1> > tmp_964_reg_1574;
    sc_signal< sc_lv<1> > tmp_279_3_fu_740_p2;
    sc_signal< sc_lv<1> > tmp_279_3_reg_1579;
    sc_signal< sc_lv<8> > p_Val2_s_fu_1003_p2;
    sc_signal< sc_lv<8> > p_Val2_s_reg_1584;
    sc_signal< sc_lv<8> > p_Val2_23_1_fu_1142_p2;
    sc_signal< sc_lv<8> > p_Val2_23_1_reg_1589;
    sc_signal< sc_lv<8> > p_Val2_23_2_fu_1281_p2;
    sc_signal< sc_lv<8> > p_Val2_23_2_reg_1594;
    sc_signal< sc_lv<8> > p_Val2_23_3_fu_1420_p2;
    sc_signal< sc_lv<8> > p_Val2_23_3_reg_1599;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<64> > tmp_138_fu_455_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > macRegisters_0_V_4_fu_146;
    sc_signal< sc_lv<8> > macRegisters_0_V_fu_775_p2;
    sc_signal< sc_lv<8> > macRegisters_1_V_4_fu_150;
    sc_signal< sc_lv<8> > macRegisters_1_V_fu_798_p2;
    sc_signal< sc_lv<8> > macRegisters_2_V_4_fu_154;
    sc_signal< sc_lv<8> > macRegisters_2_V_fu_821_p2;
    sc_signal< sc_lv<8> > macRegisters_3_V_4_fu_158;
    sc_signal< sc_lv<8> > macRegisters_3_V_fu_844_p2;
    sc_signal< sc_lv<6> > tmp_fu_291_p1;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_315_p2;
    sc_signal< sc_lv<14> > tmp_s_fu_295_p3;
    sc_signal< sc_lv<1> > tmp_884_fu_351_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_345_p2;
    sc_signal< sc_lv<7> > nm_mid_fu_321_p3;
    sc_signal< sc_lv<1> > tmp_163_mid_fu_357_p2;
    sc_signal< sc_lv<1> > tmp_857_fu_369_p2;
    sc_signal< sc_lv<7> > nm_2_fu_363_p2;
    sc_signal< sc_lv<6> > tmp_953_fu_383_p1;
    sc_signal< sc_lv<14> > tmp_162_mid1_fu_387_p3;
    sc_signal< sc_lv<14> > tmp_162_mid_fu_329_p3;
    sc_signal< sc_lv<6> > nm_t_mid_fu_337_p3;
    sc_signal< sc_lv<9> > sf_mid2_fu_375_p3;
    sc_signal< sc_lv<14> > sf_cast1_fu_419_p1;
    sc_signal< sc_lv<14> > tmp_162_mid2_fu_395_p3;
    sc_signal< sc_lv<16> > indvar_flatten_op_fu_441_p2;
    sc_signal< sc_lv<6> > p_Val2_s_184_fu_470_p0;
    sc_signal< sc_lv<8> > p_Val2_s_184_fu_470_p1;
    sc_signal< sc_lv<14> > p_08_cast_cast_fu_462_p1;
    sc_signal< sc_lv<14> > p_Val2_s_184_fu_470_p2;
    sc_signal< sc_lv<1> > tmp_956_fu_502_p1;
    sc_signal< sc_lv<1> > tmp_954_fu_476_p3;
    sc_signal< sc_lv<5> > tmp_141_fu_512_p4;
    sc_signal< sc_lv<1> > tmp_140_fu_506_p2;
    sc_signal< sc_lv<6> > tmp_142_fu_522_p3;
    sc_signal< sc_lv<6> > p_Val2_1_fu_540_p0;
    sc_signal< sc_lv<8> > p_Val2_1_fu_540_p1;
    sc_signal< sc_lv<14> > p_Val2_1_fu_540_p2;
    sc_signal< sc_lv<1> > tmp_959_fu_572_p1;
    sc_signal< sc_lv<1> > tmp_957_fu_546_p3;
    sc_signal< sc_lv<5> > tmp_147_fu_582_p4;
    sc_signal< sc_lv<1> > tmp_146_fu_576_p2;
    sc_signal< sc_lv<6> > tmp_148_fu_592_p3;
    sc_signal< sc_lv<6> > p_Val2_2_fu_610_p0;
    sc_signal< sc_lv<8> > p_Val2_2_fu_610_p1;
    sc_signal< sc_lv<14> > p_Val2_2_fu_610_p2;
    sc_signal< sc_lv<1> > tmp_962_fu_642_p1;
    sc_signal< sc_lv<1> > tmp_960_fu_616_p3;
    sc_signal< sc_lv<5> > tmp_151_fu_652_p4;
    sc_signal< sc_lv<1> > tmp_150_fu_646_p2;
    sc_signal< sc_lv<6> > tmp_152_fu_662_p3;
    sc_signal< sc_lv<6> > p_Val2_3_fu_680_p0;
    sc_signal< sc_lv<8> > p_Val2_3_fu_680_p1;
    sc_signal< sc_lv<14> > p_Val2_3_fu_680_p2;
    sc_signal< sc_lv<1> > tmp_965_fu_712_p1;
    sc_signal< sc_lv<1> > tmp_963_fu_686_p3;
    sc_signal< sc_lv<5> > tmp_155_fu_722_p4;
    sc_signal< sc_lv<1> > tmp_154_fu_716_p2;
    sc_signal< sc_lv<6> > tmp_156_fu_732_p3;
    sc_signal< sc_lv<1> > qb_assign_2_fu_761_p2;
    sc_signal< sc_lv<8> > tmp_144_fu_765_p1;
    sc_signal< sc_lv<8> > tmp_113_fu_758_p1;
    sc_signal< sc_lv<8> > tmp1_fu_769_p2;
    sc_signal< sc_lv<1> > qb_assign_2_1_fu_784_p2;
    sc_signal< sc_lv<8> > tmp_280_1_fu_788_p1;
    sc_signal< sc_lv<8> > tmp_116_fu_781_p1;
    sc_signal< sc_lv<8> > tmp2_fu_792_p2;
    sc_signal< sc_lv<1> > qb_assign_2_2_fu_807_p2;
    sc_signal< sc_lv<8> > tmp_280_2_fu_811_p1;
    sc_signal< sc_lv<8> > tmp_119_fu_804_p1;
    sc_signal< sc_lv<8> > tmp3_fu_815_p2;
    sc_signal< sc_lv<1> > qb_assign_2_3_fu_830_p2;
    sc_signal< sc_lv<8> > tmp_280_3_fu_834_p1;
    sc_signal< sc_lv<8> > tmp_122_fu_827_p1;
    sc_signal< sc_lv<8> > tmp4_fu_838_p2;
    sc_signal< sc_lv<8> > tmp_123_fu_870_p66;
    sc_signal< sc_lv<8> > tmp_124_fu_1009_p66;
    sc_signal< sc_lv<8> > tmp_125_fu_1148_p66;
    sc_signal< sc_lv<8> > tmp_126_fu_1287_p66;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<25> ap_const_lv25_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<25> ap_const_lv25_1000000;
    static const sc_lv<25> ap_const_lv25_1;
    static const sc_lv<16> ap_const_lv16_4000;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<9> ap_const_lv9_FF;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<8> ap_const_lv8_7;
    static const sc_lv<8> ap_const_lv8_C;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const11();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten8_fu_303_p2();
    void thread_exitcond_flatten_fu_315_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_indvar_flatten_next8_fu_309_p2();
    void thread_indvar_flatten_next_fu_447_p3();
    void thread_indvar_flatten_op_fu_441_p2();
    void thread_internal_ap_ready();
    void thread_macRegisters_0_V_fu_775_p2();
    void thread_macRegisters_1_V_fu_798_p2();
    void thread_macRegisters_2_V_fu_821_p2();
    void thread_macRegisters_3_V_fu_844_p2();
    void thread_nm_2_fu_363_p2();
    void thread_nm_mid2_fu_411_p3();
    void thread_nm_mid_fu_321_p3();
    void thread_nm_t_mid2_fu_403_p3();
    void thread_nm_t_mid_fu_337_p3();
    void thread_not_exitcond_flatten_fu_345_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_08_cast_cast_fu_462_p1();
    void thread_p_Val2_1_fu_540_p0();
    void thread_p_Val2_1_fu_540_p1();
    void thread_p_Val2_1_fu_540_p2();
    void thread_p_Val2_23_1_fu_1142_p2();
    void thread_p_Val2_23_2_fu_1281_p2();
    void thread_p_Val2_23_3_fu_1420_p2();
    void thread_p_Val2_2_fu_610_p0();
    void thread_p_Val2_2_fu_610_p1();
    void thread_p_Val2_2_fu_610_p2();
    void thread_p_Val2_3_fu_680_p0();
    void thread_p_Val2_3_fu_680_p1();
    void thread_p_Val2_3_fu_680_p2();
    void thread_p_Val2_s_184_fu_470_p0();
    void thread_p_Val2_s_184_fu_470_p1();
    void thread_p_Val2_s_184_fu_470_p2();
    void thread_p_Val2_s_fu_1003_p2();
    void thread_qb_assign_2_1_fu_784_p2();
    void thread_qb_assign_2_2_fu_807_p2();
    void thread_qb_assign_2_3_fu_830_p2();
    void thread_qb_assign_2_fu_761_p2();
    void thread_real_start();
    void thread_sf_2_fu_435_p2();
    void thread_sf_cast1_fu_419_p1();
    void thread_sf_mid2_fu_375_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_fu_769_p2();
    void thread_tmp2_fu_792_p2();
    void thread_tmp3_fu_815_p2();
    void thread_tmp4_fu_838_p2();
    void thread_tmp_113_fu_758_p1();
    void thread_tmp_116_fu_781_p1();
    void thread_tmp_119_fu_804_p1();
    void thread_tmp_122_fu_827_p1();
    void thread_tmp_137_fu_423_p2();
    void thread_tmp_138_fu_455_p1();
    void thread_tmp_140_fu_506_p2();
    void thread_tmp_141_fu_512_p4();
    void thread_tmp_142_fu_522_p3();
    void thread_tmp_143_fu_530_p2();
    void thread_tmp_144_fu_765_p1();
    void thread_tmp_146_fu_576_p2();
    void thread_tmp_147_fu_582_p4();
    void thread_tmp_148_fu_592_p3();
    void thread_tmp_150_fu_646_p2();
    void thread_tmp_151_fu_652_p4();
    void thread_tmp_152_fu_662_p3();
    void thread_tmp_154_fu_716_p2();
    void thread_tmp_155_fu_722_p4();
    void thread_tmp_156_fu_732_p3();
    void thread_tmp_157_fu_429_p2();
    void thread_tmp_162_mid1_fu_387_p3();
    void thread_tmp_162_mid2_fu_395_p3();
    void thread_tmp_162_mid_fu_329_p3();
    void thread_tmp_163_mid_fu_357_p2();
    void thread_tmp_279_1_fu_600_p2();
    void thread_tmp_279_2_fu_670_p2();
    void thread_tmp_279_3_fu_740_p2();
    void thread_tmp_280_1_fu_788_p1();
    void thread_tmp_280_2_fu_811_p1();
    void thread_tmp_280_3_fu_834_p1();
    void thread_tmp_857_fu_369_p2();
    void thread_tmp_884_fu_351_p2();
    void thread_tmp_953_fu_383_p1();
    void thread_tmp_954_fu_476_p3();
    void thread_tmp_956_fu_502_p1();
    void thread_tmp_957_fu_546_p3();
    void thread_tmp_959_fu_572_p1();
    void thread_tmp_960_fu_616_p3();
    void thread_tmp_962_fu_642_p1();
    void thread_tmp_963_fu_686_p3();
    void thread_tmp_965_fu_712_p1();
    void thread_tmp_fu_291_p1();
    void thread_tmp_s_fu_295_p3();
    void thread_weights14_m_weights_1_address0();
    void thread_weights14_m_weights_1_ce0();
    void thread_weights14_m_weights_2_address0();
    void thread_weights14_m_weights_2_ce0();
    void thread_weights14_m_weights_3_address0();
    void thread_weights14_m_weights_3_ce0();
    void thread_weights14_m_weights_s_address0();
    void thread_weights14_m_weights_s_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
