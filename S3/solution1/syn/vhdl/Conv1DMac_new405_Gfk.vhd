-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Conv1DMac_new405_Gfk_rom is 
    generic(
             DWIDTH     : integer := 7; 
             AWIDTH     : integer := 14; 
             MEM_SIZE    : integer := 16384
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Conv1DMac_new405_Gfk_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 1279=> "0000000", 1280 => "0000101", 1281 to 1306=> "0000000", 1307 => "0000110", 
    1308 to 1316=> "0000000", 1317 to 1318=> "0000101", 1319 to 1326=> "0000000", 1327 => "0000100", 
    1328 to 1332=> "0000000", 1333 => "0000101", 1334 to 1341=> "0000000", 1342 => "0000101", 
    1343 to 1386=> "0000000", 1387 => "0000001", 1388 to 1399=> "0000000", 1400 => "0000101", 
    1401 to 1414=> "0000000", 1415 => "0000010", 1416 to 1440=> "0000000", 1441 => "0000101", 
    1442 to 1447=> "0000000", 1448 => "0000101", 1449 to 1502=> "0000000", 1503 => "0000010", 
    1504 to 1528=> "0000000", 1529 to 1530=> "0000101", 1531 to 2815=> "0000000", 2816 => "0001101", 
    2817 to 2842=> "0000000", 2843 => "0001110", 2844 to 2852=> "0000000", 2853 to 2854=> "0001101", 
    2855 to 2862=> "0000000", 2863 => "0001001", 2864 to 2868=> "0000000", 2869 => "0001100", 
    2870 to 2877=> "0000000", 2878 => "0001100", 2879 to 2902=> "0000000", 2903 to 2904=> "1111111", 
    2905 to 2909=> "0000000", 2910 to 2911=> "1111111", 2912 to 2935=> "0000000", 2936 => "0001101", 
    2937 to 2950=> "0000000", 2951 => "0000110", 2952 to 2976=> "0000000", 2977 => "0001100", 
    2978 => "1111111", 2979 to 2983=> "0000000", 2984 => "0001100", 2985 to 3003=> "0000000", 
    3004 => "0000001", 3005 to 3027=> "0000000", 3028 => "1111111", 3029 to 3038=> "0000000", 
    3039 => "0000101", 3040 to 3064=> "0000000", 3065 => "0001101", 3066 => "0001100", 
    3067 to 4351=> "0000000", 4352 => "0001001", 4353 to 4378=> "0000000", 4379 => "0001001", 
    4380 to 4388=> "0000000", 4389 to 4390=> "0001001", 4391 to 4398=> "0000000", 4399 => "0000110", 
    4400 to 4404=> "0000000", 4405 => "0001000", 4406 to 4413=> "0000000", 4414 => "0001000", 
    4415 to 4439=> "0000000", 4440 => "1111111", 4441 to 4471=> "0000000", 4472 => "0001001", 
    4473 to 4486=> "0000000", 4487 => "0000100", 4488 to 4512=> "0000000", 4513 => "0001000", 
    4514 to 4519=> "0000000", 4520 => "0001001", 4521 to 4539=> "0000000", 4540 => "0000001", 
    4541 to 4569=> "0000000", 4570 => "1111111", 4571 to 4574=> "0000000", 4575 => "0000011", 
    4576 to 4600=> "0000000", 4601 => "0001001", 4602 => "0001000", 4603 to 4871=> "0000000", 
    4872 => "0000010", 4873 to 4927=> "0000000", 4928 => "0000100", 4929 to 4931=> "0000000", 
    4932 => "0011111", 4933 to 4968=> "0000000", 4969 => "0000001", 4970 to 5029=> "0000000", 
    5030 => "0010110", 5031 to 5032=> "0000000", 5033 => "0011100", 5034 to 5085=> "0000000", 
    5086 => "0010111", 5087 to 5096=> "0000000", 5097 => "0011011", 5098 to 5383=> "0000000", 
    5384 => "0000001", 5385 to 5439=> "0000000", 5440 => "0000011", 5441 to 5443=> "0000000", 
    5444 => "0010111", 5445 to 5541=> "0000000", 5542 => "0010000", 5543 to 5544=> "0000000", 
    5545 => "0010100", 5546 to 5597=> "0000000", 5598 => "0010001", 5599 to 5608=> "0000000", 
    5609 => "0010100", 5610 to 5695=> "0000000", 5696 => "0000001", 5697 to 5699=> "0000000", 
    5700 => "0000110", 5701 to 5797=> "0000000", 5798 => "0000101", 5799 to 5800=> "0000000", 
    5801 => "0000110", 5802 to 5853=> "0000000", 5854 => "0000101", 5855 to 5864=> "0000000", 
    5865 => "0000110", 5866 to 5895=> "0000000", 5896 => "0000001", 5897 to 5951=> "0000000", 
    5952 => "0000010", 5953 to 5955=> "0000000", 5956 => "0010101", 5957 to 6053=> "0000000", 
    6054 => "0001111", 6055 to 6056=> "0000000", 6057 => "0010011", 6058 to 6109=> "0000000", 
    6110 => "0001111", 6111 to 6120=> "0000000", 6121 => "0010010", 6122 to 8191=> "0000000", 
    8192 => "0001101", 8193 to 8218=> "0000000", 8219 => "0001101", 8220 to 8228=> "0000000", 
    8229 to 8230=> "0001101", 8231 to 8238=> "0000000", 8239 => "0001001", 8240 to 8244=> "0000000", 
    8245 => "0001100", 8246 to 8253=> "0000000", 8254 => "0001100", 8255 to 8278=> "0000000", 
    8279 to 8280=> "1111111", 8281 to 8285=> "0000000", 8286 to 8287=> "1111111", 8288 to 8311=> "0000000", 
    8312 => "0001101", 8313 to 8326=> "0000000", 8327 => "0000101", 8328 to 8352=> "0000000", 
    8353 => "0001011", 8354 => "1111111", 8355 to 8359=> "0000000", 8360 => "0001100", 
    8361 to 8379=> "0000000", 8380 => "0000001", 8381 to 8403=> "0000000", 8404 => "1111111", 
    8405 to 8409=> "0000000", 8410 => "1111111", 8411 to 8414=> "0000000", 8415 => "0000101", 
    8416 to 8440=> "0000000", 8441 to 8442=> "0001100", 8443 to 9754=> "0000000", 9755 => "0000001", 
    9756 to 9765=> "0000000", 9766 => "0000001", 9767 to 9774=> "0000000", 9775 => "0000001", 
    9776 to 9789=> "0000000", 9790 => "0000001", 9791 to 9803=> "0000000", 9804 => "0000011", 
    9805 to 9815=> "0000000", 9816 => "0100011", 9817 to 9834=> "0000000", 9835 => "0100011", 
    9836 to 9862=> "0000000", 9863 => "1111111", 9864 to 9895=> "0000000", 9896 => "0000001", 
    9897 to 9919=> "0000000", 9920 => "0000001", 9921 to 9945=> "0000000", 9946 => "0100011", 
    9947 to 9950=> "0000000", 9951 => "0000001", 9952 to 9965=> "0000000", 9966 => "0000001", 
    9967 to 9976=> "0000000", 9977 to 9978=> "0000001", 9979 to 10070=> "0000000", 10071 => "0000101", 
    10072 to 10077=> "0000000", 10078 => "0000101", 10079 => "0000011", 10080 to 10141=> "0000000", 
    10142 => "0000011", 10143 to 10145=> "0000000", 10146 => "0000011", 10147 to 10161=> "0000000", 
    10162 => "0000010", 10163 to 10181=> "0000000", 10182 => "0000001", 10183 to 10195=> "0000000", 
    10196 => "0000100", 10197 to 11007=> "0000000", 11008 => "0001101", 11009 to 11034=> "0000000", 
    11035 => "0001101", 11036 to 11044=> "0000000", 11045 => "0001101", 11046 => "0001100", 
    11047 to 11054=> "0000000", 11055 => "0001001", 11056 to 11060=> "0000000", 11061 => "0001100", 
    11062 to 11069=> "0000000", 11070 => "0001100", 11071 to 11094=> "0000000", 11095 to 11096=> "1111111", 
    11097 to 11101=> "0000000", 11102 to 11103=> "1111111", 11104 to 11127=> "0000000", 11128 => "0001100", 
    11129 to 11142=> "0000000", 11143 => "0000101", 11144 to 11168=> "0000000", 11169 => "0001011", 
    11170 to 11175=> "0000000", 11176 => "0001100", 11177 to 11195=> "0000000", 11196 => "0000001", 
    11197 to 11219=> "0000000", 11220 => "1111111", 11221 to 11225=> "0000000", 11226 => "1111111", 
    11227 to 11230=> "0000000", 11231 => "0000101", 11232 to 11240=> "0000000", 11241 => "0000001", 
    11242 to 11256=> "0000000", 11257 => "0001100", 11258 => "0001011", 11259 to 12031=> "0000000", 
    12032 => "0000011", 12033 to 12058=> "0000000", 12059 => "0000011", 12060 to 12068=> "0000000", 
    12069 to 12070=> "0000011", 12071 to 12077=> "0000000", 12078 to 12079=> "0000010", 12080 to 12084=> "0000000", 
    12085 => "0000011", 12086 to 12093=> "0000000", 12094 => "0000011", 12095 to 12107=> "0000000", 
    12108 => "0000001", 12109 to 12118=> "0000000", 12119 => "0000010", 12120 => "0001010", 
    12121 to 12125=> "0000000", 12126 => "0000010", 12127 => "0000001", 12128 to 12132=> "0000000", 
    12133 => "0000001", 12134 to 12135=> "0000000", 12136 => "0000001", 12137 to 12138=> "0000000", 
    12139 => "0001011", 12140 to 12149=> "0000000", 12150 => "0000001", 12151 => "0000000", 
    12152 => "0000011", 12153 to 12166=> "0000000", 12167 => "0000001", 12168 to 12189=> "0000000", 
    12190 => "0000001", 12191 to 12192=> "0000000", 12193 => "0000011", 12194 => "0000001", 
    12195 to 12199=> "0000000", 12200 => "0000011", 12201 to 12209=> "0000000", 12210 => "0000001", 
    12211 to 12223=> "0000000", 12224 => "0000001", 12225 to 12229=> "0000000", 12230 => "0000001", 
    12231 to 12243=> "0000000", 12244 => "0000001", 12245 to 12249=> "0000000", 12250 => "0001010", 
    12251 to 12254=> "0000000", 12255 => "0000010", 12256 to 12269=> "0000000", 12270 => "0000010", 
    12271 => "0000001", 12272 to 12276=> "0000000", 12277 => "0000010", 12278 to 12280=> "0000000", 
    12281 to 12282=> "0000011", 12283 to 12287=> "0000000", 12288 => "1111111", 12289 to 12314=> "0000000", 
    12315 => "1111111", 12316 to 12324=> "0000000", 12325 to 12326=> "1111111", 12327 to 12333=> "0000000", 
    12334 => "1111111", 12335 to 12340=> "0000000", 12341 => "1111111", 12342 to 12348=> "0000000", 
    12349 => "0000010", 12350 => "1111111", 12351 to 12374=> "0000000", 12375 => "0010111", 
    12376 => "1111111", 12377 to 12381=> "0000000", 12382 => "0010111", 12383 => "0010000", 
    12384 to 12388=> "0000000", 12389 => "1111111", 12390 to 12391=> "0000000", 12392 => "1111111", 
    12393 to 12394=> "0000000", 12395 => "1111111", 12396 to 12445=> "0000000", 12446 => "0001100", 
    12447 to 12448=> "0000000", 12449 => "1111111", 12450 => "0010001", 12451 to 12455=> "0000000", 
    12456 => "1111111", 12457 to 12465=> "0000000", 12466 => "0001001", 12467 to 12479=> "0000000", 
    12480 => "1111111", 12481 to 12485=> "0000000", 12486 => "0000100", 12487 to 12499=> "0000000", 
    12500 => "0010101", 12501 to 12505=> "0000000", 12506 => "1111111", 12507 to 12520=> "0000000", 
    12521 => "1111111", 12522 to 12525=> "0000000", 12526 to 12527=> "1111111", 12528 to 12532=> "0000000", 
    12533 => "1111111", 12534 to 12537=> "0000000", 12538 => "1111111", 12539 to 16383=> "0000000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity Conv1DMac_new405_Gfk is
    generic (
        DataWidth : INTEGER := 7;
        AddressRange : INTEGER := 16384;
        AddressWidth : INTEGER := 14);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Conv1DMac_new405_Gfk is
    component Conv1DMac_new405_Gfk_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Conv1DMac_new405_Gfk_rom_U :  component Conv1DMac_new405_Gfk_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


