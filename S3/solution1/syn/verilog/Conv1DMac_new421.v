// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv1DMac_new421 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [31:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [13:0] weights18_m_weights_3_address0;
reg    weights18_m_weights_3_ce0;
wire   [5:0] weights18_m_weights_3_q0;
wire   [13:0] weights18_m_weights_2_address0;
reg    weights18_m_weights_2_ce0;
wire   [5:0] weights18_m_weights_2_q0;
wire   [13:0] weights18_m_weights_1_address0;
reg    weights18_m_weights_1_ce0;
wire   [5:0] weights18_m_weights_1_q0;
wire   [13:0] weights18_m_weights_s_address0;
reg    weights18_m_weights_s_ce0;
wire   [5:0] weights18_m_weights_s_q0;
reg    in_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten5_reg_1487;
reg   [0:0] exitcond_flatten5_reg_1487_pp0_iter1_reg;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] tmp_88_reg_1514;
reg   [0:0] tmp_88_reg_1514_pp0_iter3_reg;
reg   [20:0] indvar_flatten5_reg_251;
reg   [15:0] indvar_flatten_reg_262;
reg   [6:0] nm_reg_273;
reg   [8:0] sf_reg_284;
wire   [0:0] exitcond_flatten5_fu_327_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [20:0] indvar_flatten_next5_fu_333_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] nm_t_mid2_fu_427_p3;
reg   [5:0] nm_t_mid2_reg_1496;
reg   [5:0] nm_t_mid2_reg_1496_pp0_iter1_reg;
reg   [5:0] nm_t_mid2_reg_1496_pp0_iter2_reg;
wire   [6:0] nm_mid2_fu_435_p3;
wire   [13:0] tmp_68_fu_447_p2;
reg   [13:0] tmp_68_reg_1509;
wire   [0:0] tmp_88_fu_453_p2;
reg   [0:0] tmp_88_reg_1514_pp0_iter1_reg;
reg   [0:0] tmp_88_reg_1514_pp0_iter2_reg;
wire   [8:0] sf_1_fu_459_p2;
wire   [15:0] indvar_flatten_next_fu_471_p3;
reg   [6:0] tmp_51_reg_1548;
reg   [0:0] tmp_913_reg_1553;
wire   [0:0] tmp_86_fu_554_p2;
reg   [0:0] tmp_86_reg_1558;
reg   [6:0] tmp_54_reg_1563;
reg   [0:0] tmp_916_reg_1568;
wire   [0:0] tmp_255_1_fu_624_p2;
reg   [0:0] tmp_255_1_reg_1573;
reg   [6:0] tmp_57_reg_1578;
reg   [0:0] tmp_919_reg_1583;
wire   [0:0] tmp_255_2_fu_694_p2;
reg   [0:0] tmp_255_2_reg_1588;
reg   [6:0] tmp_60_reg_1593;
reg   [0:0] tmp_922_reg_1598;
wire   [0:0] tmp_255_3_fu_764_p2;
reg   [0:0] tmp_255_3_reg_1603;
wire   [7:0] p_Val2_5_fu_1027_p2;
reg   [7:0] p_Val2_5_reg_1608;
wire   [7:0] p_Val2_21_1_fu_1166_p2;
reg   [7:0] p_Val2_21_1_reg_1613;
wire   [7:0] p_Val2_21_2_fu_1305_p2;
reg   [7:0] p_Val2_21_2_reg_1618;
wire   [7:0] p_Val2_21_3_fu_1444_p2;
reg   [7:0] p_Val2_21_3_reg_1623;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
wire   [63:0] tmp_85_fu_479_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] macRegisters_0_V_1_fu_170;
wire   [7:0] macRegisters_0_V_fu_799_p2;
reg   [7:0] macRegisters_1_V_1_fu_174;
wire   [7:0] macRegisters_1_V_fu_822_p2;
reg   [7:0] macRegisters_2_V_1_fu_178;
wire   [7:0] macRegisters_2_V_fu_845_p2;
reg   [7:0] macRegisters_3_V_1_fu_182;
wire   [7:0] macRegisters_3_V_fu_868_p2;
wire   [5:0] tmp_fu_315_p1;
wire   [0:0] exitcond_flatten_fu_339_p2;
wire   [13:0] tmp_s_fu_319_p3;
wire   [0:0] tmp_881_fu_375_p2;
wire   [0:0] not_exitcond_flatten_fu_369_p2;
wire   [6:0] nm_mid_fu_345_p3;
wire   [0:0] tmp_86_mid_fu_381_p2;
wire   [0:0] tmp_851_fu_393_p2;
wire   [6:0] nm_1_fu_387_p2;
wire   [5:0] tmp_911_fu_407_p1;
wire   [13:0] tmp_85_mid1_fu_411_p3;
wire   [13:0] tmp_85_mid_fu_353_p3;
wire   [5:0] nm_t_mid_fu_361_p3;
wire   [8:0] sf_mid2_fu_399_p3;
wire   [13:0] sf_cast1_fu_443_p1;
wire   [13:0] tmp_85_mid2_fu_419_p3;
wire   [15:0] indvar_flatten_op_fu_465_p2;
wire  signed [5:0] p_Val2_s_fu_494_p0;
wire  signed [7:0] p_Val2_s_fu_494_p1;
wire  signed [13:0] p_08_cast_cast_fu_486_p1;
wire   [13:0] p_Val2_s_fu_494_p2;
wire   [0:0] tmp_914_fu_526_p1;
wire   [0:0] tmp_912_fu_500_p3;
wire   [4:0] tmp_71_fu_536_p4;
wire   [0:0] tmp_70_fu_530_p2;
wire   [5:0] tmp_72_fu_546_p3;
wire  signed [5:0] p_Val2_1_fu_564_p0;
wire  signed [7:0] p_Val2_1_fu_564_p1;
wire   [13:0] p_Val2_1_fu_564_p2;
wire   [0:0] tmp_917_fu_596_p1;
wire   [0:0] tmp_915_fu_570_p3;
wire   [4:0] tmp_75_fu_606_p4;
wire   [0:0] tmp_74_fu_600_p2;
wire   [5:0] tmp_76_fu_616_p3;
wire  signed [5:0] p_Val2_2_fu_634_p0;
wire  signed [7:0] p_Val2_2_fu_634_p1;
wire   [13:0] p_Val2_2_fu_634_p2;
wire   [0:0] tmp_920_fu_666_p1;
wire   [0:0] tmp_918_fu_640_p3;
wire   [4:0] tmp_79_fu_676_p4;
wire   [0:0] tmp_78_fu_670_p2;
wire   [5:0] tmp_80_fu_686_p3;
wire  signed [5:0] p_Val2_3_fu_704_p0;
wire  signed [7:0] p_Val2_3_fu_704_p1;
wire   [13:0] p_Val2_3_fu_704_p2;
wire   [0:0] tmp_923_fu_736_p1;
wire   [0:0] tmp_921_fu_710_p3;
wire   [4:0] tmp_83_fu_746_p4;
wire   [0:0] tmp_82_fu_740_p2;
wire   [5:0] tmp_84_fu_756_p3;
wire   [0:0] qb_assign_1_fu_785_p2;
wire   [7:0] tmp_87_fu_789_p1;
wire  signed [7:0] tmp_52_fu_782_p1;
wire   [7:0] tmp1_fu_793_p2;
wire   [0:0] qb_assign_1_1_fu_808_p2;
wire   [7:0] tmp_256_1_fu_812_p1;
wire  signed [7:0] tmp_55_fu_805_p1;
wire   [7:0] tmp2_fu_816_p2;
wire   [0:0] qb_assign_1_2_fu_831_p2;
wire   [7:0] tmp_256_2_fu_835_p1;
wire  signed [7:0] tmp_58_fu_828_p1;
wire   [7:0] tmp3_fu_839_p2;
wire   [0:0] qb_assign_1_3_fu_854_p2;
wire   [7:0] tmp_256_3_fu_858_p1;
wire  signed [7:0] tmp_61_fu_851_p1;
wire   [7:0] tmp4_fu_862_p2;
wire   [7:0] tmp_62_fu_894_p66;
wire   [7:0] tmp_63_fu_1033_p66;
wire   [7:0] tmp_64_fu_1172_p66;
wire   [7:0] tmp_65_fu_1311_p66;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

Conv1DMac_new421_5jm #(
    .DataWidth( 6 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights18_m_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights18_m_weights_3_address0),
    .ce0(weights18_m_weights_3_ce0),
    .q0(weights18_m_weights_3_q0)
);

Conv1DMac_new421_6jw #(
    .DataWidth( 6 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights18_m_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights18_m_weights_2_address0),
    .ce0(weights18_m_weights_2_ce0),
    .q0(weights18_m_weights_2_q0)
);

Conv1DMac_new421_7jG #(
    .DataWidth( 6 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights18_m_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights18_m_weights_1_address0),
    .ce0(weights18_m_weights_1_ce0),
    .q0(weights18_m_weights_1_q0)
);

Conv1DMac_new421_8jQ #(
    .DataWidth( 6 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights18_m_weights_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights18_m_weights_s_address0),
    .ce0(weights18_m_weights_s_ce0),
    .q0(weights18_m_weights_s_q0)
);

computeS3_mux_646yd2_x_x_x_x_x_x_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_x_x_x_x_x_x_x_U168(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd10),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd0),
    .din13(8'd5),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd0),
    .din17(8'd1),
    .din18(8'd0),
    .din19(8'd7),
    .din20(8'd0),
    .din21(8'd0),
    .din22(8'd13),
    .din23(8'd0),
    .din24(8'd255),
    .din25(8'd0),
    .din26(8'd0),
    .din27(8'd251),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd0),
    .din31(8'd0),
    .din32(8'd0),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd8),
    .din37(8'd0),
    .din38(8'd0),
    .din39(8'd0),
    .din40(8'd0),
    .din41(8'd0),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd0),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd0),
    .din48(8'd252),
    .din49(8'd0),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd10),
    .din53(8'd0),
    .din54(8'd245),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd255),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd16),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1496_pp0_iter2_reg),
    .dout(tmp_62_fu_894_p66)
);

computeS3_mux_646yd2_x_x_x_x_x_x_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_x_x_x_x_x_x_x_U169(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd245),
    .din4(8'd0),
    .din5(8'd2),
    .din6(8'd10),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd253),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd1),
    .din16(8'd0),
    .din17(8'd0),
    .din18(8'd0),
    .din19(8'd0),
    .din20(8'd8),
    .din21(8'd0),
    .din22(8'd0),
    .din23(8'd0),
    .din24(8'd13),
    .din25(8'd4),
    .din26(8'd0),
    .din27(8'd0),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd252),
    .din31(8'd0),
    .din32(8'd254),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd3),
    .din37(8'd12),
    .din38(8'd0),
    .din39(8'd0),
    .din40(8'd0),
    .din41(8'd0),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd0),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd9),
    .din48(8'd0),
    .din49(8'd0),
    .din50(8'd250),
    .din51(8'd0),
    .din52(8'd251),
    .din53(8'd0),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd0),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd0),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1496_pp0_iter2_reg),
    .dout(tmp_63_fu_1033_p66)
);

computeS3_mux_646yd2_x_x_x_x_x_x_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_x_x_x_x_x_x_x_U170(
    .din0(8'd0),
    .din1(8'd1),
    .din2(8'd11),
    .din3(8'd1),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd9),
    .din8(8'd16),
    .din9(8'd5),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd0),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd11),
    .din17(8'd0),
    .din18(8'd0),
    .din19(8'd0),
    .din20(8'd10),
    .din21(8'd0),
    .din22(8'd12),
    .din23(8'd0),
    .din24(8'd0),
    .din25(8'd255),
    .din26(8'd0),
    .din27(8'd0),
    .din28(8'd255),
    .din29(8'd0),
    .din30(8'd0),
    .din31(8'd0),
    .din32(8'd0),
    .din33(8'd0),
    .din34(8'd0),
    .din35(8'd0),
    .din36(8'd0),
    .din37(8'd0),
    .din38(8'd0),
    .din39(8'd0),
    .din40(8'd0),
    .din41(8'd0),
    .din42(8'd0),
    .din43(8'd0),
    .din44(8'd0),
    .din45(8'd3),
    .din46(8'd0),
    .din47(8'd0),
    .din48(8'd255),
    .din49(8'd251),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd0),
    .din53(8'd253),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd1),
    .din58(8'd0),
    .din59(8'd0),
    .din60(8'd11),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1496_pp0_iter2_reg),
    .dout(tmp_64_fu_1172_p66)
);

computeS3_mux_646yd2_x_x_x_x_x_x_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS3_mux_646yd2_x_x_x_x_x_x_x_U171(
    .din0(8'd0),
    .din1(8'd4),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd255),
    .din5(8'd252),
    .din6(8'd0),
    .din7(8'd0),
    .din8(8'd2),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd0),
    .din13(8'd0),
    .din14(8'd253),
    .din15(8'd15),
    .din16(8'd254),
    .din17(8'd11),
    .din18(8'd16),
    .din19(8'd0),
    .din20(8'd255),
    .din21(8'd0),
    .din22(8'd18),
    .din23(8'd0),
    .din24(8'd0),
    .din25(8'd0),
    .din26(8'd0),
    .din27(8'd0),
    .din28(8'd0),
    .din29(8'd0),
    .din30(8'd4),
    .din31(8'd12),
    .din32(8'd0),
    .din33(8'd1),
    .din34(8'd0),
    .din35(8'd18),
    .din36(8'd0),
    .din37(8'd0),
    .din38(8'd1),
    .din39(8'd0),
    .din40(8'd0),
    .din41(8'd10),
    .din42(8'd0),
    .din43(8'd13),
    .din44(8'd249),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd0),
    .din48(8'd254),
    .din49(8'd3),
    .din50(8'd0),
    .din51(8'd0),
    .din52(8'd0),
    .din53(8'd0),
    .din54(8'd0),
    .din55(8'd0),
    .din56(8'd0),
    .din57(8'd2),
    .din58(8'd252),
    .din59(8'd0),
    .din60(8'd0),
    .din61(8'd0),
    .din62(8'd0),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1496_pp0_iter2_reg),
    .dout(tmp_65_fu_1311_p66)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten5_fu_327_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten5_reg_251 <= indvar_flatten_next5_fu_333_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten5_reg_251 <= 21'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten5_fu_327_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_262 <= indvar_flatten_next_fu_471_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_262 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_88_reg_1514_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_0_V_1_fu_170 <= macRegisters_0_V_fu_799_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_88_reg_1514_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_0_V_1_fu_170 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_88_reg_1514_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_1_V_1_fu_174 <= macRegisters_1_V_fu_822_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_88_reg_1514_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_1_V_1_fu_174 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_88_reg_1514_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_2_V_1_fu_178 <= macRegisters_2_V_fu_845_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_88_reg_1514_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_2_V_1_fu_178 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_88_reg_1514_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_3_V_1_fu_182 <= macRegisters_3_V_fu_868_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_88_reg_1514_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_3_V_1_fu_182 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten5_fu_327_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nm_reg_273 <= nm_mid2_fu_435_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nm_reg_273 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten5_fu_327_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sf_reg_284 <= sf_1_fu_459_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sf_reg_284 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten5_reg_1487 <= exitcond_flatten5_fu_327_p2;
        exitcond_flatten5_reg_1487_pp0_iter1_reg <= exitcond_flatten5_reg_1487;
        nm_t_mid2_reg_1496_pp0_iter1_reg <= nm_t_mid2_reg_1496;
        tmp_88_reg_1514_pp0_iter1_reg <= tmp_88_reg_1514;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten5_fu_327_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nm_t_mid2_reg_1496 <= nm_t_mid2_fu_427_p3;
        tmp_68_reg_1509 <= tmp_68_fu_447_p2;
        tmp_88_reg_1514 <= tmp_88_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        nm_t_mid2_reg_1496_pp0_iter2_reg <= nm_t_mid2_reg_1496_pp0_iter1_reg;
        tmp_88_reg_1514_pp0_iter2_reg <= tmp_88_reg_1514_pp0_iter1_reg;
        tmp_88_reg_1514_pp0_iter3_reg <= tmp_88_reg_1514_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_88_reg_1514_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_21_1_reg_1613 <= p_Val2_21_1_fu_1166_p2;
        p_Val2_21_2_reg_1618 <= p_Val2_21_2_fu_1305_p2;
        p_Val2_21_3_reg_1623 <= p_Val2_21_3_fu_1444_p2;
        p_Val2_5_reg_1608 <= p_Val2_5_fu_1027_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten5_reg_1487_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_255_1_reg_1573 <= tmp_255_1_fu_624_p2;
        tmp_255_2_reg_1588 <= tmp_255_2_fu_694_p2;
        tmp_255_3_reg_1603 <= tmp_255_3_fu_764_p2;
        tmp_51_reg_1548 <= {{p_Val2_s_fu_494_p2[13:7]}};
        tmp_54_reg_1563 <= {{p_Val2_1_fu_564_p2[13:7]}};
        tmp_57_reg_1578 <= {{p_Val2_2_fu_634_p2[13:7]}};
        tmp_60_reg_1593 <= {{p_Val2_3_fu_704_p2[13:7]}};
        tmp_86_reg_1558 <= tmp_86_fu_554_p2;
        tmp_913_reg_1553 <= p_Val2_s_fu_494_p2[32'd6];
        tmp_916_reg_1568 <= p_Val2_1_fu_564_p2[32'd6];
        tmp_919_reg_1583 <= p_Val2_2_fu_634_p2[32'd6];
        tmp_922_reg_1598 <= p_Val2_3_fu_704_p2[32'd6];
    end
end

always @ (*) begin
    if ((exitcond_flatten5_fu_327_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten5_reg_1487_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten5_reg_1487_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_88_reg_1514_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_88_reg_1514_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights18_m_weights_1_ce0 = 1'b1;
    end else begin
        weights18_m_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights18_m_weights_2_ce0 = 1'b1;
    end else begin
        weights18_m_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights18_m_weights_3_ce0 = 1'b1;
    end else begin
        weights18_m_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights18_m_weights_s_ce0 = 1'b1;
    end else begin
        weights18_m_weights_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten5_fu_327_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten5_fu_327_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_88_reg_1514_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten5_reg_1487_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_88_reg_1514_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten5_reg_1487_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_88_reg_1514_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten5_reg_1487_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((exitcond_flatten5_reg_1487_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((tmp_88_reg_1514_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign exitcond_flatten5_fu_327_p2 = ((indvar_flatten5_reg_251 == 21'd1048576) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_339_p2 = ((indvar_flatten_reg_262 == 16'd16384) ? 1'b1 : 1'b0);

assign indvar_flatten_next5_fu_333_p2 = (21'd1 + indvar_flatten5_reg_251);

assign indvar_flatten_next_fu_471_p3 = ((exitcond_flatten_fu_339_p2[0:0] === 1'b1) ? 16'd1 : indvar_flatten_op_fu_465_p2);

assign indvar_flatten_op_fu_465_p2 = (indvar_flatten_reg_262 + 16'd1);

assign macRegisters_0_V_fu_799_p2 = ($signed(tmp_52_fu_782_p1) + $signed(tmp1_fu_793_p2));

assign macRegisters_1_V_fu_822_p2 = ($signed(tmp_55_fu_805_p1) + $signed(tmp2_fu_816_p2));

assign macRegisters_2_V_fu_845_p2 = ($signed(tmp_58_fu_828_p1) + $signed(tmp3_fu_839_p2));

assign macRegisters_3_V_fu_868_p2 = ($signed(tmp_61_fu_851_p1) + $signed(tmp4_fu_862_p2));

assign nm_1_fu_387_p2 = (7'd1 + nm_mid_fu_345_p3);

assign nm_mid2_fu_435_p3 = ((tmp_86_mid_fu_381_p2[0:0] === 1'b1) ? nm_1_fu_387_p2 : nm_mid_fu_345_p3);

assign nm_mid_fu_345_p3 = ((exitcond_flatten_fu_339_p2[0:0] === 1'b1) ? 7'd0 : nm_reg_273);

assign nm_t_mid2_fu_427_p3 = ((tmp_86_mid_fu_381_p2[0:0] === 1'b1) ? tmp_911_fu_407_p1 : nm_t_mid_fu_361_p3);

assign nm_t_mid_fu_361_p3 = ((exitcond_flatten_fu_339_p2[0:0] === 1'b1) ? 6'd0 : tmp_fu_315_p1);

assign not_exitcond_flatten_fu_369_p2 = (exitcond_flatten_fu_339_p2 ^ 1'd1);

assign out_V_V_din = {{{{p_Val2_21_3_reg_1623}, {p_Val2_21_2_reg_1618}}, {p_Val2_21_1_reg_1613}}, {p_Val2_5_reg_1608}};

assign p_08_cast_cast_fu_486_p1 = $signed(in_V_V_dout);

assign p_Val2_1_fu_564_p0 = weights18_m_weights_2_q0;

assign p_Val2_1_fu_564_p1 = p_08_cast_cast_fu_486_p1;

assign p_Val2_1_fu_564_p2 = ($signed(p_Val2_1_fu_564_p0) * $signed(p_Val2_1_fu_564_p1));

assign p_Val2_21_1_fu_1166_p2 = (macRegisters_1_V_fu_822_p2 + tmp_63_fu_1033_p66);

assign p_Val2_21_2_fu_1305_p2 = (macRegisters_2_V_fu_845_p2 + tmp_64_fu_1172_p66);

assign p_Val2_21_3_fu_1444_p2 = (macRegisters_3_V_fu_868_p2 + tmp_65_fu_1311_p66);

assign p_Val2_2_fu_634_p0 = weights18_m_weights_1_q0;

assign p_Val2_2_fu_634_p1 = p_08_cast_cast_fu_486_p1;

assign p_Val2_2_fu_634_p2 = ($signed(p_Val2_2_fu_634_p0) * $signed(p_Val2_2_fu_634_p1));

assign p_Val2_3_fu_704_p0 = weights18_m_weights_s_q0;

assign p_Val2_3_fu_704_p1 = p_08_cast_cast_fu_486_p1;

assign p_Val2_3_fu_704_p2 = ($signed(p_Val2_3_fu_704_p0) * $signed(p_Val2_3_fu_704_p1));

assign p_Val2_5_fu_1027_p2 = (macRegisters_0_V_fu_799_p2 + tmp_62_fu_894_p66);

assign p_Val2_s_fu_494_p0 = weights18_m_weights_3_q0;

assign p_Val2_s_fu_494_p1 = p_08_cast_cast_fu_486_p1;

assign p_Val2_s_fu_494_p2 = ($signed(p_Val2_s_fu_494_p0) * $signed(p_Val2_s_fu_494_p1));

assign qb_assign_1_1_fu_808_p2 = (tmp_916_reg_1568 & tmp_255_1_reg_1573);

assign qb_assign_1_2_fu_831_p2 = (tmp_919_reg_1583 & tmp_255_2_reg_1588);

assign qb_assign_1_3_fu_854_p2 = (tmp_922_reg_1598 & tmp_255_3_reg_1603);

assign qb_assign_1_fu_785_p2 = (tmp_913_reg_1553 & tmp_86_reg_1558);

assign sf_1_fu_459_p2 = (sf_mid2_fu_399_p3 + 9'd1);

assign sf_cast1_fu_443_p1 = sf_mid2_fu_399_p3;

assign sf_mid2_fu_399_p3 = ((tmp_851_fu_393_p2[0:0] === 1'b1) ? 9'd0 : sf_reg_284);

assign start_out = real_start;

assign tmp1_fu_793_p2 = (tmp_87_fu_789_p1 + macRegisters_0_V_1_fu_170);

assign tmp2_fu_816_p2 = (tmp_256_1_fu_812_p1 + macRegisters_1_V_1_fu_174);

assign tmp3_fu_839_p2 = (tmp_256_2_fu_835_p1 + macRegisters_2_V_1_fu_178);

assign tmp4_fu_862_p2 = (tmp_256_3_fu_858_p1 + macRegisters_3_V_1_fu_182);

assign tmp_255_1_fu_624_p2 = ((tmp_76_fu_616_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_255_2_fu_694_p2 = ((tmp_80_fu_686_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_255_3_fu_764_p2 = ((tmp_84_fu_756_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_256_1_fu_812_p1 = qb_assign_1_1_fu_808_p2;

assign tmp_256_2_fu_835_p1 = qb_assign_1_2_fu_831_p2;

assign tmp_256_3_fu_858_p1 = qb_assign_1_3_fu_854_p2;

assign tmp_52_fu_782_p1 = $signed(tmp_51_reg_1548);

assign tmp_55_fu_805_p1 = $signed(tmp_54_reg_1563);

assign tmp_58_fu_828_p1 = $signed(tmp_57_reg_1578);

assign tmp_61_fu_851_p1 = $signed(tmp_60_reg_1593);

assign tmp_68_fu_447_p2 = (sf_cast1_fu_443_p1 + tmp_85_mid2_fu_419_p3);

assign tmp_70_fu_530_p2 = (tmp_914_fu_526_p1 | tmp_912_fu_500_p3);

assign tmp_71_fu_536_p4 = {{p_Val2_s_fu_494_p2[5:1]}};

assign tmp_72_fu_546_p3 = {{tmp_71_fu_536_p4}, {tmp_70_fu_530_p2}};

assign tmp_74_fu_600_p2 = (tmp_917_fu_596_p1 | tmp_915_fu_570_p3);

assign tmp_75_fu_606_p4 = {{p_Val2_1_fu_564_p2[5:1]}};

assign tmp_76_fu_616_p3 = {{tmp_75_fu_606_p4}, {tmp_74_fu_600_p2}};

assign tmp_78_fu_670_p2 = (tmp_920_fu_666_p1 | tmp_918_fu_640_p3);

assign tmp_79_fu_676_p4 = {{p_Val2_2_fu_634_p2[5:1]}};

assign tmp_80_fu_686_p3 = {{tmp_79_fu_676_p4}, {tmp_78_fu_670_p2}};

assign tmp_82_fu_740_p2 = (tmp_923_fu_736_p1 | tmp_921_fu_710_p3);

assign tmp_83_fu_746_p4 = {{p_Val2_3_fu_704_p2[5:1]}};

assign tmp_84_fu_756_p3 = {{tmp_83_fu_746_p4}, {tmp_82_fu_740_p2}};

assign tmp_851_fu_393_p2 = (tmp_86_mid_fu_381_p2 | exitcond_flatten_fu_339_p2);

assign tmp_85_fu_479_p1 = tmp_68_reg_1509;

assign tmp_85_mid1_fu_411_p3 = {{tmp_911_fu_407_p1}, {8'd0}};

assign tmp_85_mid2_fu_419_p3 = ((tmp_86_mid_fu_381_p2[0:0] === 1'b1) ? tmp_85_mid1_fu_411_p3 : tmp_85_mid_fu_353_p3);

assign tmp_85_mid_fu_353_p3 = ((exitcond_flatten_fu_339_p2[0:0] === 1'b1) ? 14'd0 : tmp_s_fu_319_p3);

assign tmp_86_fu_554_p2 = ((tmp_72_fu_546_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_86_mid_fu_381_p2 = (tmp_881_fu_375_p2 & not_exitcond_flatten_fu_369_p2);

assign tmp_87_fu_789_p1 = qb_assign_1_fu_785_p2;

assign tmp_881_fu_375_p2 = ((sf_reg_284 == 9'd256) ? 1'b1 : 1'b0);

assign tmp_88_fu_453_p2 = ((sf_mid2_fu_399_p3 == 9'd255) ? 1'b1 : 1'b0);

assign tmp_911_fu_407_p1 = nm_1_fu_387_p2[5:0];

assign tmp_912_fu_500_p3 = p_Val2_s_fu_494_p2[32'd13];

assign tmp_914_fu_526_p1 = p_Val2_s_fu_494_p2[0:0];

assign tmp_915_fu_570_p3 = p_Val2_1_fu_564_p2[32'd13];

assign tmp_917_fu_596_p1 = p_Val2_1_fu_564_p2[0:0];

assign tmp_918_fu_640_p3 = p_Val2_2_fu_634_p2[32'd13];

assign tmp_920_fu_666_p1 = p_Val2_2_fu_634_p2[0:0];

assign tmp_921_fu_710_p3 = p_Val2_3_fu_704_p2[32'd13];

assign tmp_923_fu_736_p1 = p_Val2_3_fu_704_p2[0:0];

assign tmp_fu_315_p1 = nm_reg_273[5:0];

assign tmp_s_fu_319_p3 = {{tmp_fu_315_p1}, {8'd0}};

assign weights18_m_weights_1_address0 = tmp_85_fu_479_p1;

assign weights18_m_weights_2_address0 = tmp_85_fu_479_p1;

assign weights18_m_weights_3_address0 = tmp_85_fu_479_p1;

assign weights18_m_weights_s_address0 = tmp_85_fu_479_p1;

endmodule //Conv1DMac_new421
