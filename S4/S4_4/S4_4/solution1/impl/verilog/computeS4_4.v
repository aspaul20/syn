// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="computeS4_4,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.662000,HLS_SYN_LAT=4873,HLS_SYN_TPT=4873,HLS_SYN_MEM=120,HLS_SYN_DSP=8192,HLS_SYN_FF=231437,HLS_SYN_LUT=140004,HLS_VERSION=2018_2}" *)

module computeS4_4 (
        input1_V_V_TDATA,
        s4_out_V_V_TDATA,
        ap_clk,
        ap_rst_n,
        input1_V_V_TVALID,
        input1_V_V_TREADY,
        s4_out_V_V_TVALID,
        s4_out_V_V_TREADY,
        ap_done,
        ap_start,
        ap_ready,
        ap_idle
);


input  [63:0] input1_V_V_TDATA;
output  [63:0] s4_out_V_V_TDATA;
input   ap_clk;
input   ap_rst_n;
input   input1_V_V_TVALID;
output   input1_V_V_TREADY;
output   s4_out_V_V_TVALID;
input   s4_out_V_V_TREADY;
output   ap_done;
input   ap_start;
output   ap_ready;
output   ap_idle;

 reg    ap_rst_n_inv;
wire    ResizeStream_1_U0_ap_start;
wire    ResizeStream_1_U0_ap_done;
wire    ResizeStream_1_U0_ap_continue;
wire    ResizeStream_1_U0_ap_idle;
wire    ResizeStream_1_U0_ap_ready;
wire    ResizeStream_1_U0_start_out;
wire    ResizeStream_1_U0_start_write;
wire    ResizeStream_1_U0_in_V_V_TREADY;
wire   [7:0] ResizeStream_1_U0_out_V_V_din;
wire    ResizeStream_1_U0_out_V_V_write;
wire    StreamingDataWidthCo_U0_ap_start;
wire    StreamingDataWidthCo_U0_ap_done;
wire    StreamingDataWidthCo_U0_ap_continue;
wire    StreamingDataWidthCo_U0_ap_idle;
wire    StreamingDataWidthCo_U0_ap_ready;
wire    StreamingDataWidthCo_U0_start_out;
wire    StreamingDataWidthCo_U0_start_write;
wire    StreamingDataWidthCo_U0_in_V_V_read;
wire   [63:0] StreamingDataWidthCo_U0_out_V_V_din;
wire    StreamingDataWidthCo_U0_out_V_V_write;
wire    FCMac_U0_ap_start;
wire    FCMac_U0_ap_done;
wire    FCMac_U0_ap_continue;
wire    FCMac_U0_ap_idle;
wire    FCMac_U0_ap_ready;
wire    FCMac_U0_start_out;
wire    FCMac_U0_start_write;
wire    FCMac_U0_in_V_V_read;
wire   [63:0] FCMac_U0_out_V_V_din;
wire    FCMac_U0_out_V_V_write;
wire    Relu1D_NP_U0_ap_start;
wire    Relu1D_NP_U0_ap_done;
wire    Relu1D_NP_U0_ap_continue;
wire    Relu1D_NP_U0_ap_idle;
wire    Relu1D_NP_U0_ap_ready;
wire    Relu1D_NP_U0_start_out;
wire    Relu1D_NP_U0_start_write;
wire    Relu1D_NP_U0_in_V_V_read;
wire   [63:0] Relu1D_NP_U0_out_V_V_din;
wire    Relu1D_NP_U0_out_V_V_write;
wire    StreamingDataWidthCo_1_U0_ap_start;
wire    StreamingDataWidthCo_1_U0_ap_done;
wire    StreamingDataWidthCo_1_U0_ap_continue;
wire    StreamingDataWidthCo_1_U0_ap_idle;
wire    StreamingDataWidthCo_1_U0_ap_ready;
wire    StreamingDataWidthCo_1_U0_start_out;
wire    StreamingDataWidthCo_1_U0_start_write;
wire    StreamingDataWidthCo_1_U0_in_V_V_read;
wire   [7:0] StreamingDataWidthCo_1_U0_out_V_V_din;
wire    StreamingDataWidthCo_1_U0_out_V_V_write;
wire    ResizeStream_U0_ap_start;
wire    ResizeStream_U0_ap_done;
wire    ResizeStream_U0_ap_continue;
wire    ResizeStream_U0_ap_idle;
wire    ResizeStream_U0_ap_ready;
wire    ResizeStream_U0_in_V_V_read;
wire   [63:0] ResizeStream_U0_out_V_V_TDATA;
wire    ResizeStream_U0_out_V_V_TVALID;
wire    ap_sync_continue;
wire    inn_V_V_full_n;
wire   [7:0] inn_V_V_dout;
wire    inn_V_V_empty_n;
wire    fc1_V_V_full_n;
wire   [63:0] fc1_V_V_dout;
wire    fc1_V_V_empty_n;
wire    fc2_V_V_full_n;
wire   [63:0] fc2_V_V_dout;
wire    fc2_V_V_empty_n;
wire    fc3_V_V_full_n;
wire   [63:0] fc3_V_V_dout;
wire    fc3_V_V_empty_n;
wire    outStr_V_V_full_n;
wire   [7:0] outStr_V_V_dout;
wire    outStr_V_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_StreamingDataWidthCo_U0_din;
wire    start_for_StreamingDataWidthCo_U0_full_n;
wire   [0:0] start_for_StreamingDataWidthCo_U0_dout;
wire    start_for_StreamingDataWidthCo_U0_empty_n;
wire   [0:0] start_for_FCMac_U0_din;
wire    start_for_FCMac_U0_full_n;
wire   [0:0] start_for_FCMac_U0_dout;
wire    start_for_FCMac_U0_empty_n;
wire   [0:0] start_for_Relu1D_NP_U0_din;
wire    start_for_Relu1D_NP_U0_full_n;
wire   [0:0] start_for_Relu1D_NP_U0_dout;
wire    start_for_Relu1D_NP_U0_empty_n;
wire   [0:0] start_for_StreamingDataWidthCo_1_U0_din;
wire    start_for_StreamingDataWidthCo_1_U0_full_n;
wire   [0:0] start_for_StreamingDataWidthCo_1_U0_dout;
wire    start_for_StreamingDataWidthCo_1_U0_empty_n;
wire   [0:0] start_for_ResizeStream_U0_din;
wire    start_for_ResizeStream_U0_full_n;
wire   [0:0] start_for_ResizeStream_U0_dout;
wire    start_for_ResizeStream_U0_empty_n;
wire    ResizeStream_U0_start_full_n;
wire    ResizeStream_U0_start_write;

ResizeStream_1 ResizeStream_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ResizeStream_1_U0_ap_start),
    .start_full_n(start_for_StreamingDataWidthCo_U0_full_n),
    .ap_done(ResizeStream_1_U0_ap_done),
    .ap_continue(ResizeStream_1_U0_ap_continue),
    .ap_idle(ResizeStream_1_U0_ap_idle),
    .ap_ready(ResizeStream_1_U0_ap_ready),
    .start_out(ResizeStream_1_U0_start_out),
    .start_write(ResizeStream_1_U0_start_write),
    .in_V_V_TDATA(input1_V_V_TDATA),
    .in_V_V_TVALID(input1_V_V_TVALID),
    .in_V_V_TREADY(ResizeStream_1_U0_in_V_V_TREADY),
    .out_V_V_din(ResizeStream_1_U0_out_V_V_din),
    .out_V_V_full_n(inn_V_V_full_n),
    .out_V_V_write(ResizeStream_1_U0_out_V_V_write)
);

StreamingDataWidthCo StreamingDataWidthCo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(StreamingDataWidthCo_U0_ap_start),
    .start_full_n(start_for_FCMac_U0_full_n),
    .ap_done(StreamingDataWidthCo_U0_ap_done),
    .ap_continue(StreamingDataWidthCo_U0_ap_continue),
    .ap_idle(StreamingDataWidthCo_U0_ap_idle),
    .ap_ready(StreamingDataWidthCo_U0_ap_ready),
    .start_out(StreamingDataWidthCo_U0_start_out),
    .start_write(StreamingDataWidthCo_U0_start_write),
    .in_V_V_dout(inn_V_V_dout),
    .in_V_V_empty_n(inn_V_V_empty_n),
    .in_V_V_read(StreamingDataWidthCo_U0_in_V_V_read),
    .out_V_V_din(StreamingDataWidthCo_U0_out_V_V_din),
    .out_V_V_full_n(fc1_V_V_full_n),
    .out_V_V_write(StreamingDataWidthCo_U0_out_V_V_write)
);

FCMac FCMac_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(FCMac_U0_ap_start),
    .start_full_n(start_for_Relu1D_NP_U0_full_n),
    .ap_done(FCMac_U0_ap_done),
    .ap_continue(FCMac_U0_ap_continue),
    .ap_idle(FCMac_U0_ap_idle),
    .ap_ready(FCMac_U0_ap_ready),
    .start_out(FCMac_U0_start_out),
    .start_write(FCMac_U0_start_write),
    .in_V_V_dout(fc1_V_V_dout),
    .in_V_V_empty_n(fc1_V_V_empty_n),
    .in_V_V_read(FCMac_U0_in_V_V_read),
    .out_V_V_din(FCMac_U0_out_V_V_din),
    .out_V_V_full_n(fc2_V_V_full_n),
    .out_V_V_write(FCMac_U0_out_V_V_write)
);

Relu1D_NP Relu1D_NP_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Relu1D_NP_U0_ap_start),
    .start_full_n(start_for_StreamingDataWidthCo_1_U0_full_n),
    .ap_done(Relu1D_NP_U0_ap_done),
    .ap_continue(Relu1D_NP_U0_ap_continue),
    .ap_idle(Relu1D_NP_U0_ap_idle),
    .ap_ready(Relu1D_NP_U0_ap_ready),
    .start_out(Relu1D_NP_U0_start_out),
    .start_write(Relu1D_NP_U0_start_write),
    .in_V_V_dout(fc2_V_V_dout),
    .in_V_V_empty_n(fc2_V_V_empty_n),
    .in_V_V_read(Relu1D_NP_U0_in_V_V_read),
    .out_V_V_din(Relu1D_NP_U0_out_V_V_din),
    .out_V_V_full_n(fc3_V_V_full_n),
    .out_V_V_write(Relu1D_NP_U0_out_V_V_write)
);

StreamingDataWidthCo_1 StreamingDataWidthCo_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(StreamingDataWidthCo_1_U0_ap_start),
    .start_full_n(start_for_ResizeStream_U0_full_n),
    .ap_done(StreamingDataWidthCo_1_U0_ap_done),
    .ap_continue(StreamingDataWidthCo_1_U0_ap_continue),
    .ap_idle(StreamingDataWidthCo_1_U0_ap_idle),
    .ap_ready(StreamingDataWidthCo_1_U0_ap_ready),
    .start_out(StreamingDataWidthCo_1_U0_start_out),
    .start_write(StreamingDataWidthCo_1_U0_start_write),
    .in_V_V_dout(fc3_V_V_dout),
    .in_V_V_empty_n(fc3_V_V_empty_n),
    .in_V_V_read(StreamingDataWidthCo_1_U0_in_V_V_read),
    .out_V_V_din(StreamingDataWidthCo_1_U0_out_V_V_din),
    .out_V_V_full_n(outStr_V_V_full_n),
    .out_V_V_write(StreamingDataWidthCo_1_U0_out_V_V_write)
);

ResizeStream ResizeStream_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ResizeStream_U0_ap_start),
    .ap_done(ResizeStream_U0_ap_done),
    .ap_continue(ResizeStream_U0_ap_continue),
    .ap_idle(ResizeStream_U0_ap_idle),
    .ap_ready(ResizeStream_U0_ap_ready),
    .in_V_V_dout(outStr_V_V_dout),
    .in_V_V_empty_n(outStr_V_V_empty_n),
    .in_V_V_read(ResizeStream_U0_in_V_V_read),
    .out_V_V_TDATA(ResizeStream_U0_out_V_V_TDATA),
    .out_V_V_TVALID(ResizeStream_U0_out_V_V_TVALID),
    .out_V_V_TREADY(s4_out_V_V_TREADY)
);

fifo_w8_d2_A inn_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ResizeStream_1_U0_out_V_V_din),
    .if_full_n(inn_V_V_full_n),
    .if_write(ResizeStream_1_U0_out_V_V_write),
    .if_dout(inn_V_V_dout),
    .if_empty_n(inn_V_V_empty_n),
    .if_read(StreamingDataWidthCo_U0_in_V_V_read)
);

fifo_w64_d2_A fc1_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(StreamingDataWidthCo_U0_out_V_V_din),
    .if_full_n(fc1_V_V_full_n),
    .if_write(StreamingDataWidthCo_U0_out_V_V_write),
    .if_dout(fc1_V_V_dout),
    .if_empty_n(fc1_V_V_empty_n),
    .if_read(FCMac_U0_in_V_V_read)
);

fifo_w64_d2_A fc2_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(FCMac_U0_out_V_V_din),
    .if_full_n(fc2_V_V_full_n),
    .if_write(FCMac_U0_out_V_V_write),
    .if_dout(fc2_V_V_dout),
    .if_empty_n(fc2_V_V_empty_n),
    .if_read(Relu1D_NP_U0_in_V_V_read)
);

fifo_w64_d2_A fc3_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Relu1D_NP_U0_out_V_V_din),
    .if_full_n(fc3_V_V_full_n),
    .if_write(Relu1D_NP_U0_out_V_V_write),
    .if_dout(fc3_V_V_dout),
    .if_empty_n(fc3_V_V_empty_n),
    .if_read(StreamingDataWidthCo_1_U0_in_V_V_read)
);

fifo_w8_d2_A outStr_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(StreamingDataWidthCo_1_U0_out_V_V_din),
    .if_full_n(outStr_V_V_full_n),
    .if_write(StreamingDataWidthCo_1_U0_out_V_V_write),
    .if_dout(outStr_V_V_dout),
    .if_empty_n(outStr_V_V_empty_n),
    .if_read(ResizeStream_U0_in_V_V_read)
);

start_for_Streamicpw start_for_Streamicpw_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_StreamingDataWidthCo_U0_din),
    .if_full_n(start_for_StreamingDataWidthCo_U0_full_n),
    .if_write(ResizeStream_1_U0_start_write),
    .if_dout(start_for_StreamingDataWidthCo_U0_dout),
    .if_empty_n(start_for_StreamingDataWidthCo_U0_empty_n),
    .if_read(StreamingDataWidthCo_U0_ap_ready)
);

start_for_FCMac_U0 start_for_FCMac_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_FCMac_U0_din),
    .if_full_n(start_for_FCMac_U0_full_n),
    .if_write(StreamingDataWidthCo_U0_start_write),
    .if_dout(start_for_FCMac_U0_dout),
    .if_empty_n(start_for_FCMac_U0_empty_n),
    .if_read(FCMac_U0_ap_ready)
);

start_for_Relu1D_cqw start_for_Relu1D_cqw_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Relu1D_NP_U0_din),
    .if_full_n(start_for_Relu1D_NP_U0_full_n),
    .if_write(FCMac_U0_start_write),
    .if_dout(start_for_Relu1D_NP_U0_dout),
    .if_empty_n(start_for_Relu1D_NP_U0_empty_n),
    .if_read(Relu1D_NP_U0_ap_ready)
);

start_for_Streamicrw start_for_Streamicrw_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_StreamingDataWidthCo_1_U0_din),
    .if_full_n(start_for_StreamingDataWidthCo_1_U0_full_n),
    .if_write(Relu1D_NP_U0_start_write),
    .if_dout(start_for_StreamingDataWidthCo_1_U0_dout),
    .if_empty_n(start_for_StreamingDataWidthCo_1_U0_empty_n),
    .if_read(StreamingDataWidthCo_1_U0_ap_ready)
);

start_for_ResizeScsw start_for_ResizeScsw_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_ResizeStream_U0_din),
    .if_full_n(start_for_ResizeStream_U0_full_n),
    .if_write(StreamingDataWidthCo_1_U0_start_write),
    .if_dout(start_for_ResizeStream_U0_dout),
    .if_empty_n(start_for_ResizeStream_U0_empty_n),
    .if_read(ResizeStream_U0_ap_ready)
);

assign FCMac_U0_ap_continue = 1'b1;

assign FCMac_U0_ap_start = start_for_FCMac_U0_empty_n;

assign Relu1D_NP_U0_ap_continue = 1'b1;

assign Relu1D_NP_U0_ap_start = start_for_Relu1D_NP_U0_empty_n;

assign ResizeStream_1_U0_ap_continue = 1'b1;

assign ResizeStream_1_U0_ap_start = ap_start;

assign ResizeStream_U0_ap_continue = 1'b1;

assign ResizeStream_U0_ap_start = start_for_ResizeStream_U0_empty_n;

assign ResizeStream_U0_start_full_n = 1'b1;

assign ResizeStream_U0_start_write = 1'b0;

assign StreamingDataWidthCo_1_U0_ap_continue = 1'b1;

assign StreamingDataWidthCo_1_U0_ap_start = start_for_StreamingDataWidthCo_1_U0_empty_n;

assign StreamingDataWidthCo_U0_ap_continue = 1'b1;

assign StreamingDataWidthCo_U0_ap_start = start_for_StreamingDataWidthCo_U0_empty_n;

assign ap_done = ResizeStream_U0_ap_done;

assign ap_idle = (StreamingDataWidthCo_U0_ap_idle & StreamingDataWidthCo_1_U0_ap_idle & ResizeStream_U0_ap_idle & ResizeStream_1_U0_ap_idle & Relu1D_NP_U0_ap_idle & FCMac_U0_ap_idle);

assign ap_ready = ResizeStream_1_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b1;

assign ap_sync_done = ResizeStream_U0_ap_done;

assign ap_sync_ready = ResizeStream_1_U0_ap_ready;

assign input1_V_V_TREADY = ResizeStream_1_U0_in_V_V_TREADY;

assign s4_out_V_V_TDATA = ResizeStream_U0_out_V_V_TDATA;

assign s4_out_V_V_TVALID = ResizeStream_U0_out_V_V_TVALID;

assign start_for_FCMac_U0_din = 1'b1;

assign start_for_Relu1D_NP_U0_din = 1'b1;

assign start_for_ResizeStream_U0_din = 1'b1;

assign start_for_StreamingDataWidthCo_1_U0_din = 1'b1;

assign start_for_StreamingDataWidthCo_U0_din = 1'b1;

endmodule //computeS4_4
