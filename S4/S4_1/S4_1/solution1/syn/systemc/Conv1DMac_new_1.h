// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv1DMac_new_1_HH_
#define _Conv1DMac_new_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "computeS4_1_mux_6g8j_x.h"
#include "Conv1DMac_new_1_wibs.h"
#include "Conv1DMac_new_1_wjbC.h"
#include "Conv1DMac_new_1_wkbM.h"
#include "Conv1DMac_new_1_wlbW.h"

namespace ap_rtl {

struct Conv1DMac_new_1 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_signal< sc_lv<8> > ap_var_for_const0;
    sc_signal< sc_lv<8> > ap_var_for_const1;
    sc_signal< sc_lv<8> > ap_var_for_const2;
    sc_signal< sc_lv<8> > ap_var_for_const3;
    sc_signal< sc_lv<8> > ap_var_for_const4;
    sc_signal< sc_lv<8> > ap_var_for_const5;
    sc_signal< sc_lv<8> > ap_var_for_const6;
    sc_signal< sc_lv<8> > ap_var_for_const7;
    sc_signal< sc_lv<8> > ap_var_for_const8;
    sc_signal< sc_lv<8> > ap_var_for_const9;
    sc_signal< sc_lv<8> > ap_var_for_const10;
    sc_signal< sc_lv<8> > ap_var_for_const11;
    sc_signal< sc_lv<8> > ap_var_for_const12;
    sc_signal< sc_lv<8> > ap_var_for_const13;
    sc_signal< sc_lv<8> > ap_var_for_const14;
    sc_signal< sc_lv<8> > ap_var_for_const15;
    sc_signal< sc_lv<8> > ap_var_for_const16;
    sc_signal< sc_lv<8> > ap_var_for_const17;
    sc_signal< sc_lv<8> > ap_var_for_const18;
    sc_signal< sc_lv<8> > ap_var_for_const19;
    sc_signal< sc_lv<8> > ap_var_for_const20;
    sc_signal< sc_lv<8> > ap_var_for_const21;
    sc_signal< sc_lv<8> > ap_var_for_const22;
    sc_signal< sc_lv<8> > ap_var_for_const23;
    sc_signal< sc_lv<8> > ap_var_for_const24;
    sc_signal< sc_lv<8> > ap_var_for_const25;
    sc_signal< sc_lv<8> > ap_var_for_const26;
    sc_signal< sc_lv<8> > ap_var_for_const27;
    sc_signal< sc_lv<8> > ap_var_for_const28;
    sc_signal< sc_lv<8> > ap_var_for_const29;
    sc_signal< sc_lv<8> > ap_var_for_const30;
    sc_signal< sc_lv<8> > ap_var_for_const31;
    sc_signal< sc_lv<8> > ap_var_for_const32;
    sc_signal< sc_lv<8> > ap_var_for_const33;
    sc_signal< sc_lv<8> > ap_var_for_const34;
    sc_signal< sc_lv<8> > ap_var_for_const35;
    sc_signal< sc_lv<8> > ap_var_for_const36;
    sc_signal< sc_lv<8> > ap_var_for_const37;
    sc_signal< sc_lv<8> > ap_var_for_const38;
    sc_signal< sc_lv<8> > ap_var_for_const39;
    sc_signal< sc_lv<8> > ap_var_for_const40;
    sc_signal< sc_lv<8> > ap_var_for_const41;
    sc_signal< sc_lv<8> > ap_var_for_const42;
    sc_signal< sc_lv<8> > ap_var_for_const43;
    sc_signal< sc_lv<8> > ap_var_for_const44;
    sc_signal< sc_lv<8> > ap_var_for_const45;
    sc_signal< sc_lv<8> > ap_var_for_const46;
    sc_signal< sc_lv<8> > ap_var_for_const47;
    sc_signal< sc_lv<8> > ap_var_for_const48;
    sc_signal< sc_lv<8> > ap_var_for_const49;


    // Module declarations
    Conv1DMac_new_1(sc_module_name name);
    SC_HAS_PROCESS(Conv1DMac_new_1);

    ~Conv1DMac_new_1();

    sc_trace_file* mVcdFile;

    Conv1DMac_new_1_wibs* weights21_m_weights_3_U;
    Conv1DMac_new_1_wjbC* weights21_m_weights_2_U;
    Conv1DMac_new_1_wkbM* weights21_m_weights_1_U;
    Conv1DMac_new_1_wlbW* weights21_m_weights_s_U;
    computeS4_1_mux_6g8j_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS4_1_mux_6g8j_x_U27;
    computeS4_1_mux_6g8j_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS4_1_mux_6g8j_x_U28;
    computeS4_1_mux_6g8j_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS4_1_mux_6g8j_x_U29;
    computeS4_1_mux_6g8j_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8>* computeS4_1_mux_6g8j_x_U30;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<14> > weights21_m_weights_3_address0;
    sc_signal< sc_logic > weights21_m_weights_3_ce0;
    sc_signal< sc_lv<6> > weights21_m_weights_3_q0;
    sc_signal< sc_lv<14> > weights21_m_weights_2_address0;
    sc_signal< sc_logic > weights21_m_weights_2_ce0;
    sc_signal< sc_lv<6> > weights21_m_weights_2_q0;
    sc_signal< sc_lv<14> > weights21_m_weights_1_address0;
    sc_signal< sc_logic > weights21_m_weights_1_ce0;
    sc_signal< sc_lv<7> > weights21_m_weights_1_q0;
    sc_signal< sc_lv<14> > weights21_m_weights_s_address0;
    sc_signal< sc_logic > weights21_m_weights_s_ce0;
    sc_signal< sc_lv<6> > weights21_m_weights_s_q0;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten1_reg_1547;
    sc_signal< sc_lv<1> > exitcond_flatten1_reg_1547_pp0_iter1_reg;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > tmp_6_reg_1574;
    sc_signal< sc_lv<1> > tmp_6_reg_1574_pp0_iter3_reg;
    sc_signal< sc_lv<24> > indvar_flatten1_reg_311;
    sc_signal< sc_lv<16> > indvar_flatten_reg_322;
    sc_signal< sc_lv<7> > nm_reg_333;
    sc_signal< sc_lv<9> > sf_reg_344;
    sc_signal< sc_lv<1> > exitcond_flatten1_fu_387_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<24> > indvar_flatten_next1_fu_393_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<6> > nm_t_mid2_fu_487_p3;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1556;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1556_pp0_iter1_reg;
    sc_signal< sc_lv<6> > nm_t_mid2_reg_1556_pp0_iter2_reg;
    sc_signal< sc_lv<7> > nm_mid2_fu_495_p3;
    sc_signal< sc_lv<14> > tmp_4_fu_507_p2;
    sc_signal< sc_lv<14> > tmp_4_reg_1569;
    sc_signal< sc_lv<1> > tmp_6_fu_513_p2;
    sc_signal< sc_lv<1> > tmp_6_reg_1574_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_6_reg_1574_pp0_iter2_reg;
    sc_signal< sc_lv<9> > sf_1_fu_519_p2;
    sc_signal< sc_lv<16> > indvar_flatten_next_fu_531_p3;
    sc_signal< sc_lv<7> > tmp_8_reg_1608;
    sc_signal< sc_lv<1> > tmp_23_reg_1613;
    sc_signal< sc_lv<1> > tmp_13_fu_618_p2;
    sc_signal< sc_lv<1> > tmp_13_reg_1618;
    sc_signal< sc_lv<7> > tmp_15_reg_1623;
    sc_signal< sc_lv<1> > tmp_38_reg_1628;
    sc_signal< sc_lv<1> > tmp_40_1_fu_688_p2;
    sc_signal< sc_lv<1> > tmp_40_1_reg_1633;
    sc_signal< sc_lv<8> > tmp_21_reg_1638;
    sc_signal< sc_lv<1> > tmp_41_reg_1643;
    sc_signal< sc_lv<1> > tmp_40_2_fu_758_p2;
    sc_signal< sc_lv<1> > tmp_40_2_reg_1648;
    sc_signal< sc_lv<7> > tmp_26_reg_1653;
    sc_signal< sc_lv<1> > tmp_44_reg_1658;
    sc_signal< sc_lv<1> > tmp_40_3_fu_828_p2;
    sc_signal< sc_lv<1> > tmp_40_3_reg_1663;
    sc_signal< sc_lv<8> > p_Val2_2_fu_1087_p2;
    sc_signal< sc_lv<8> > p_Val2_2_reg_1668;
    sc_signal< sc_lv<8> > p_Val2_2_1_fu_1226_p2;
    sc_signal< sc_lv<8> > p_Val2_2_1_reg_1673;
    sc_signal< sc_lv<8> > p_Val2_2_2_fu_1365_p2;
    sc_signal< sc_lv<8> > p_Val2_2_2_reg_1678;
    sc_signal< sc_lv<8> > p_Val2_2_3_fu_1504_p2;
    sc_signal< sc_lv<8> > p_Val2_2_3_reg_1683;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<64> > tmp_5_fu_539_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > macRegisters_0_V_1_fu_230;
    sc_signal< sc_lv<8> > macRegisters_0_V_fu_863_p2;
    sc_signal< sc_lv<8> > macRegisters_1_V_1_fu_234;
    sc_signal< sc_lv<8> > macRegisters_1_V_fu_886_p2;
    sc_signal< sc_lv<8> > macRegisters_2_V_1_fu_238;
    sc_signal< sc_lv<8> > macRegisters_2_V_fu_906_p2;
    sc_signal< sc_lv<8> > macRegisters_3_V_1_fu_242;
    sc_signal< sc_lv<8> > macRegisters_3_V_fu_928_p2;
    sc_signal< sc_lv<6> > tmp_fu_375_p1;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_399_p2;
    sc_signal< sc_lv<14> > tmp_2_fu_379_p3;
    sc_signal< sc_lv<1> > tmp_3_fu_435_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_429_p2;
    sc_signal< sc_lv<7> > nm_mid_fu_405_p3;
    sc_signal< sc_lv<1> > tmp_3_mid_fu_441_p2;
    sc_signal< sc_lv<1> > tmp_1_fu_453_p2;
    sc_signal< sc_lv<7> > nm_1_fu_447_p2;
    sc_signal< sc_lv<6> > tmp_10_fu_467_p1;
    sc_signal< sc_lv<14> > tmp_2_mid1_fu_471_p3;
    sc_signal< sc_lv<14> > tmp_2_mid_fu_413_p3;
    sc_signal< sc_lv<6> > nm_t_mid_fu_421_p3;
    sc_signal< sc_lv<9> > sf_mid2_fu_459_p3;
    sc_signal< sc_lv<14> > sf_cast_fu_503_p1;
    sc_signal< sc_lv<14> > tmp_2_mid2_fu_479_p3;
    sc_signal< sc_lv<16> > indvar_flatten_op_fu_525_p2;
    sc_signal< sc_lv<8> > p_08_cast_fu_546_p0;
    sc_signal< sc_lv<8> > p_08_cast_cast_fu_550_p0;
    sc_signal< sc_lv<6> > p_Val2_s_fu_558_p0;
    sc_signal< sc_lv<8> > p_Val2_s_fu_558_p1;
    sc_signal< sc_lv<14> > p_08_cast_cast_fu_550_p1;
    sc_signal< sc_lv<14> > p_Val2_s_fu_558_p2;
    sc_signal< sc_lv<1> > tmp_29_fu_590_p1;
    sc_signal< sc_lv<1> > tmp_18_fu_564_p3;
    sc_signal< sc_lv<5> > tmp_11_fu_600_p4;
    sc_signal< sc_lv<1> > tmp_7_fu_594_p2;
    sc_signal< sc_lv<6> > tmp_12_fu_610_p3;
    sc_signal< sc_lv<6> > p_Val2_s_56_fu_628_p0;
    sc_signal< sc_lv<8> > p_Val2_s_56_fu_628_p1;
    sc_signal< sc_lv<14> > p_Val2_s_56_fu_628_p2;
    sc_signal< sc_lv<1> > tmp_39_fu_660_p1;
    sc_signal< sc_lv<1> > tmp_37_fu_634_p3;
    sc_signal< sc_lv<5> > tmp_19_fu_670_p4;
    sc_signal< sc_lv<1> > tmp_17_fu_664_p2;
    sc_signal< sc_lv<6> > tmp_20_fu_680_p3;
    sc_signal< sc_lv<7> > p_Val2_5_fu_698_p0;
    sc_signal< sc_lv<8> > p_Val2_5_fu_698_p1;
    sc_signal< sc_lv<15> > p_Val2_5_fu_698_p2;
    sc_signal< sc_lv<1> > tmp_42_fu_730_p1;
    sc_signal< sc_lv<1> > tmp_40_fu_704_p3;
    sc_signal< sc_lv<5> > tmp_24_fu_740_p4;
    sc_signal< sc_lv<1> > tmp_22_fu_734_p2;
    sc_signal< sc_lv<6> > tmp_25_fu_750_p3;
    sc_signal< sc_lv<6> > p_Val2_3_fu_768_p0;
    sc_signal< sc_lv<8> > p_Val2_3_fu_768_p1;
    sc_signal< sc_lv<14> > p_Val2_3_fu_768_p2;
    sc_signal< sc_lv<1> > tmp_45_fu_800_p1;
    sc_signal< sc_lv<1> > tmp_43_fu_774_p3;
    sc_signal< sc_lv<5> > tmp_30_fu_810_p4;
    sc_signal< sc_lv<1> > tmp_28_fu_804_p2;
    sc_signal< sc_lv<6> > tmp_31_fu_820_p3;
    sc_signal< sc_lv<1> > qb_assign_2_fu_849_p2;
    sc_signal< sc_lv<8> > tmp_14_fu_853_p1;
    sc_signal< sc_lv<8> > tmp_9_fu_846_p1;
    sc_signal< sc_lv<8> > tmp1_fu_857_p2;
    sc_signal< sc_lv<1> > qb_assign_2_1_fu_872_p2;
    sc_signal< sc_lv<8> > tmp_41_1_fu_876_p1;
    sc_signal< sc_lv<8> > tmp_16_fu_869_p1;
    sc_signal< sc_lv<8> > tmp2_fu_880_p2;
    sc_signal< sc_lv<1> > qb_assign_2_2_fu_892_p2;
    sc_signal< sc_lv<8> > tmp_41_2_fu_896_p1;
    sc_signal< sc_lv<8> > tmp3_fu_900_p2;
    sc_signal< sc_lv<1> > qb_assign_2_3_fu_914_p2;
    sc_signal< sc_lv<8> > tmp_41_3_fu_918_p1;
    sc_signal< sc_lv<8> > tmp_27_fu_911_p1;
    sc_signal< sc_lv<8> > tmp4_fu_922_p2;
    sc_signal< sc_lv<8> > tmp_32_fu_954_p66;
    sc_signal< sc_lv<8> > tmp_33_fu_1093_p66;
    sc_signal< sc_lv<8> > tmp_34_fu_1232_p66;
    sc_signal< sc_lv<8> > tmp_35_fu_1371_p66;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<24> ap_const_lv24_800000;
    static const sc_lv<24> ap_const_lv24_1;
    static const sc_lv<16> ap_const_lv16_4000;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<9> ap_const_lv9_FF;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_8;
    static const sc_lv<8> ap_const_lv8_F8;
    static const sc_lv<8> ap_const_lv8_FB;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<8> ap_const_lv8_F4;
    static const sc_lv<8> ap_const_lv8_6;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_F2;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<8> ap_const_lv8_A;
    static const sc_lv<8> ap_const_lv8_F9;
    static const sc_lv<8> ap_const_lv8_9;
    static const sc_lv<8> ap_const_lv8_11;
    static const sc_lv<8> ap_const_lv8_7;
    static const sc_lv<8> ap_const_lv8_F5;
    static const sc_lv<8> ap_const_lv8_E9;
    static const sc_lv<8> ap_const_lv8_EE;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_12;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_FA;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<8> ap_const_lv8_E0;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_ED;
    static const sc_lv<8> ap_const_lv8_F3;
    static const sc_lv<8> ap_const_lv8_DD;
    static const sc_lv<8> ap_const_lv8_CE;
    static const sc_lv<8> ap_const_lv8_F0;
    static const sc_lv<8> ap_const_lv8_E;
    static const sc_lv<8> ap_const_lv8_E8;
    static const sc_lv<8> ap_const_lv8_B;
    static const sc_lv<8> ap_const_lv8_EC;
    static const sc_lv<8> ap_const_lv8_E4;
    static const sc_lv<8> ap_const_lv8_16;
    static const sc_lv<8> ap_const_lv8_E7;
    static const sc_lv<8> ap_const_lv8_DC;
    static const sc_lv<8> ap_const_lv8_F6;
    static const sc_lv<8> ap_const_lv8_13;
    static const sc_lv<8> ap_const_lv8_E1;
    static const sc_lv<8> ap_const_lv8_F;
    static const sc_lv<8> ap_const_lv8_F1;
    static const sc_lv<8> ap_const_lv8_CA;
    static const sc_lv<8> ap_const_lv8_EB;
    static const sc_lv<8> ap_const_lv8_18;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const11();
    void thread_ap_var_for_const12();
    void thread_ap_var_for_const13();
    void thread_ap_var_for_const14();
    void thread_ap_var_for_const15();
    void thread_ap_var_for_const16();
    void thread_ap_var_for_const17();
    void thread_ap_var_for_const18();
    void thread_ap_var_for_const19();
    void thread_ap_var_for_const20();
    void thread_ap_var_for_const21();
    void thread_ap_var_for_const22();
    void thread_ap_var_for_const23();
    void thread_ap_var_for_const24();
    void thread_ap_var_for_const25();
    void thread_ap_var_for_const26();
    void thread_ap_var_for_const27();
    void thread_ap_var_for_const28();
    void thread_ap_var_for_const29();
    void thread_ap_var_for_const30();
    void thread_ap_var_for_const31();
    void thread_ap_var_for_const32();
    void thread_ap_var_for_const33();
    void thread_ap_var_for_const34();
    void thread_ap_var_for_const35();
    void thread_ap_var_for_const36();
    void thread_ap_var_for_const37();
    void thread_ap_var_for_const38();
    void thread_ap_var_for_const39();
    void thread_ap_var_for_const40();
    void thread_ap_var_for_const41();
    void thread_ap_var_for_const42();
    void thread_ap_var_for_const43();
    void thread_ap_var_for_const44();
    void thread_ap_var_for_const45();
    void thread_ap_var_for_const46();
    void thread_ap_var_for_const47();
    void thread_ap_var_for_const48();
    void thread_ap_var_for_const49();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten1_fu_387_p2();
    void thread_exitcond_flatten_fu_399_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_indvar_flatten_next1_fu_393_p2();
    void thread_indvar_flatten_next_fu_531_p3();
    void thread_indvar_flatten_op_fu_525_p2();
    void thread_internal_ap_ready();
    void thread_macRegisters_0_V_fu_863_p2();
    void thread_macRegisters_1_V_fu_886_p2();
    void thread_macRegisters_2_V_fu_906_p2();
    void thread_macRegisters_3_V_fu_928_p2();
    void thread_nm_1_fu_447_p2();
    void thread_nm_mid2_fu_495_p3();
    void thread_nm_mid_fu_405_p3();
    void thread_nm_t_mid2_fu_487_p3();
    void thread_nm_t_mid_fu_421_p3();
    void thread_not_exitcond_flatten_fu_429_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_08_cast_cast_fu_550_p0();
    void thread_p_08_cast_cast_fu_550_p1();
    void thread_p_08_cast_fu_546_p0();
    void thread_p_Val2_2_1_fu_1226_p2();
    void thread_p_Val2_2_2_fu_1365_p2();
    void thread_p_Val2_2_3_fu_1504_p2();
    void thread_p_Val2_2_fu_1087_p2();
    void thread_p_Val2_3_fu_768_p0();
    void thread_p_Val2_3_fu_768_p1();
    void thread_p_Val2_3_fu_768_p2();
    void thread_p_Val2_5_fu_698_p0();
    void thread_p_Val2_5_fu_698_p1();
    void thread_p_Val2_5_fu_698_p2();
    void thread_p_Val2_s_56_fu_628_p0();
    void thread_p_Val2_s_56_fu_628_p1();
    void thread_p_Val2_s_56_fu_628_p2();
    void thread_p_Val2_s_fu_558_p0();
    void thread_p_Val2_s_fu_558_p1();
    void thread_p_Val2_s_fu_558_p2();
    void thread_qb_assign_2_1_fu_872_p2();
    void thread_qb_assign_2_2_fu_892_p2();
    void thread_qb_assign_2_3_fu_914_p2();
    void thread_qb_assign_2_fu_849_p2();
    void thread_real_start();
    void thread_sf_1_fu_519_p2();
    void thread_sf_cast_fu_503_p1();
    void thread_sf_mid2_fu_459_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_fu_857_p2();
    void thread_tmp2_fu_880_p2();
    void thread_tmp3_fu_900_p2();
    void thread_tmp4_fu_922_p2();
    void thread_tmp_10_fu_467_p1();
    void thread_tmp_11_fu_600_p4();
    void thread_tmp_12_fu_610_p3();
    void thread_tmp_13_fu_618_p2();
    void thread_tmp_14_fu_853_p1();
    void thread_tmp_16_fu_869_p1();
    void thread_tmp_17_fu_664_p2();
    void thread_tmp_18_fu_564_p3();
    void thread_tmp_19_fu_670_p4();
    void thread_tmp_1_fu_453_p2();
    void thread_tmp_20_fu_680_p3();
    void thread_tmp_22_fu_734_p2();
    void thread_tmp_24_fu_740_p4();
    void thread_tmp_25_fu_750_p3();
    void thread_tmp_27_fu_911_p1();
    void thread_tmp_28_fu_804_p2();
    void thread_tmp_29_fu_590_p1();
    void thread_tmp_2_fu_379_p3();
    void thread_tmp_2_mid1_fu_471_p3();
    void thread_tmp_2_mid2_fu_479_p3();
    void thread_tmp_2_mid_fu_413_p3();
    void thread_tmp_30_fu_810_p4();
    void thread_tmp_31_fu_820_p3();
    void thread_tmp_37_fu_634_p3();
    void thread_tmp_39_fu_660_p1();
    void thread_tmp_3_fu_435_p2();
    void thread_tmp_3_mid_fu_441_p2();
    void thread_tmp_40_1_fu_688_p2();
    void thread_tmp_40_2_fu_758_p2();
    void thread_tmp_40_3_fu_828_p2();
    void thread_tmp_40_fu_704_p3();
    void thread_tmp_41_1_fu_876_p1();
    void thread_tmp_41_2_fu_896_p1();
    void thread_tmp_41_3_fu_918_p1();
    void thread_tmp_42_fu_730_p1();
    void thread_tmp_43_fu_774_p3();
    void thread_tmp_45_fu_800_p1();
    void thread_tmp_4_fu_507_p2();
    void thread_tmp_5_fu_539_p1();
    void thread_tmp_6_fu_513_p2();
    void thread_tmp_7_fu_594_p2();
    void thread_tmp_9_fu_846_p1();
    void thread_tmp_fu_375_p1();
    void thread_weights21_m_weights_1_address0();
    void thread_weights21_m_weights_1_ce0();
    void thread_weights21_m_weights_2_address0();
    void thread_weights21_m_weights_2_ce0();
    void thread_weights21_m_weights_3_address0();
    void thread_weights21_m_weights_3_ce0();
    void thread_weights21_m_weights_s_address0();
    void thread_weights21_m_weights_s_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
