-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity computeS4_2 is
port (
    input1_V_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    output1_V_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    input1_V_V_TVALID : IN STD_LOGIC;
    input1_V_V_TREADY : OUT STD_LOGIC;
    output1_V_V_TVALID : OUT STD_LOGIC;
    output1_V_V_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of computeS4_2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "computeS4_2,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.198500,HLS_SYN_LAT=8786088,HLS_SYN_TPT=8388869,HLS_SYN_MEM=30,HLS_SYN_DSP=0,HLS_SYN_FF=1048,HLS_SYN_LUT=3694,HLS_VERSION=2018_2}";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal ResizeStream_1_U0_ap_start : STD_LOGIC;
    signal ResizeStream_1_U0_ap_done : STD_LOGIC;
    signal ResizeStream_1_U0_ap_continue : STD_LOGIC;
    signal ResizeStream_1_U0_ap_idle : STD_LOGIC;
    signal ResizeStream_1_U0_ap_ready : STD_LOGIC;
    signal ResizeStream_1_U0_start_out : STD_LOGIC;
    signal ResizeStream_1_U0_start_write : STD_LOGIC;
    signal ResizeStream_1_U0_in_V_V_TREADY : STD_LOGIC;
    signal ResizeStream_1_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal ResizeStream_1_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DBuffer_new_U0_ap_start : STD_LOGIC;
    signal Conv1DBuffer_new_U0_ap_done : STD_LOGIC;
    signal Conv1DBuffer_new_U0_ap_continue : STD_LOGIC;
    signal Conv1DBuffer_new_U0_ap_idle : STD_LOGIC;
    signal Conv1DBuffer_new_U0_ap_ready : STD_LOGIC;
    signal Conv1DBuffer_new_U0_start_out : STD_LOGIC;
    signal Conv1DBuffer_new_U0_start_write : STD_LOGIC;
    signal Conv1DBuffer_new_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DBuffer_new_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Conv1DBuffer_new_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DMac_new_U0_ap_start : STD_LOGIC;
    signal Conv1DMac_new_U0_ap_done : STD_LOGIC;
    signal Conv1DMac_new_U0_ap_continue : STD_LOGIC;
    signal Conv1DMac_new_U0_ap_idle : STD_LOGIC;
    signal Conv1DMac_new_U0_ap_ready : STD_LOGIC;
    signal Conv1DMac_new_U0_start_out : STD_LOGIC;
    signal Conv1DMac_new_U0_start_write : STD_LOGIC;
    signal Conv1DMac_new_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DMac_new_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Conv1DMac_new_U0_out_V_V_write : STD_LOGIC;
    signal Relu1D_U0_ap_start : STD_LOGIC;
    signal Relu1D_U0_ap_done : STD_LOGIC;
    signal Relu1D_U0_ap_continue : STD_LOGIC;
    signal Relu1D_U0_ap_idle : STD_LOGIC;
    signal Relu1D_U0_ap_ready : STD_LOGIC;
    signal Relu1D_U0_start_out : STD_LOGIC;
    signal Relu1D_U0_start_write : STD_LOGIC;
    signal Relu1D_U0_in_V_V_read : STD_LOGIC;
    signal Relu1D_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Relu1D_U0_out_V_V_write : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthCo_U0_start_out : STD_LOGIC;
    signal StreamingDataWidthCo_U0_start_write : STD_LOGIC;
    signal StreamingDataWidthCo_U0_in_V_V_read : STD_LOGIC;
    signal StreamingDataWidthCo_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal StreamingDataWidthCo_U0_out_V_V_write : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_ap_start : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_ap_done : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_ap_continue : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_ap_idle : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_ap_ready : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_start_out : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_start_write : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_in_V_V_read : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal StreamingMaxPool_Pre_U0_out_V_V_write : STD_LOGIC;
    signal ResizeStream_U0_ap_start : STD_LOGIC;
    signal ResizeStream_U0_ap_done : STD_LOGIC;
    signal ResizeStream_U0_ap_continue : STD_LOGIC;
    signal ResizeStream_U0_ap_idle : STD_LOGIC;
    signal ResizeStream_U0_ap_ready : STD_LOGIC;
    signal ResizeStream_U0_in_V_V_read : STD_LOGIC;
    signal ResizeStream_U0_out_V_V_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal ResizeStream_U0_out_V_V_TVALID : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal cnv_95_V_V_full_n : STD_LOGIC;
    signal cnv_95_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_95_V_V_empty_n : STD_LOGIC;
    signal cnv_96_V_V_full_n : STD_LOGIC;
    signal cnv_96_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_96_V_V_empty_n : STD_LOGIC;
    signal cnv_97PRL_V_V_full_n : STD_LOGIC;
    signal cnv_97PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_97PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_98PRL_V_V_full_n : STD_LOGIC;
    signal cnv_98PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_98PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_99_V_V_full_n : STD_LOGIC;
    signal cnv_99_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_99_V_V_empty_n : STD_LOGIC;
    signal outStr_V_V_full_n : STD_LOGIC;
    signal outStr_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal outStr_V_V_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_Conv1DBuffer_new_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DMac_new_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DMac_new_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new_U0_empty_n : STD_LOGIC;
    signal start_for_Relu1D_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D_U0_full_n : STD_LOGIC;
    signal start_for_Relu1D_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_U0_full_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingMaxPool_Pre_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingMaxPool_Pre_U0_full_n : STD_LOGIC;
    signal start_for_StreamingMaxPool_Pre_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingMaxPool_Pre_U0_empty_n : STD_LOGIC;
    signal start_for_ResizeStream_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_ResizeStream_U0_full_n : STD_LOGIC;
    signal start_for_ResizeStream_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_ResizeStream_U0_empty_n : STD_LOGIC;
    signal ResizeStream_U0_start_full_n : STD_LOGIC;
    signal ResizeStream_U0_start_write : STD_LOGIC;

    component ResizeStream_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        in_V_V_TVALID : IN STD_LOGIC;
        in_V_V_TREADY : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DBuffer_new IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DMac_new IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Relu1D IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthCo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component StreamingMaxPool_Pre IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component ResizeStream IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_V_V_TVALID : OUT STD_LOGIC;
        out_V_V_TREADY : IN STD_LOGIC );
    end component;


    component fifo_w8_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DBjbC IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DMkbM IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Relu1D_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_StreamilbW IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Streamimb6 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_ResizeSncg IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    ResizeStream_1_U0 : component ResizeStream_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => ResizeStream_1_U0_ap_start,
        start_full_n => start_for_Conv1DBuffer_new_U0_full_n,
        ap_done => ResizeStream_1_U0_ap_done,
        ap_continue => ResizeStream_1_U0_ap_continue,
        ap_idle => ResizeStream_1_U0_ap_idle,
        ap_ready => ResizeStream_1_U0_ap_ready,
        start_out => ResizeStream_1_U0_start_out,
        start_write => ResizeStream_1_U0_start_write,
        in_V_V_TDATA => input1_V_V_TDATA,
        in_V_V_TVALID => input1_V_V_TVALID,
        in_V_V_TREADY => ResizeStream_1_U0_in_V_V_TREADY,
        out_V_V_din => ResizeStream_1_U0_out_V_V_din,
        out_V_V_full_n => cnv_95_V_V_full_n,
        out_V_V_write => ResizeStream_1_U0_out_V_V_write);

    Conv1DBuffer_new_U0 : component Conv1DBuffer_new
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DBuffer_new_U0_ap_start,
        start_full_n => start_for_Conv1DMac_new_U0_full_n,
        ap_done => Conv1DBuffer_new_U0_ap_done,
        ap_continue => Conv1DBuffer_new_U0_ap_continue,
        ap_idle => Conv1DBuffer_new_U0_ap_idle,
        ap_ready => Conv1DBuffer_new_U0_ap_ready,
        start_out => Conv1DBuffer_new_U0_start_out,
        start_write => Conv1DBuffer_new_U0_start_write,
        in_V_V_dout => cnv_95_V_V_dout,
        in_V_V_empty_n => cnv_95_V_V_empty_n,
        in_V_V_read => Conv1DBuffer_new_U0_in_V_V_read,
        out_V_V_din => Conv1DBuffer_new_U0_out_V_V_din,
        out_V_V_full_n => cnv_96_V_V_full_n,
        out_V_V_write => Conv1DBuffer_new_U0_out_V_V_write);

    Conv1DMac_new_U0 : component Conv1DMac_new
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DMac_new_U0_ap_start,
        start_full_n => start_for_Relu1D_U0_full_n,
        ap_done => Conv1DMac_new_U0_ap_done,
        ap_continue => Conv1DMac_new_U0_ap_continue,
        ap_idle => Conv1DMac_new_U0_ap_idle,
        ap_ready => Conv1DMac_new_U0_ap_ready,
        start_out => Conv1DMac_new_U0_start_out,
        start_write => Conv1DMac_new_U0_start_write,
        in_V_V_dout => cnv_96_V_V_dout,
        in_V_V_empty_n => cnv_96_V_V_empty_n,
        in_V_V_read => Conv1DMac_new_U0_in_V_V_read,
        out_V_V_din => Conv1DMac_new_U0_out_V_V_din,
        out_V_V_full_n => cnv_97PRL_V_V_full_n,
        out_V_V_write => Conv1DMac_new_U0_out_V_V_write);

    Relu1D_U0 : component Relu1D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Relu1D_U0_ap_start,
        start_full_n => start_for_StreamingDataWidthCo_U0_full_n,
        ap_done => Relu1D_U0_ap_done,
        ap_continue => Relu1D_U0_ap_continue,
        ap_idle => Relu1D_U0_ap_idle,
        ap_ready => Relu1D_U0_ap_ready,
        start_out => Relu1D_U0_start_out,
        start_write => Relu1D_U0_start_write,
        in_V_V_dout => cnv_97PRL_V_V_dout,
        in_V_V_empty_n => cnv_97PRL_V_V_empty_n,
        in_V_V_read => Relu1D_U0_in_V_V_read,
        out_V_V_din => Relu1D_U0_out_V_V_din,
        out_V_V_full_n => cnv_98PRL_V_V_full_n,
        out_V_V_write => Relu1D_U0_out_V_V_write);

    StreamingDataWidthCo_U0 : component StreamingDataWidthCo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingDataWidthCo_U0_ap_start,
        start_full_n => start_for_StreamingMaxPool_Pre_U0_full_n,
        ap_done => StreamingDataWidthCo_U0_ap_done,
        ap_continue => StreamingDataWidthCo_U0_ap_continue,
        ap_idle => StreamingDataWidthCo_U0_ap_idle,
        ap_ready => StreamingDataWidthCo_U0_ap_ready,
        start_out => StreamingDataWidthCo_U0_start_out,
        start_write => StreamingDataWidthCo_U0_start_write,
        in_V_V_dout => cnv_98PRL_V_V_dout,
        in_V_V_empty_n => cnv_98PRL_V_V_empty_n,
        in_V_V_read => StreamingDataWidthCo_U0_in_V_V_read,
        out_V_V_din => StreamingDataWidthCo_U0_out_V_V_din,
        out_V_V_full_n => cnv_99_V_V_full_n,
        out_V_V_write => StreamingDataWidthCo_U0_out_V_V_write);

    StreamingMaxPool_Pre_U0 : component StreamingMaxPool_Pre
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingMaxPool_Pre_U0_ap_start,
        start_full_n => start_for_ResizeStream_U0_full_n,
        ap_done => StreamingMaxPool_Pre_U0_ap_done,
        ap_continue => StreamingMaxPool_Pre_U0_ap_continue,
        ap_idle => StreamingMaxPool_Pre_U0_ap_idle,
        ap_ready => StreamingMaxPool_Pre_U0_ap_ready,
        start_out => StreamingMaxPool_Pre_U0_start_out,
        start_write => StreamingMaxPool_Pre_U0_start_write,
        in_V_V_dout => cnv_99_V_V_dout,
        in_V_V_empty_n => cnv_99_V_V_empty_n,
        in_V_V_read => StreamingMaxPool_Pre_U0_in_V_V_read,
        out_V_V_din => StreamingMaxPool_Pre_U0_out_V_V_din,
        out_V_V_full_n => outStr_V_V_full_n,
        out_V_V_write => StreamingMaxPool_Pre_U0_out_V_V_write);

    ResizeStream_U0 : component ResizeStream
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => ResizeStream_U0_ap_start,
        ap_done => ResizeStream_U0_ap_done,
        ap_continue => ResizeStream_U0_ap_continue,
        ap_idle => ResizeStream_U0_ap_idle,
        ap_ready => ResizeStream_U0_ap_ready,
        in_V_V_dout => outStr_V_V_dout,
        in_V_V_empty_n => outStr_V_V_empty_n,
        in_V_V_read => ResizeStream_U0_in_V_V_read,
        out_V_V_TDATA => ResizeStream_U0_out_V_V_TDATA,
        out_V_V_TVALID => ResizeStream_U0_out_V_V_TVALID,
        out_V_V_TREADY => output1_V_V_TREADY);

    cnv_95_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ResizeStream_1_U0_out_V_V_din,
        if_full_n => cnv_95_V_V_full_n,
        if_write => ResizeStream_1_U0_out_V_V_write,
        if_dout => cnv_95_V_V_dout,
        if_empty_n => cnv_95_V_V_empty_n,
        if_read => Conv1DBuffer_new_U0_in_V_V_read);

    cnv_96_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DBuffer_new_U0_out_V_V_din,
        if_full_n => cnv_96_V_V_full_n,
        if_write => Conv1DBuffer_new_U0_out_V_V_write,
        if_dout => cnv_96_V_V_dout,
        if_empty_n => cnv_96_V_V_empty_n,
        if_read => Conv1DMac_new_U0_in_V_V_read);

    cnv_97PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DMac_new_U0_out_V_V_din,
        if_full_n => cnv_97PRL_V_V_full_n,
        if_write => Conv1DMac_new_U0_out_V_V_write,
        if_dout => cnv_97PRL_V_V_dout,
        if_empty_n => cnv_97PRL_V_V_empty_n,
        if_read => Relu1D_U0_in_V_V_read);

    cnv_98PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Relu1D_U0_out_V_V_din,
        if_full_n => cnv_98PRL_V_V_full_n,
        if_write => Relu1D_U0_out_V_V_write,
        if_dout => cnv_98PRL_V_V_dout,
        if_empty_n => cnv_98PRL_V_V_empty_n,
        if_read => StreamingDataWidthCo_U0_in_V_V_read);

    cnv_99_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_U0_out_V_V_din,
        if_full_n => cnv_99_V_V_full_n,
        if_write => StreamingDataWidthCo_U0_out_V_V_write,
        if_dout => cnv_99_V_V_dout,
        if_empty_n => cnv_99_V_V_empty_n,
        if_read => StreamingMaxPool_Pre_U0_in_V_V_read);

    outStr_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingMaxPool_Pre_U0_out_V_V_din,
        if_full_n => outStr_V_V_full_n,
        if_write => StreamingMaxPool_Pre_U0_out_V_V_write,
        if_dout => outStr_V_V_dout,
        if_empty_n => outStr_V_V_empty_n,
        if_read => ResizeStream_U0_in_V_V_read);

    start_for_Conv1DBjbC_U : component start_for_Conv1DBjbC
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DBuffer_new_U0_din,
        if_full_n => start_for_Conv1DBuffer_new_U0_full_n,
        if_write => ResizeStream_1_U0_start_write,
        if_dout => start_for_Conv1DBuffer_new_U0_dout,
        if_empty_n => start_for_Conv1DBuffer_new_U0_empty_n,
        if_read => Conv1DBuffer_new_U0_ap_ready);

    start_for_Conv1DMkbM_U : component start_for_Conv1DMkbM
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DMac_new_U0_din,
        if_full_n => start_for_Conv1DMac_new_U0_full_n,
        if_write => Conv1DBuffer_new_U0_start_write,
        if_dout => start_for_Conv1DMac_new_U0_dout,
        if_empty_n => start_for_Conv1DMac_new_U0_empty_n,
        if_read => Conv1DMac_new_U0_ap_ready);

    start_for_Relu1D_U0_U : component start_for_Relu1D_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Relu1D_U0_din,
        if_full_n => start_for_Relu1D_U0_full_n,
        if_write => Conv1DMac_new_U0_start_write,
        if_dout => start_for_Relu1D_U0_dout,
        if_empty_n => start_for_Relu1D_U0_empty_n,
        if_read => Relu1D_U0_ap_ready);

    start_for_StreamilbW_U : component start_for_StreamilbW
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingDataWidthCo_U0_din,
        if_full_n => start_for_StreamingDataWidthCo_U0_full_n,
        if_write => Relu1D_U0_start_write,
        if_dout => start_for_StreamingDataWidthCo_U0_dout,
        if_empty_n => start_for_StreamingDataWidthCo_U0_empty_n,
        if_read => StreamingDataWidthCo_U0_ap_ready);

    start_for_Streamimb6_U : component start_for_Streamimb6
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingMaxPool_Pre_U0_din,
        if_full_n => start_for_StreamingMaxPool_Pre_U0_full_n,
        if_write => StreamingDataWidthCo_U0_start_write,
        if_dout => start_for_StreamingMaxPool_Pre_U0_dout,
        if_empty_n => start_for_StreamingMaxPool_Pre_U0_empty_n,
        if_read => StreamingMaxPool_Pre_U0_ap_ready);

    start_for_ResizeSncg_U : component start_for_ResizeSncg
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_ResizeStream_U0_din,
        if_full_n => start_for_ResizeStream_U0_full_n,
        if_write => StreamingMaxPool_Pre_U0_start_write,
        if_dout => start_for_ResizeStream_U0_dout,
        if_empty_n => start_for_ResizeStream_U0_empty_n,
        if_read => ResizeStream_U0_ap_ready);




    Conv1DBuffer_new_U0_ap_continue <= ap_const_logic_1;
    Conv1DBuffer_new_U0_ap_start <= start_for_Conv1DBuffer_new_U0_empty_n;
    Conv1DMac_new_U0_ap_continue <= ap_const_logic_1;
    Conv1DMac_new_U0_ap_start <= start_for_Conv1DMac_new_U0_empty_n;
    Relu1D_U0_ap_continue <= ap_const_logic_1;
    Relu1D_U0_ap_start <= start_for_Relu1D_U0_empty_n;
    ResizeStream_1_U0_ap_continue <= ap_const_logic_1;
    ResizeStream_1_U0_ap_start <= ap_start;
    ResizeStream_U0_ap_continue <= ap_const_logic_1;
    ResizeStream_U0_ap_start <= start_for_ResizeStream_U0_empty_n;
    ResizeStream_U0_start_full_n <= ap_const_logic_1;
    ResizeStream_U0_start_write <= ap_const_logic_0;
    StreamingDataWidthCo_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthCo_U0_ap_start <= start_for_StreamingDataWidthCo_U0_empty_n;
    StreamingMaxPool_Pre_U0_ap_continue <= ap_const_logic_1;
    StreamingMaxPool_Pre_U0_ap_start <= start_for_StreamingMaxPool_Pre_U0_empty_n;
    ap_done <= ResizeStream_U0_ap_done;
    ap_idle <= (StreamingMaxPool_Pre_U0_ap_idle and StreamingDataWidthCo_U0_ap_idle and ResizeStream_U0_ap_idle and ResizeStream_1_U0_ap_idle and Relu1D_U0_ap_idle and Conv1DMac_new_U0_ap_idle and Conv1DBuffer_new_U0_ap_idle);
    ap_ready <= ResizeStream_1_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= ResizeStream_U0_ap_done;
    ap_sync_ready <= ResizeStream_1_U0_ap_ready;
    input1_V_V_TREADY <= ResizeStream_1_U0_in_V_V_TREADY;
    output1_V_V_TDATA <= ResizeStream_U0_out_V_V_TDATA;
    output1_V_V_TVALID <= ResizeStream_U0_out_V_V_TVALID;
    start_for_Conv1DBuffer_new_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DMac_new_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Relu1D_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_ResizeStream_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingDataWidthCo_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingMaxPool_Pre_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
