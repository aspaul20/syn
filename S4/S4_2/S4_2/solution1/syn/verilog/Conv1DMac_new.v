// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv1DMac_new (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [31:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [13:0] weights22_m_weights_3_address0;
reg    weights22_m_weights_3_ce0;
wire   [6:0] weights22_m_weights_3_q0;
wire   [13:0] weights22_m_weights_2_address0;
reg    weights22_m_weights_2_ce0;
wire   [6:0] weights22_m_weights_2_q0;
wire   [13:0] weights22_m_weights_1_address0;
reg    weights22_m_weights_1_ce0;
wire   [6:0] weights22_m_weights_1_q0;
wire   [13:0] weights22_m_weights_s_address0;
reg    weights22_m_weights_s_ce0;
wire   [6:0] weights22_m_weights_s_q0;
reg    in_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten1_reg_1587;
reg   [0:0] exitcond_flatten1_reg_1587_pp0_iter1_reg;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] tmp_6_reg_1614;
reg   [0:0] tmp_6_reg_1614_pp0_iter3_reg;
reg   [23:0] indvar_flatten1_reg_351;
reg   [15:0] indvar_flatten_reg_362;
reg   [6:0] nm_reg_373;
reg   [8:0] sf_reg_384;
wire   [0:0] exitcond_flatten1_fu_427_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [23:0] indvar_flatten_next1_fu_433_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] nm_t_mid2_fu_527_p3;
reg   [5:0] nm_t_mid2_reg_1596;
reg   [5:0] nm_t_mid2_reg_1596_pp0_iter1_reg;
reg   [5:0] nm_t_mid2_reg_1596_pp0_iter2_reg;
wire   [6:0] nm_mid2_fu_535_p3;
wire   [13:0] tmp_4_fu_547_p2;
reg   [13:0] tmp_4_reg_1609;
wire   [0:0] tmp_6_fu_553_p2;
reg   [0:0] tmp_6_reg_1614_pp0_iter1_reg;
reg   [0:0] tmp_6_reg_1614_pp0_iter2_reg;
wire   [8:0] sf_1_fu_559_p2;
wire   [15:0] indvar_flatten_next_fu_571_p3;
reg   [7:0] tmp_8_reg_1648;
reg   [0:0] tmp_16_reg_1653;
wire   [0:0] tmp_14_fu_654_p2;
reg   [0:0] tmp_14_reg_1658;
reg   [7:0] tmp_11_reg_1663;
reg   [0:0] tmp_30_reg_1668;
wire   [0:0] tmp_25_1_fu_724_p2;
reg   [0:0] tmp_25_1_reg_1673;
reg   [7:0] tmp_20_reg_1678;
reg   [0:0] tmp_33_reg_1683;
wire   [0:0] tmp_25_2_fu_794_p2;
reg   [0:0] tmp_25_2_reg_1688;
reg   [7:0] tmp_25_reg_1693;
reg   [0:0] tmp_36_reg_1698;
wire   [0:0] tmp_25_3_fu_864_p2;
reg   [0:0] tmp_25_3_reg_1703;
wire   [7:0] p_Val2_7_fu_1115_p2;
reg   [7:0] p_Val2_7_reg_1708;
wire   [7:0] p_Val2_7_1_fu_1258_p2;
reg   [7:0] p_Val2_7_1_reg_1713;
wire   [7:0] p_Val2_7_2_fu_1401_p2;
reg   [7:0] p_Val2_7_2_reg_1718;
wire   [7:0] p_Val2_7_3_fu_1544_p2;
reg   [7:0] p_Val2_7_3_reg_1723;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
wire   [63:0] tmp_5_fu_579_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] macRegisters_0_V_1_fu_270;
wire   [7:0] macRegisters_0_V_fu_896_p2;
reg   [7:0] macRegisters_1_V_1_fu_274;
wire   [7:0] macRegisters_1_V_fu_915_p2;
reg   [7:0] macRegisters_2_V_1_fu_278;
wire   [7:0] macRegisters_2_V_fu_934_p2;
reg   [7:0] macRegisters_3_V_1_fu_282;
wire   [7:0] macRegisters_3_V_fu_953_p2;
wire   [5:0] tmp_fu_415_p1;
wire   [0:0] exitcond_flatten_fu_439_p2;
wire   [13:0] tmp_2_fu_419_p3;
wire   [0:0] tmp_3_fu_475_p2;
wire   [0:0] not_exitcond_flatten_fu_469_p2;
wire   [6:0] nm_mid_fu_445_p3;
wire   [0:0] tmp_3_mid_fu_481_p2;
wire   [0:0] tmp_1_fu_493_p2;
wire   [6:0] nm_1_fu_487_p2;
wire   [5:0] tmp_7_fu_507_p1;
wire   [13:0] tmp_2_mid1_fu_511_p3;
wire   [13:0] tmp_2_mid_fu_453_p3;
wire   [5:0] nm_t_mid_fu_461_p3;
wire   [8:0] sf_mid2_fu_499_p3;
wire   [13:0] sf_cast_fu_543_p1;
wire   [13:0] tmp_2_mid2_fu_519_p3;
wire   [15:0] indvar_flatten_op_fu_565_p2;
wire  signed [6:0] p_Val2_s_fu_594_p0;
wire  signed [7:0] p_Val2_s_fu_594_p1;
wire  signed [14:0] p_08_cast_fu_586_p1;
wire   [14:0] p_Val2_s_fu_594_p2;
wire   [0:0] tmp_21_fu_626_p1;
wire   [0:0] tmp_9_fu_600_p3;
wire   [4:0] tmp_12_fu_636_p4;
wire   [0:0] tmp_10_fu_630_p2;
wire   [5:0] tmp_13_fu_646_p3;
wire  signed [6:0] p_Val2_s_46_fu_664_p0;
wire  signed [7:0] p_Val2_s_46_fu_664_p1;
wire   [14:0] p_Val2_s_46_fu_664_p2;
wire   [0:0] tmp_31_fu_696_p1;
wire   [0:0] tmp_26_fu_670_p3;
wire   [4:0] tmp_18_fu_706_p4;
wire   [0:0] tmp_17_fu_700_p2;
wire   [5:0] tmp_19_fu_716_p3;
wire  signed [6:0] p_Val2_3_fu_734_p0;
wire  signed [7:0] p_Val2_3_fu_734_p1;
wire   [14:0] p_Val2_3_fu_734_p2;
wire   [0:0] tmp_34_fu_766_p1;
wire   [0:0] tmp_32_fu_740_p3;
wire   [4:0] tmp_23_fu_776_p4;
wire   [0:0] tmp_22_fu_770_p2;
wire   [5:0] tmp_24_fu_786_p3;
wire  signed [6:0] p_Val2_4_fu_804_p0;
wire  signed [7:0] p_Val2_4_fu_804_p1;
wire   [14:0] p_Val2_4_fu_804_p2;
wire   [0:0] tmp_37_fu_836_p1;
wire   [0:0] tmp_35_fu_810_p3;
wire   [4:0] tmp_28_fu_846_p4;
wire   [0:0] tmp_27_fu_840_p2;
wire   [5:0] tmp_29_fu_856_p3;
wire   [0:0] qb_assign_1_fu_882_p2;
wire   [7:0] tmp_15_fu_886_p1;
wire   [7:0] tmp9_fu_890_p2;
wire   [0:0] qb_assign_1_1_fu_901_p2;
wire   [7:0] tmp_26_1_fu_905_p1;
wire   [7:0] tmp8_fu_909_p2;
wire   [0:0] qb_assign_1_2_fu_920_p2;
wire   [7:0] tmp_26_2_fu_924_p1;
wire   [7:0] tmp10_fu_928_p2;
wire   [0:0] qb_assign_1_3_fu_939_p2;
wire   [7:0] tmp_26_3_fu_943_p1;
wire   [7:0] tmp11_fu_947_p2;
wire   [6:0] UnifiedRetVal_i_fu_978_p66;
wire  signed [7:0] UnifiedRetVal_i_cast_fu_1111_p1;
wire   [6:0] UnifiedRetVal_i1_fu_1121_p66;
wire  signed [7:0] UnifiedRetVal_i65_ca_fu_1254_p1;
wire   [5:0] UnifiedRetVal_i2_fu_1264_p66;
wire  signed [7:0] UnifiedRetVal_i131_c_fu_1397_p1;
wire   [6:0] UnifiedRetVal_i3_fu_1407_p66;
wire  signed [7:0] UnifiedRetVal_i197_c_fu_1540_p1;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

Conv1DMac_new_weicud #(
    .DataWidth( 7 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights22_m_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights22_m_weights_3_address0),
    .ce0(weights22_m_weights_3_ce0),
    .q0(weights22_m_weights_3_q0)
);

Conv1DMac_new_weidEe #(
    .DataWidth( 7 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights22_m_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights22_m_weights_2_address0),
    .ce0(weights22_m_weights_2_ce0),
    .q0(weights22_m_weights_2_q0)
);

Conv1DMac_new_weieOg #(
    .DataWidth( 7 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights22_m_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights22_m_weights_1_address0),
    .ce0(weights22_m_weights_1_ce0),
    .q0(weights22_m_weights_1_q0)
);

Conv1DMac_new_weifYi #(
    .DataWidth( 7 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights22_m_weights_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights22_m_weights_s_address0),
    .ce0(weights22_m_weights_s_ce0),
    .q0(weights22_m_weights_s_q0)
);

computeS4_2_mux_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 7 ),
    .din3_WIDTH( 7 ),
    .din4_WIDTH( 7 ),
    .din5_WIDTH( 7 ),
    .din6_WIDTH( 7 ),
    .din7_WIDTH( 7 ),
    .din8_WIDTH( 7 ),
    .din9_WIDTH( 7 ),
    .din10_WIDTH( 7 ),
    .din11_WIDTH( 7 ),
    .din12_WIDTH( 7 ),
    .din13_WIDTH( 7 ),
    .din14_WIDTH( 7 ),
    .din15_WIDTH( 7 ),
    .din16_WIDTH( 7 ),
    .din17_WIDTH( 7 ),
    .din18_WIDTH( 7 ),
    .din19_WIDTH( 7 ),
    .din20_WIDTH( 7 ),
    .din21_WIDTH( 7 ),
    .din22_WIDTH( 7 ),
    .din23_WIDTH( 7 ),
    .din24_WIDTH( 7 ),
    .din25_WIDTH( 7 ),
    .din26_WIDTH( 7 ),
    .din27_WIDTH( 7 ),
    .din28_WIDTH( 7 ),
    .din29_WIDTH( 7 ),
    .din30_WIDTH( 7 ),
    .din31_WIDTH( 7 ),
    .din32_WIDTH( 7 ),
    .din33_WIDTH( 7 ),
    .din34_WIDTH( 7 ),
    .din35_WIDTH( 7 ),
    .din36_WIDTH( 7 ),
    .din37_WIDTH( 7 ),
    .din38_WIDTH( 7 ),
    .din39_WIDTH( 7 ),
    .din40_WIDTH( 7 ),
    .din41_WIDTH( 7 ),
    .din42_WIDTH( 7 ),
    .din43_WIDTH( 7 ),
    .din44_WIDTH( 7 ),
    .din45_WIDTH( 7 ),
    .din46_WIDTH( 7 ),
    .din47_WIDTH( 7 ),
    .din48_WIDTH( 7 ),
    .din49_WIDTH( 7 ),
    .din50_WIDTH( 7 ),
    .din51_WIDTH( 7 ),
    .din52_WIDTH( 7 ),
    .din53_WIDTH( 7 ),
    .din54_WIDTH( 7 ),
    .din55_WIDTH( 7 ),
    .din56_WIDTH( 7 ),
    .din57_WIDTH( 7 ),
    .din58_WIDTH( 7 ),
    .din59_WIDTH( 7 ),
    .din60_WIDTH( 7 ),
    .din61_WIDTH( 7 ),
    .din62_WIDTH( 7 ),
    .din63_WIDTH( 7 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 7 ))
computeS4_2_mux_6g8j_U6(
    .din0(7'd11),
    .din1(7'd18),
    .din2(7'd1),
    .din3(7'd9),
    .din4(7'd3),
    .din5(7'd5),
    .din6(7'd11),
    .din7(7'd13),
    .din8(7'd125),
    .din9(7'd19),
    .din10(7'd25),
    .din11(7'd17),
    .din12(7'd15),
    .din13(7'd125),
    .din14(7'd15),
    .din15(7'd10),
    .din16(7'd15),
    .din17(7'd2),
    .din18(7'd6),
    .din19(7'd3),
    .din20(7'd123),
    .din21(7'd127),
    .din22(7'd9),
    .din23(7'd10),
    .din24(7'd20),
    .din25(7'd22),
    .din26(7'd2),
    .din27(7'd11),
    .din28(7'd2),
    .din29(7'd125),
    .din30(7'd3),
    .din31(7'd11),
    .din32(7'd3),
    .din33(7'd3),
    .din34(7'd0),
    .din35(7'd11),
    .din36(7'd40),
    .din37(7'd6),
    .din38(7'd7),
    .din39(7'd9),
    .din40(7'd8),
    .din41(7'd8),
    .din42(7'd3),
    .din43(7'd119),
    .din44(7'd4),
    .din45(7'd7),
    .din46(7'd14),
    .din47(7'd19),
    .din48(7'd2),
    .din49(7'd20),
    .din50(7'd25),
    .din51(7'd26),
    .din52(7'd15),
    .din53(7'd31),
    .din54(7'd10),
    .din55(7'd13),
    .din56(7'd0),
    .din57(7'd5),
    .din58(7'd0),
    .din59(7'd11),
    .din60(7'd1),
    .din61(7'd7),
    .din62(7'd3),
    .din63(7'd5),
    .din64(nm_t_mid2_reg_1596_pp0_iter2_reg),
    .dout(UnifiedRetVal_i_fu_978_p66)
);

computeS4_2_mux_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 7 ),
    .din3_WIDTH( 7 ),
    .din4_WIDTH( 7 ),
    .din5_WIDTH( 7 ),
    .din6_WIDTH( 7 ),
    .din7_WIDTH( 7 ),
    .din8_WIDTH( 7 ),
    .din9_WIDTH( 7 ),
    .din10_WIDTH( 7 ),
    .din11_WIDTH( 7 ),
    .din12_WIDTH( 7 ),
    .din13_WIDTH( 7 ),
    .din14_WIDTH( 7 ),
    .din15_WIDTH( 7 ),
    .din16_WIDTH( 7 ),
    .din17_WIDTH( 7 ),
    .din18_WIDTH( 7 ),
    .din19_WIDTH( 7 ),
    .din20_WIDTH( 7 ),
    .din21_WIDTH( 7 ),
    .din22_WIDTH( 7 ),
    .din23_WIDTH( 7 ),
    .din24_WIDTH( 7 ),
    .din25_WIDTH( 7 ),
    .din26_WIDTH( 7 ),
    .din27_WIDTH( 7 ),
    .din28_WIDTH( 7 ),
    .din29_WIDTH( 7 ),
    .din30_WIDTH( 7 ),
    .din31_WIDTH( 7 ),
    .din32_WIDTH( 7 ),
    .din33_WIDTH( 7 ),
    .din34_WIDTH( 7 ),
    .din35_WIDTH( 7 ),
    .din36_WIDTH( 7 ),
    .din37_WIDTH( 7 ),
    .din38_WIDTH( 7 ),
    .din39_WIDTH( 7 ),
    .din40_WIDTH( 7 ),
    .din41_WIDTH( 7 ),
    .din42_WIDTH( 7 ),
    .din43_WIDTH( 7 ),
    .din44_WIDTH( 7 ),
    .din45_WIDTH( 7 ),
    .din46_WIDTH( 7 ),
    .din47_WIDTH( 7 ),
    .din48_WIDTH( 7 ),
    .din49_WIDTH( 7 ),
    .din50_WIDTH( 7 ),
    .din51_WIDTH( 7 ),
    .din52_WIDTH( 7 ),
    .din53_WIDTH( 7 ),
    .din54_WIDTH( 7 ),
    .din55_WIDTH( 7 ),
    .din56_WIDTH( 7 ),
    .din57_WIDTH( 7 ),
    .din58_WIDTH( 7 ),
    .din59_WIDTH( 7 ),
    .din60_WIDTH( 7 ),
    .din61_WIDTH( 7 ),
    .din62_WIDTH( 7 ),
    .din63_WIDTH( 7 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 7 ))
computeS4_2_mux_6g8j_U7(
    .din0(7'd121),
    .din1(7'd10),
    .din2(7'd6),
    .din3(7'd9),
    .din4(7'd22),
    .din5(7'd16),
    .din6(7'd120),
    .din7(7'd15),
    .din8(7'd24),
    .din9(7'd10),
    .din10(7'd10),
    .din11(7'd8),
    .din12(7'd7),
    .din13(7'd4),
    .din14(7'd13),
    .din15(7'd4),
    .din16(7'd1),
    .din17(7'd6),
    .din18(7'd11),
    .din19(7'd5),
    .din20(7'd9),
    .din21(7'd21),
    .din22(7'd5),
    .din23(7'd12),
    .din24(7'd2),
    .din25(7'd4),
    .din26(7'd20),
    .din27(7'd20),
    .din28(7'd19),
    .din29(7'd15),
    .din30(7'd4),
    .din31(7'd127),
    .din32(7'd8),
    .din33(7'd5),
    .din34(7'd0),
    .din35(7'd6),
    .din36(7'd126),
    .din37(7'd5),
    .din38(7'd0),
    .din39(7'd2),
    .din40(7'd117),
    .din41(7'd1),
    .din42(7'd14),
    .din43(7'd4),
    .din44(7'd14),
    .din45(7'd7),
    .din46(7'd9),
    .din47(7'd11),
    .din48(7'd127),
    .din49(7'd4),
    .din50(7'd1),
    .din51(7'd5),
    .din52(7'd21),
    .din53(7'd14),
    .din54(7'd19),
    .din55(7'd41),
    .din56(7'd21),
    .din57(7'd0),
    .din58(7'd7),
    .din59(7'd115),
    .din60(7'd18),
    .din61(7'd123),
    .din62(7'd2),
    .din63(7'd8),
    .din64(nm_t_mid2_reg_1596_pp0_iter2_reg),
    .dout(UnifiedRetVal_i1_fu_1121_p66)
);

computeS4_2_mux_6hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 6 ),
    .din5_WIDTH( 6 ),
    .din6_WIDTH( 6 ),
    .din7_WIDTH( 6 ),
    .din8_WIDTH( 6 ),
    .din9_WIDTH( 6 ),
    .din10_WIDTH( 6 ),
    .din11_WIDTH( 6 ),
    .din12_WIDTH( 6 ),
    .din13_WIDTH( 6 ),
    .din14_WIDTH( 6 ),
    .din15_WIDTH( 6 ),
    .din16_WIDTH( 6 ),
    .din17_WIDTH( 6 ),
    .din18_WIDTH( 6 ),
    .din19_WIDTH( 6 ),
    .din20_WIDTH( 6 ),
    .din21_WIDTH( 6 ),
    .din22_WIDTH( 6 ),
    .din23_WIDTH( 6 ),
    .din24_WIDTH( 6 ),
    .din25_WIDTH( 6 ),
    .din26_WIDTH( 6 ),
    .din27_WIDTH( 6 ),
    .din28_WIDTH( 6 ),
    .din29_WIDTH( 6 ),
    .din30_WIDTH( 6 ),
    .din31_WIDTH( 6 ),
    .din32_WIDTH( 6 ),
    .din33_WIDTH( 6 ),
    .din34_WIDTH( 6 ),
    .din35_WIDTH( 6 ),
    .din36_WIDTH( 6 ),
    .din37_WIDTH( 6 ),
    .din38_WIDTH( 6 ),
    .din39_WIDTH( 6 ),
    .din40_WIDTH( 6 ),
    .din41_WIDTH( 6 ),
    .din42_WIDTH( 6 ),
    .din43_WIDTH( 6 ),
    .din44_WIDTH( 6 ),
    .din45_WIDTH( 6 ),
    .din46_WIDTH( 6 ),
    .din47_WIDTH( 6 ),
    .din48_WIDTH( 6 ),
    .din49_WIDTH( 6 ),
    .din50_WIDTH( 6 ),
    .din51_WIDTH( 6 ),
    .din52_WIDTH( 6 ),
    .din53_WIDTH( 6 ),
    .din54_WIDTH( 6 ),
    .din55_WIDTH( 6 ),
    .din56_WIDTH( 6 ),
    .din57_WIDTH( 6 ),
    .din58_WIDTH( 6 ),
    .din59_WIDTH( 6 ),
    .din60_WIDTH( 6 ),
    .din61_WIDTH( 6 ),
    .din62_WIDTH( 6 ),
    .din63_WIDTH( 6 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
computeS4_2_mux_6hbi_U8(
    .din0(6'd7),
    .din1(6'd58),
    .din2(6'd55),
    .din3(6'd18),
    .din4(6'd0),
    .din5(6'd23),
    .din6(6'd14),
    .din7(6'd6),
    .din8(6'd7),
    .din9(6'd7),
    .din10(6'd46),
    .din11(6'd61),
    .din12(6'd9),
    .din13(6'd19),
    .din14(6'd16),
    .din15(6'd6),
    .din16(6'd7),
    .din17(6'd13),
    .din18(6'd26),
    .din19(6'd21),
    .din20(6'd15),
    .din21(6'd23),
    .din22(6'd9),
    .din23(6'd7),
    .din24(6'd16),
    .din25(6'd13),
    .din26(6'd4),
    .din27(6'd0),
    .din28(6'd7),
    .din29(6'd6),
    .din30(6'd6),
    .din31(6'd14),
    .din32(6'd4),
    .din33(6'd7),
    .din34(6'd18),
    .din35(6'd3),
    .din36(6'd58),
    .din37(6'd3),
    .din38(6'd2),
    .din39(6'd10),
    .din40(6'd1),
    .din41(6'd5),
    .din42(6'd6),
    .din43(6'd20),
    .din44(6'd12),
    .din45(6'd0),
    .din46(6'd2),
    .din47(6'd1),
    .din48(6'd0),
    .din49(6'd29),
    .din50(6'd4),
    .din51(6'd11),
    .din52(6'd7),
    .din53(6'd3),
    .din54(6'd19),
    .din55(6'd22),
    .din56(6'd59),
    .din57(6'd1),
    .din58(6'd62),
    .din59(6'd8),
    .din60(6'd25),
    .din61(6'd12),
    .din62(6'd25),
    .din63(6'd5),
    .din64(nm_t_mid2_reg_1596_pp0_iter2_reg),
    .dout(UnifiedRetVal_i2_fu_1264_p66)
);

computeS4_2_mux_6g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 7 ),
    .din3_WIDTH( 7 ),
    .din4_WIDTH( 7 ),
    .din5_WIDTH( 7 ),
    .din6_WIDTH( 7 ),
    .din7_WIDTH( 7 ),
    .din8_WIDTH( 7 ),
    .din9_WIDTH( 7 ),
    .din10_WIDTH( 7 ),
    .din11_WIDTH( 7 ),
    .din12_WIDTH( 7 ),
    .din13_WIDTH( 7 ),
    .din14_WIDTH( 7 ),
    .din15_WIDTH( 7 ),
    .din16_WIDTH( 7 ),
    .din17_WIDTH( 7 ),
    .din18_WIDTH( 7 ),
    .din19_WIDTH( 7 ),
    .din20_WIDTH( 7 ),
    .din21_WIDTH( 7 ),
    .din22_WIDTH( 7 ),
    .din23_WIDTH( 7 ),
    .din24_WIDTH( 7 ),
    .din25_WIDTH( 7 ),
    .din26_WIDTH( 7 ),
    .din27_WIDTH( 7 ),
    .din28_WIDTH( 7 ),
    .din29_WIDTH( 7 ),
    .din30_WIDTH( 7 ),
    .din31_WIDTH( 7 ),
    .din32_WIDTH( 7 ),
    .din33_WIDTH( 7 ),
    .din34_WIDTH( 7 ),
    .din35_WIDTH( 7 ),
    .din36_WIDTH( 7 ),
    .din37_WIDTH( 7 ),
    .din38_WIDTH( 7 ),
    .din39_WIDTH( 7 ),
    .din40_WIDTH( 7 ),
    .din41_WIDTH( 7 ),
    .din42_WIDTH( 7 ),
    .din43_WIDTH( 7 ),
    .din44_WIDTH( 7 ),
    .din45_WIDTH( 7 ),
    .din46_WIDTH( 7 ),
    .din47_WIDTH( 7 ),
    .din48_WIDTH( 7 ),
    .din49_WIDTH( 7 ),
    .din50_WIDTH( 7 ),
    .din51_WIDTH( 7 ),
    .din52_WIDTH( 7 ),
    .din53_WIDTH( 7 ),
    .din54_WIDTH( 7 ),
    .din55_WIDTH( 7 ),
    .din56_WIDTH( 7 ),
    .din57_WIDTH( 7 ),
    .din58_WIDTH( 7 ),
    .din59_WIDTH( 7 ),
    .din60_WIDTH( 7 ),
    .din61_WIDTH( 7 ),
    .din62_WIDTH( 7 ),
    .din63_WIDTH( 7 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 7 ))
computeS4_2_mux_6g8j_U9(
    .din0(7'd0),
    .din1(7'd125),
    .din2(7'd9),
    .din3(7'd39),
    .din4(7'd9),
    .din5(7'd4),
    .din6(7'd0),
    .din7(7'd6),
    .din8(7'd113),
    .din9(7'd6),
    .din10(7'd2),
    .din11(7'd9),
    .din12(7'd117),
    .din13(7'd24),
    .din14(7'd25),
    .din15(7'd6),
    .din16(7'd11),
    .din17(7'd5),
    .din18(7'd15),
    .din19(7'd3),
    .din20(7'd19),
    .din21(7'd8),
    .din22(7'd9),
    .din23(7'd7),
    .din24(7'd15),
    .din25(7'd8),
    .din26(7'd5),
    .din27(7'd26),
    .din28(7'd1),
    .din29(7'd22),
    .din30(7'd123),
    .din31(7'd124),
    .din32(7'd20),
    .din33(7'd13),
    .din34(7'd123),
    .din35(7'd7),
    .din36(7'd17),
    .din37(7'd22),
    .din38(7'd110),
    .din39(7'd20),
    .din40(7'd125),
    .din41(7'd9),
    .din42(7'd0),
    .din43(7'd17),
    .din44(7'd15),
    .din45(7'd6),
    .din46(7'd12),
    .din47(7'd125),
    .din48(7'd13),
    .din49(7'd0),
    .din50(7'd8),
    .din51(7'd21),
    .din52(7'd115),
    .din53(7'd20),
    .din54(7'd10),
    .din55(7'd19),
    .din56(7'd127),
    .din57(7'd126),
    .din58(7'd126),
    .din59(7'd120),
    .din60(7'd23),
    .din61(7'd2),
    .din62(7'd2),
    .din63(7'd21),
    .din64(nm_t_mid2_reg_1596_pp0_iter2_reg),
    .dout(UnifiedRetVal_i3_fu_1407_p66)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_427_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten1_reg_351 <= indvar_flatten_next1_fu_433_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten1_reg_351 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_427_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_362 <= indvar_flatten_next_fu_571_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_362 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_6_reg_1614_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_0_V_1_fu_270 <= macRegisters_0_V_fu_896_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_6_reg_1614_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_0_V_1_fu_270 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_6_reg_1614_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_1_V_1_fu_274 <= macRegisters_1_V_fu_915_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_6_reg_1614_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_1_V_1_fu_274 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_6_reg_1614_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_2_V_1_fu_278 <= macRegisters_2_V_fu_934_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_6_reg_1614_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_2_V_1_fu_278 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_6_reg_1614_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_3_V_1_fu_282 <= macRegisters_3_V_fu_953_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_6_reg_1614_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_3_V_1_fu_282 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_427_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nm_reg_373 <= nm_mid2_fu_535_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nm_reg_373 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_427_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sf_reg_384 <= sf_1_fu_559_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sf_reg_384 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten1_reg_1587 <= exitcond_flatten1_fu_427_p2;
        exitcond_flatten1_reg_1587_pp0_iter1_reg <= exitcond_flatten1_reg_1587;
        nm_t_mid2_reg_1596_pp0_iter1_reg <= nm_t_mid2_reg_1596;
        tmp_6_reg_1614_pp0_iter1_reg <= tmp_6_reg_1614;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_fu_427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nm_t_mid2_reg_1596 <= nm_t_mid2_fu_527_p3;
        tmp_4_reg_1609 <= tmp_4_fu_547_p2;
        tmp_6_reg_1614 <= tmp_6_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        nm_t_mid2_reg_1596_pp0_iter2_reg <= nm_t_mid2_reg_1596_pp0_iter1_reg;
        tmp_6_reg_1614_pp0_iter2_reg <= tmp_6_reg_1614_pp0_iter1_reg;
        tmp_6_reg_1614_pp0_iter3_reg <= tmp_6_reg_1614_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_6_reg_1614_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_7_1_reg_1713 <= p_Val2_7_1_fu_1258_p2;
        p_Val2_7_2_reg_1718 <= p_Val2_7_2_fu_1401_p2;
        p_Val2_7_3_reg_1723 <= p_Val2_7_3_fu_1544_p2;
        p_Val2_7_reg_1708 <= p_Val2_7_fu_1115_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten1_reg_1587_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_11_reg_1663 <= {{p_Val2_s_46_fu_664_p2[14:7]}};
        tmp_14_reg_1658 <= tmp_14_fu_654_p2;
        tmp_16_reg_1653 <= p_Val2_s_fu_594_p2[32'd6];
        tmp_20_reg_1678 <= {{p_Val2_3_fu_734_p2[14:7]}};
        tmp_25_1_reg_1673 <= tmp_25_1_fu_724_p2;
        tmp_25_2_reg_1688 <= tmp_25_2_fu_794_p2;
        tmp_25_3_reg_1703 <= tmp_25_3_fu_864_p2;
        tmp_25_reg_1693 <= {{p_Val2_4_fu_804_p2[14:7]}};
        tmp_30_reg_1668 <= p_Val2_s_46_fu_664_p2[32'd6];
        tmp_33_reg_1683 <= p_Val2_3_fu_734_p2[32'd6];
        tmp_36_reg_1698 <= p_Val2_4_fu_804_p2[32'd6];
        tmp_8_reg_1648 <= {{p_Val2_s_fu_594_p2[14:7]}};
    end
end

always @ (*) begin
    if ((exitcond_flatten1_fu_427_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten1_reg_1587_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten1_reg_1587_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_6_reg_1614_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_6_reg_1614_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights22_m_weights_1_ce0 = 1'b1;
    end else begin
        weights22_m_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights22_m_weights_2_ce0 = 1'b1;
    end else begin
        weights22_m_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights22_m_weights_3_ce0 = 1'b1;
    end else begin
        weights22_m_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights22_m_weights_s_ce0 = 1'b1;
    end else begin
        weights22_m_weights_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten1_fu_427_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten1_fu_427_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign UnifiedRetVal_i131_c_fu_1397_p1 = $signed(UnifiedRetVal_i2_fu_1264_p66);

assign UnifiedRetVal_i197_c_fu_1540_p1 = $signed(UnifiedRetVal_i3_fu_1407_p66);

assign UnifiedRetVal_i65_ca_fu_1254_p1 = $signed(UnifiedRetVal_i1_fu_1121_p66);

assign UnifiedRetVal_i_cast_fu_1111_p1 = $signed(UnifiedRetVal_i_fu_978_p66);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_6_reg_1614_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten1_reg_1587_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_6_reg_1614_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten1_reg_1587_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_6_reg_1614_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten1_reg_1587_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((exitcond_flatten1_reg_1587_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((tmp_6_reg_1614_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign exitcond_flatten1_fu_427_p2 = ((indvar_flatten1_reg_351 == 24'd8388608) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_439_p2 = ((indvar_flatten_reg_362 == 16'd16384) ? 1'b1 : 1'b0);

assign indvar_flatten_next1_fu_433_p2 = (24'd1 + indvar_flatten1_reg_351);

assign indvar_flatten_next_fu_571_p3 = ((exitcond_flatten_fu_439_p2[0:0] === 1'b1) ? 16'd1 : indvar_flatten_op_fu_565_p2);

assign indvar_flatten_op_fu_565_p2 = (indvar_flatten_reg_362 + 16'd1);

assign macRegisters_0_V_fu_896_p2 = (tmp_8_reg_1648 + tmp9_fu_890_p2);

assign macRegisters_1_V_fu_915_p2 = (tmp_11_reg_1663 + tmp8_fu_909_p2);

assign macRegisters_2_V_fu_934_p2 = (tmp_20_reg_1678 + tmp10_fu_928_p2);

assign macRegisters_3_V_fu_953_p2 = (tmp_25_reg_1693 + tmp11_fu_947_p2);

assign nm_1_fu_487_p2 = (7'd1 + nm_mid_fu_445_p3);

assign nm_mid2_fu_535_p3 = ((tmp_3_mid_fu_481_p2[0:0] === 1'b1) ? nm_1_fu_487_p2 : nm_mid_fu_445_p3);

assign nm_mid_fu_445_p3 = ((exitcond_flatten_fu_439_p2[0:0] === 1'b1) ? 7'd0 : nm_reg_373);

assign nm_t_mid2_fu_527_p3 = ((tmp_3_mid_fu_481_p2[0:0] === 1'b1) ? tmp_7_fu_507_p1 : nm_t_mid_fu_461_p3);

assign nm_t_mid_fu_461_p3 = ((exitcond_flatten_fu_439_p2[0:0] === 1'b1) ? 6'd0 : tmp_fu_415_p1);

assign not_exitcond_flatten_fu_469_p2 = (exitcond_flatten_fu_439_p2 ^ 1'd1);

assign out_V_V_din = {{{{p_Val2_7_3_reg_1723}, {p_Val2_7_2_reg_1718}}, {p_Val2_7_1_reg_1713}}, {p_Val2_7_reg_1708}};

assign p_08_cast_fu_586_p1 = $signed(in_V_V_dout);

assign p_Val2_3_fu_734_p0 = weights22_m_weights_1_q0;

assign p_Val2_3_fu_734_p1 = p_08_cast_fu_586_p1;

assign p_Val2_3_fu_734_p2 = ($signed(p_Val2_3_fu_734_p0) * $signed(p_Val2_3_fu_734_p1));

assign p_Val2_4_fu_804_p0 = weights22_m_weights_s_q0;

assign p_Val2_4_fu_804_p1 = p_08_cast_fu_586_p1;

assign p_Val2_4_fu_804_p2 = ($signed(p_Val2_4_fu_804_p0) * $signed(p_Val2_4_fu_804_p1));

assign p_Val2_7_1_fu_1258_p2 = ($signed(UnifiedRetVal_i65_ca_fu_1254_p1) + $signed(macRegisters_1_V_fu_915_p2));

assign p_Val2_7_2_fu_1401_p2 = ($signed(UnifiedRetVal_i131_c_fu_1397_p1) + $signed(macRegisters_2_V_fu_934_p2));

assign p_Val2_7_3_fu_1544_p2 = ($signed(UnifiedRetVal_i197_c_fu_1540_p1) + $signed(macRegisters_3_V_fu_953_p2));

assign p_Val2_7_fu_1115_p2 = ($signed(UnifiedRetVal_i_cast_fu_1111_p1) + $signed(macRegisters_0_V_fu_896_p2));

assign p_Val2_s_46_fu_664_p0 = weights22_m_weights_2_q0;

assign p_Val2_s_46_fu_664_p1 = p_08_cast_fu_586_p1;

assign p_Val2_s_46_fu_664_p2 = ($signed(p_Val2_s_46_fu_664_p0) * $signed(p_Val2_s_46_fu_664_p1));

assign p_Val2_s_fu_594_p0 = weights22_m_weights_3_q0;

assign p_Val2_s_fu_594_p1 = p_08_cast_fu_586_p1;

assign p_Val2_s_fu_594_p2 = ($signed(p_Val2_s_fu_594_p0) * $signed(p_Val2_s_fu_594_p1));

assign qb_assign_1_1_fu_901_p2 = (tmp_30_reg_1668 & tmp_25_1_reg_1673);

assign qb_assign_1_2_fu_920_p2 = (tmp_33_reg_1683 & tmp_25_2_reg_1688);

assign qb_assign_1_3_fu_939_p2 = (tmp_36_reg_1698 & tmp_25_3_reg_1703);

assign qb_assign_1_fu_882_p2 = (tmp_16_reg_1653 & tmp_14_reg_1658);

assign sf_1_fu_559_p2 = (sf_mid2_fu_499_p3 + 9'd1);

assign sf_cast_fu_543_p1 = sf_mid2_fu_499_p3;

assign sf_mid2_fu_499_p3 = ((tmp_1_fu_493_p2[0:0] === 1'b1) ? 9'd0 : sf_reg_384);

assign start_out = real_start;

assign tmp10_fu_928_p2 = (tmp_26_2_fu_924_p1 + macRegisters_2_V_1_fu_278);

assign tmp11_fu_947_p2 = (tmp_26_3_fu_943_p1 + macRegisters_3_V_1_fu_282);

assign tmp8_fu_909_p2 = (tmp_26_1_fu_905_p1 + macRegisters_1_V_1_fu_274);

assign tmp9_fu_890_p2 = (tmp_15_fu_886_p1 + macRegisters_0_V_1_fu_270);

assign tmp_10_fu_630_p2 = (tmp_9_fu_600_p3 | tmp_21_fu_626_p1);

assign tmp_12_fu_636_p4 = {{p_Val2_s_fu_594_p2[5:1]}};

assign tmp_13_fu_646_p3 = {{tmp_12_fu_636_p4}, {tmp_10_fu_630_p2}};

assign tmp_14_fu_654_p2 = ((tmp_13_fu_646_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_15_fu_886_p1 = qb_assign_1_fu_882_p2;

assign tmp_17_fu_700_p2 = (tmp_31_fu_696_p1 | tmp_26_fu_670_p3);

assign tmp_18_fu_706_p4 = {{p_Val2_s_46_fu_664_p2[5:1]}};

assign tmp_19_fu_716_p3 = {{tmp_18_fu_706_p4}, {tmp_17_fu_700_p2}};

assign tmp_1_fu_493_p2 = (tmp_3_mid_fu_481_p2 | exitcond_flatten_fu_439_p2);

assign tmp_21_fu_626_p1 = p_Val2_s_fu_594_p2[0:0];

assign tmp_22_fu_770_p2 = (tmp_34_fu_766_p1 | tmp_32_fu_740_p3);

assign tmp_23_fu_776_p4 = {{p_Val2_3_fu_734_p2[5:1]}};

assign tmp_24_fu_786_p3 = {{tmp_23_fu_776_p4}, {tmp_22_fu_770_p2}};

assign tmp_25_1_fu_724_p2 = ((tmp_19_fu_716_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_25_2_fu_794_p2 = ((tmp_24_fu_786_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_25_3_fu_864_p2 = ((tmp_29_fu_856_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_26_1_fu_905_p1 = qb_assign_1_1_fu_901_p2;

assign tmp_26_2_fu_924_p1 = qb_assign_1_2_fu_920_p2;

assign tmp_26_3_fu_943_p1 = qb_assign_1_3_fu_939_p2;

assign tmp_26_fu_670_p3 = p_Val2_s_46_fu_664_p2[32'd14];

assign tmp_27_fu_840_p2 = (tmp_37_fu_836_p1 | tmp_35_fu_810_p3);

assign tmp_28_fu_846_p4 = {{p_Val2_4_fu_804_p2[5:1]}};

assign tmp_29_fu_856_p3 = {{tmp_28_fu_846_p4}, {tmp_27_fu_840_p2}};

assign tmp_2_fu_419_p3 = {{tmp_fu_415_p1}, {8'd0}};

assign tmp_2_mid1_fu_511_p3 = {{tmp_7_fu_507_p1}, {8'd0}};

assign tmp_2_mid2_fu_519_p3 = ((tmp_3_mid_fu_481_p2[0:0] === 1'b1) ? tmp_2_mid1_fu_511_p3 : tmp_2_mid_fu_453_p3);

assign tmp_2_mid_fu_453_p3 = ((exitcond_flatten_fu_439_p2[0:0] === 1'b1) ? 14'd0 : tmp_2_fu_419_p3);

assign tmp_31_fu_696_p1 = p_Val2_s_46_fu_664_p2[0:0];

assign tmp_32_fu_740_p3 = p_Val2_3_fu_734_p2[32'd14];

assign tmp_34_fu_766_p1 = p_Val2_3_fu_734_p2[0:0];

assign tmp_35_fu_810_p3 = p_Val2_4_fu_804_p2[32'd14];

assign tmp_37_fu_836_p1 = p_Val2_4_fu_804_p2[0:0];

assign tmp_3_fu_475_p2 = ((sf_reg_384 == 9'd256) ? 1'b1 : 1'b0);

assign tmp_3_mid_fu_481_p2 = (tmp_3_fu_475_p2 & not_exitcond_flatten_fu_469_p2);

assign tmp_4_fu_547_p2 = (sf_cast_fu_543_p1 + tmp_2_mid2_fu_519_p3);

assign tmp_5_fu_579_p1 = tmp_4_reg_1609;

assign tmp_6_fu_553_p2 = ((sf_mid2_fu_499_p3 == 9'd255) ? 1'b1 : 1'b0);

assign tmp_7_fu_507_p1 = nm_1_fu_487_p2[5:0];

assign tmp_9_fu_600_p3 = p_Val2_s_fu_594_p2[32'd14];

assign tmp_fu_415_p1 = nm_reg_373[5:0];

assign weights22_m_weights_1_address0 = tmp_5_fu_579_p1;

assign weights22_m_weights_2_address0 = tmp_5_fu_579_p1;

assign weights22_m_weights_3_address0 = tmp_5_fu_579_p1;

assign weights22_m_weights_s_address0 = tmp_5_fu_579_p1;

endmodule //Conv1DMac_new
