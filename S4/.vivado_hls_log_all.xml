<?xml version="1.0" encoding="UTF-8"?>
<vivadoHLSLog:LogRoot xmlns:vivadoHLSLog="www.xilinx.com/vivadoHLSLog">
  <errorLogs>
    <logs>
      <synLog/>
      <simLog/>
      <mgLog/>
      <packageLog/>
      <csimLog/>
    </logs>
  </errorLogs>
  <warningLogs>
    <logs>
      <synLog>
        <logs message="WARNING: [HLS 214-111] Static variables and non-static stream cannot be used inside a dataflow region: S4/Compute.cpp:28:11" projectName="S4" solutionName="solution1" date="2023-04-29T21:58:24.667+0800" type="Warning"/>
        <logs message="WARNING: [HLS 200-40] In file included from S4/Compute.cpp:1:&#xA;In file included from S4/Compute.cpp:1:&#xA;In file included from S4/bnn-library.h:2:&#xA;In file included from /media/tukl/ee279b7d-bb8a-4a20-8bf9-90b2c542efcc/opt/Xilinx/Vivado/2018.2/common/technology/autopilot/ap_int.h:63:&#xA;/media/tukl/ee279b7d-bb8a-4a20-8bf9-90b2c542efcc/opt/Xilinx/Vivado/2018.2/common/technology/autopilot/ap_int_syn.h:3690:512: warning: comparison of unsigned expression >= 0 is always true [-Wtautological-compare]&#xA;template &lt;int _AP_W, bool _AP_S> inline __attribute__((always_inline)) ap_int_base&lt;_AP_W, _AP_S> operator &lt;&lt; (const ap_int_base&lt;_AP_W, _AP_S>&amp; op, unsigned int op2) { ap_int_base&lt;_AP_W, _AP_S> r; if (false) r.V = op2 >= 0 ? (op.V &lt;&lt; op2) : (op.V >> (-op2)); else r.V = op.V &lt;&lt; op2; return r; } template &lt;int _AP_W, bool _AP_S> inline __attribute__((always_inline)) ap_int_base&lt;_AP_W, _AP_S> operator >> (const ap_int_base&lt;_AP_W, _AP_S>&amp; op, unsigned int op2) { ap_int_base&lt;_AP_W, _AP_S> r; if (false) r.V = op2 >= 0 ? (op.V >> op2) : (op.V &lt;&lt; (-op2)); else r.V = op.V >> op2; return r; }&#x~~~ ^  ~&#xA;S4/conv1d.h:62:15: note: in instantiation of function template specialization 'operator>>&lt;32, false>' requested here&#xA;      ei = ei >> OutWidth;&#xA;              ^&#xA;S4/Compute.cpp:96:3: note: in instantiation of function template specialization 'StreamingDataWidthConverter_Batch&lt;32, 8, 32768>' requested here&#xA;  StreamingDataWidthConverter_Batch&lt;32, 8, 32768>(cnv_90PRL, cnv_91, 1);&#xA;  ^&#xA;In file included from S4/Compute.cpp:1:&#xA;In file included from S4/Compute.cpp:1:&#xA;In file included from S4/bnn-library.h:2:&#xA;In file included from /media/tukl/ee279b7d-bb8a-4a20-8bf9-90b2c542efcc/opt/Xilinx/Vivado/2018.2/common/technology/autopilot/ap_int.h:63:&#xA;/media/tukl/ee279b7d-bb8a-4a20-8bf9-90b2c542efcc/opt/Xilinx/Vivado/2018.2/common/technology/autopilot/ap_int_syn.h:3690:512: warning: comparison of unsigned expression >= 0 is always true [-Wtautological-compare]&#xA;template &lt;int _AP_W, bool _AP_S> inline __attribute__((always_inline)) ap_int_base&lt;_AP_W, _AP_S> operator &lt;&lt; (const ap_int_base&lt;_AP_W, _AP_S>&amp; op, unsigned int op2) { ap_int_base&lt;_AP_W, _AP_S> r; if (false) r.V = op2 >= 0 ? (op.V &lt;&lt; op2) : (op.V >> (-op2)); else r.V = op.V &lt;&lt; op2; return r; } template &lt;int _AP_W, bool _AP_S> inline __attribute__((always_inline)) ap_int_base&lt;_AP_W, _AP_S> operator >> (const ap_int_base&lt;_AP_W, _AP_S>&amp; op, unsigned int op2) { ap_int_base&lt;_AP_W, _AP_S> r; if (false) r.V = op2 >= 0 ? (op.V >> op2) : (op.V &lt;&lt; (-op2)); else r.V = op.V >> op2; return r; }&#x~~~ ^  ~&#xA;S4/conv1d.h:88:15: note: in instantiation of function template specialization 'operator>>&lt;8, false>' requested here&#xA;      eo = eo >> InWidth;&#xA;              ^&#xA;S4/Compute.cpp:96:3: note: in instantiation of function template specialization 'StreamingDataWidthConverter_Batch&lt;32, 8, 32768>' requested here&#xA;  StreamingDataWidthConverter_Batch&lt;32, 8, 32768>(cnv_90PRL, cnv_91, 1);&#xA;  ^&#xA;In file included from S4/Compute.cpp:1:&#xA;In file included from S4/Compute.cpp:2:&#xA;S4/conv1d.h:1964:30: warning: comparison of unsigned expression &lt; 0 is always false [-Wtautological-compare]&#xA;  for (unsigned int r = 0; r &lt; REMAINDER_PIXELS*NF; r++){&#xA;                           ~ ^ ~~~~~~~~~~~~~~~~~~~&#xA;S4/Compute.cpp:108:3: note: in instantiation of function template specialization 'StreamingMaxPool_Precision_1d&lt;512, 16, 256, 1, 32>' requested here&#xA;  StreamingMaxPool_Precision_1d&lt;512, 16, 256, 1, 32>(cnv_99, cnv_100);&#xA;  ^&#xA;3 warnings generated.\n" projectName="S4" solutionName="solution1" date="2023-04-29T21:56:41.266+0800" type="Warning"/>
      </synLog>
      <simLog/>
      <mgLog/>
      <packageLog/>
      <csimLog/>
    </logs>
  </warningLogs>
</vivadoHLSLog:LogRoot>
