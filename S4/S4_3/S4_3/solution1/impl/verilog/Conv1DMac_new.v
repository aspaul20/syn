// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv1DMac_new (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [31:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [13:0] weights24_m_weights_3_address0;
reg    weights24_m_weights_3_ce0;
wire   [7:0] weights24_m_weights_3_q0;
wire   [13:0] weights24_m_weights_2_address0;
reg    weights24_m_weights_2_ce0;
wire   [7:0] weights24_m_weights_2_q0;
wire   [13:0] weights24_m_weights_1_address0;
reg    weights24_m_weights_1_ce0;
wire   [7:0] weights24_m_weights_1_q0;
wire   [13:0] weights24_m_weights_s_address0;
reg    weights24_m_weights_s_ce0;
wire   [7:0] weights24_m_weights_s_q0;
reg    in_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten2_reg_1501;
reg   [0:0] exitcond_flatten2_reg_1501_pp0_iter1_reg;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] tmp_2_reg_1528;
reg   [0:0] tmp_2_reg_1528_pp0_iter3_reg;
reg   [19:0] indvar_flatten2_reg_281;
reg   [15:0] indvar_flatten_reg_292;
reg   [6:0] nm_reg_303;
reg   [8:0] sf_reg_314;
wire   [0:0] exitcond_flatten2_fu_357_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [19:0] indvar_flatten_next2_fu_363_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] nm_t_mid2_fu_457_p3;
reg   [5:0] nm_t_mid2_reg_1510;
reg   [5:0] nm_t_mid2_reg_1510_pp0_iter1_reg;
reg   [5:0] nm_t_mid2_reg_1510_pp0_iter2_reg;
wire   [6:0] nm_mid2_fu_465_p3;
wire   [13:0] tmp_9_fu_477_p2;
reg   [13:0] tmp_9_reg_1523;
wire   [0:0] tmp_2_fu_483_p2;
reg   [0:0] tmp_2_reg_1528_pp0_iter1_reg;
reg   [0:0] tmp_2_reg_1528_pp0_iter2_reg;
wire   [8:0] sf_1_fu_489_p2;
wire   [15:0] indvar_flatten_next_fu_501_p3;
reg   [7:0] p_Val2_1_reg_1562;
reg   [0:0] tmp_54_reg_1567;
wire   [0:0] tmp_19_fu_584_p2;
reg   [0:0] tmp_19_reg_1572;
reg   [7:0] p_Val2_1_1_reg_1577;
reg   [0:0] tmp_57_reg_1582;
wire   [0:0] tmp_19_1_fu_654_p2;
reg   [0:0] tmp_19_1_reg_1587;
reg   [7:0] p_Val2_1_2_reg_1592;
reg   [0:0] tmp_60_reg_1597;
wire   [0:0] tmp_19_2_fu_724_p2;
reg   [0:0] tmp_19_2_reg_1602;
reg   [7:0] p_Val2_1_3_reg_1607;
reg   [0:0] tmp_63_reg_1612;
wire   [0:0] tmp_19_3_fu_794_p2;
reg   [0:0] tmp_19_3_reg_1617;
wire   [7:0] p_Val2_7_fu_1041_p2;
reg   [7:0] p_Val2_7_reg_1622;
wire   [7:0] p_Val2_7_1_fu_1180_p2;
reg   [7:0] p_Val2_7_1_reg_1627;
wire   [7:0] p_Val2_7_2_fu_1319_p2;
reg   [7:0] p_Val2_7_2_reg_1632;
wire   [7:0] p_Val2_7_3_fu_1458_p2;
reg   [7:0] p_Val2_7_3_reg_1637;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
wire   [63:0] tmp_s_fu_509_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] macRegisters_0_V_2_fu_200;
wire   [7:0] macRegisters_0_V_fu_826_p2;
reg   [7:0] macRegisters_1_V_2_fu_204;
wire   [7:0] macRegisters_1_V_fu_845_p2;
reg   [7:0] macRegisters_2_V_2_fu_208;
wire   [7:0] macRegisters_2_V_fu_864_p2;
reg   [7:0] macRegisters_3_V_2_fu_212;
wire   [7:0] macRegisters_3_V_fu_883_p2;
wire   [5:0] tmp_fu_345_p1;
wire   [0:0] exitcond_flatten_fu_369_p2;
wire   [13:0] tmp_6_fu_349_p3;
wire   [0:0] tmp_33_fu_405_p2;
wire   [0:0] not_exitcond_flatten_fu_399_p2;
wire   [6:0] nm_mid_fu_375_p3;
wire   [0:0] tmp_8_mid_fu_411_p2;
wire   [0:0] tmp_5_fu_423_p2;
wire   [6:0] nm_1_fu_417_p2;
wire   [5:0] tmp_45_fu_437_p1;
wire   [13:0] tmp_6_mid1_fu_441_p3;
wire   [13:0] tmp_6_mid_fu_383_p3;
wire   [5:0] nm_t_mid_fu_391_p3;
wire   [8:0] sf_mid2_fu_429_p3;
wire   [13:0] sf_cast1_fu_473_p1;
wire   [13:0] tmp_6_mid2_fu_449_p3;
wire   [15:0] indvar_flatten_op_fu_495_p2;
wire  signed [7:0] p_Val2_s_fu_524_p0;
wire  signed [15:0] p_s_fu_516_p1;
wire  signed [7:0] p_Val2_s_fu_524_p1;
wire   [15:0] p_Val2_s_fu_524_p2;
wire   [0:0] tmp_55_fu_556_p1;
wire   [0:0] tmp_53_fu_530_p3;
wire   [4:0] tmp_35_fu_566_p4;
wire   [0:0] tmp_34_fu_560_p2;
wire   [5:0] tmp_36_fu_576_p3;
wire  signed [7:0] p_Val2_s_59_fu_594_p0;
wire  signed [7:0] p_Val2_s_59_fu_594_p1;
wire   [15:0] p_Val2_s_59_fu_594_p2;
wire   [0:0] tmp_58_fu_626_p1;
wire   [0:0] tmp_56_fu_600_p3;
wire   [4:0] tmp_38_fu_636_p4;
wire   [0:0] tmp_37_fu_630_p2;
wire   [5:0] tmp_39_fu_646_p3;
wire  signed [7:0] p_Val2_5_fu_664_p0;
wire  signed [7:0] p_Val2_5_fu_664_p1;
wire   [15:0] p_Val2_5_fu_664_p2;
wire   [0:0] tmp_61_fu_696_p1;
wire   [0:0] tmp_59_fu_670_p3;
wire   [4:0] tmp_41_fu_706_p4;
wire   [0:0] tmp_40_fu_700_p2;
wire   [5:0] tmp_42_fu_716_p3;
wire  signed [7:0] p_Val2_6_fu_734_p0;
wire  signed [7:0] p_Val2_6_fu_734_p1;
wire   [15:0] p_Val2_6_fu_734_p2;
wire   [0:0] tmp_64_fu_766_p1;
wire   [0:0] tmp_62_fu_740_p3;
wire   [4:0] tmp_44_fu_776_p4;
wire   [0:0] tmp_43_fu_770_p2;
wire   [5:0] tmp_46_fu_786_p3;
wire   [0:0] qb_assign_1_fu_812_p2;
wire   [7:0] tmp_20_fu_816_p1;
wire   [7:0] tmp1_fu_820_p2;
wire   [0:0] qb_assign_1_1_fu_831_p2;
wire   [7:0] tmp_20_1_fu_835_p1;
wire   [7:0] tmp2_fu_839_p2;
wire   [0:0] qb_assign_1_2_fu_850_p2;
wire   [7:0] tmp_20_2_fu_854_p1;
wire   [7:0] tmp3_fu_858_p2;
wire   [0:0] qb_assign_1_3_fu_869_p2;
wire   [7:0] tmp_20_3_fu_873_p1;
wire   [7:0] tmp4_fu_877_p2;
wire   [7:0] tmp_47_fu_908_p66;
wire   [7:0] tmp_48_fu_1047_p66;
wire   [7:0] tmp_49_fu_1186_p66;
wire   [7:0] tmp_50_fu_1325_p66;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

Conv1DMac_new_weiibs #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights24_m_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights24_m_weights_3_address0),
    .ce0(weights24_m_weights_3_ce0),
    .q0(weights24_m_weights_3_q0)
);

Conv1DMac_new_weijbC #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights24_m_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights24_m_weights_2_address0),
    .ce0(weights24_m_weights_2_ce0),
    .q0(weights24_m_weights_2_q0)
);

Conv1DMac_new_weikbM #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights24_m_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights24_m_weights_1_address0),
    .ce0(weights24_m_weights_1_ce0),
    .q0(weights24_m_weights_1_q0)
);

Conv1DMac_new_weilbW #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
weights24_m_weights_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights24_m_weights_s_address0),
    .ce0(weights24_m_weights_s_ce0),
    .q0(weights24_m_weights_s_q0)
);

computeS4_3_mux_6g8j_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS4_3_mux_6g8j_x_U26(
    .din0(8'd7),
    .din1(8'd0),
    .din2(8'd13),
    .din3(8'd21),
    .din4(8'd0),
    .din5(8'd255),
    .din6(8'd11),
    .din7(8'd8),
    .din8(8'd10),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd8),
    .din12(8'd8),
    .din13(8'd5),
    .din14(8'd3),
    .din15(8'd3),
    .din16(8'd14),
    .din17(8'd4),
    .din18(8'd6),
    .din19(8'd19),
    .din20(8'd2),
    .din21(8'd8),
    .din22(8'd252),
    .din23(8'd9),
    .din24(8'd14),
    .din25(8'd11),
    .din26(8'd12),
    .din27(8'd22),
    .din28(8'd247),
    .din29(8'd8),
    .din30(8'd12),
    .din31(8'd26),
    .din32(8'd9),
    .din33(8'd8),
    .din34(8'd7),
    .din35(8'd13),
    .din36(8'd19),
    .din37(8'd1),
    .din38(8'd3),
    .din39(8'd1),
    .din40(8'd254),
    .din41(8'd11),
    .din42(8'd16),
    .din43(8'd18),
    .din44(8'd8),
    .din45(8'd5),
    .din46(8'd11),
    .din47(8'd15),
    .din48(8'd1),
    .din49(8'd6),
    .din50(8'd11),
    .din51(8'd0),
    .din52(8'd2),
    .din53(8'd19),
    .din54(8'd7),
    .din55(8'd255),
    .din56(8'd251),
    .din57(8'd18),
    .din58(8'd5),
    .din59(8'd253),
    .din60(8'd6),
    .din61(8'd8),
    .din62(8'd16),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1510_pp0_iter2_reg),
    .dout(tmp_47_fu_908_p66)
);

computeS4_3_mux_6g8j_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS4_3_mux_6g8j_x_U27(
    .din0(8'd0),
    .din1(8'd25),
    .din2(8'd8),
    .din3(8'd18),
    .din4(8'd0),
    .din5(8'd13),
    .din6(8'd7),
    .din7(8'd9),
    .din8(8'd251),
    .din9(8'd0),
    .din10(8'd5),
    .din11(8'd254),
    .din12(8'd2),
    .din13(8'd7),
    .din14(8'd0),
    .din15(8'd8),
    .din16(8'd0),
    .din17(8'd11),
    .din18(8'd15),
    .din19(8'd2),
    .din20(8'd32),
    .din21(8'd25),
    .din22(8'd7),
    .din23(8'd15),
    .din24(8'd12),
    .din25(8'd6),
    .din26(8'd0),
    .din27(8'd8),
    .din28(8'd3),
    .din29(8'd5),
    .din30(8'd9),
    .din31(8'd10),
    .din32(8'd1),
    .din33(8'd12),
    .din34(8'd0),
    .din35(8'd5),
    .din36(8'd30),
    .din37(8'd23),
    .din38(8'd251),
    .din39(8'd28),
    .din40(8'd13),
    .din41(8'd7),
    .din42(8'd3),
    .din43(8'd11),
    .din44(8'd13),
    .din45(8'd14),
    .din46(8'd14),
    .din47(8'd10),
    .din48(8'd254),
    .din49(8'd15),
    .din50(8'd21),
    .din51(8'd249),
    .din52(8'd6),
    .din53(8'd0),
    .din54(8'd9),
    .din55(8'd7),
    .din56(8'd0),
    .din57(8'd19),
    .din58(8'd7),
    .din59(8'd22),
    .din60(8'd10),
    .din61(8'd8),
    .din62(8'd6),
    .din63(8'd11),
    .din64(nm_t_mid2_reg_1510_pp0_iter2_reg),
    .dout(tmp_48_fu_1047_p66)
);

computeS4_3_mux_6g8j_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS4_3_mux_6g8j_x_U28(
    .din0(8'd9),
    .din1(8'd0),
    .din2(8'd4),
    .din3(8'd7),
    .din4(8'd12),
    .din5(8'd1),
    .din6(8'd17),
    .din7(8'd9),
    .din8(8'd12),
    .din9(8'd13),
    .din10(8'd22),
    .din11(8'd1),
    .din12(8'd18),
    .din13(8'd8),
    .din14(8'd14),
    .din15(8'd10),
    .din16(8'd10),
    .din17(8'd23),
    .din18(8'd9),
    .din19(8'd21),
    .din20(8'd28),
    .din21(8'd9),
    .din22(8'd4),
    .din23(8'd12),
    .din24(8'd6),
    .din25(8'd0),
    .din26(8'd1),
    .din27(8'd0),
    .din28(8'd4),
    .din29(8'd10),
    .din30(8'd8),
    .din31(8'd0),
    .din32(8'd4),
    .din33(8'd2),
    .din34(8'd4),
    .din35(8'd0),
    .din36(8'd17),
    .din37(8'd0),
    .din38(8'd253),
    .din39(8'd254),
    .din40(8'd5),
    .din41(8'd4),
    .din42(8'd3),
    .din43(8'd13),
    .din44(8'd23),
    .din45(8'd0),
    .din46(8'd0),
    .din47(8'd5),
    .din48(8'd11),
    .din49(8'd0),
    .din50(8'd3),
    .din51(8'd0),
    .din52(8'd1),
    .din53(8'd1),
    .din54(8'd9),
    .din55(8'd11),
    .din56(8'd4),
    .din57(8'd9),
    .din58(8'd9),
    .din59(8'd15),
    .din60(8'd4),
    .din61(8'd18),
    .din62(8'd3),
    .din63(8'd27),
    .din64(nm_t_mid2_reg_1510_pp0_iter2_reg),
    .dout(tmp_49_fu_1186_p66)
);

computeS4_3_mux_6g8j_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
computeS4_3_mux_6g8j_x_U29(
    .din0(8'd9),
    .din1(8'd8),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd9),
    .din5(8'd11),
    .din6(8'd16),
    .din7(8'd14),
    .din8(8'd13),
    .din9(8'd10),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd9),
    .din13(8'd1),
    .din14(8'd7),
    .din15(8'd4),
    .din16(8'd11),
    .din17(8'd3),
    .din18(8'd4),
    .din19(8'd5),
    .din20(8'd3),
    .din21(8'd24),
    .din22(8'd11),
    .din23(8'd24),
    .din24(8'd10),
    .din25(8'd5),
    .din26(8'd22),
    .din27(8'd0),
    .din28(8'd254),
    .din29(8'd3),
    .din30(8'd0),
    .din31(8'd8),
    .din32(8'd2),
    .din33(8'd10),
    .din34(8'd13),
    .din35(8'd3),
    .din36(8'd0),
    .din37(8'd6),
    .din38(8'd15),
    .din39(8'd6),
    .din40(8'd9),
    .din41(8'd0),
    .din42(8'd7),
    .din43(8'd7),
    .din44(8'd9),
    .din45(8'd21),
    .din46(8'd3),
    .din47(8'd4),
    .din48(8'd29),
    .din49(8'd18),
    .din50(8'd12),
    .din51(8'd2),
    .din52(8'd21),
    .din53(8'd9),
    .din54(8'd13),
    .din55(8'd5),
    .din56(8'd4),
    .din57(8'd18),
    .din58(8'd6),
    .din59(8'd1),
    .din60(8'd8),
    .din61(8'd11),
    .din62(8'd4),
    .din63(8'd0),
    .din64(nm_t_mid2_reg_1510_pp0_iter2_reg),
    .dout(tmp_50_fu_1325_p66)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_fu_357_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten2_reg_281 <= indvar_flatten_next2_fu_363_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten2_reg_281 <= 20'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_fu_357_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_292 <= indvar_flatten_next_fu_501_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_292 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_reg_1528_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_0_V_2_fu_200 <= macRegisters_0_V_fu_826_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_2_reg_1528_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_0_V_2_fu_200 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_reg_1528_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_1_V_2_fu_204 <= macRegisters_1_V_fu_845_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_2_reg_1528_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_1_V_2_fu_204 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_reg_1528_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_2_V_2_fu_208 <= macRegisters_2_V_fu_864_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_2_reg_1528_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_2_V_2_fu_208 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_reg_1528_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_3_V_2_fu_212 <= macRegisters_3_V_fu_883_p2;
    end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_2_reg_1528_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macRegisters_3_V_2_fu_212 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_fu_357_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nm_reg_303 <= nm_mid2_fu_465_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nm_reg_303 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_fu_357_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sf_reg_314 <= sf_1_fu_489_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sf_reg_314 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten2_reg_1501 <= exitcond_flatten2_fu_357_p2;
        exitcond_flatten2_reg_1501_pp0_iter1_reg <= exitcond_flatten2_reg_1501;
        nm_t_mid2_reg_1510_pp0_iter1_reg <= nm_t_mid2_reg_1510;
        tmp_2_reg_1528_pp0_iter1_reg <= tmp_2_reg_1528;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_fu_357_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nm_t_mid2_reg_1510 <= nm_t_mid2_fu_457_p3;
        tmp_2_reg_1528 <= tmp_2_fu_483_p2;
        tmp_9_reg_1523 <= tmp_9_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        nm_t_mid2_reg_1510_pp0_iter2_reg <= nm_t_mid2_reg_1510_pp0_iter1_reg;
        tmp_2_reg_1528_pp0_iter2_reg <= tmp_2_reg_1528_pp0_iter1_reg;
        tmp_2_reg_1528_pp0_iter3_reg <= tmp_2_reg_1528_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_1501_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_1_1_reg_1577 <= {{p_Val2_s_59_fu_594_p2[14:7]}};
        p_Val2_1_2_reg_1592 <= {{p_Val2_5_fu_664_p2[14:7]}};
        p_Val2_1_3_reg_1607 <= {{p_Val2_6_fu_734_p2[14:7]}};
        p_Val2_1_reg_1562 <= {{p_Val2_s_fu_524_p2[14:7]}};
        tmp_19_1_reg_1587 <= tmp_19_1_fu_654_p2;
        tmp_19_2_reg_1602 <= tmp_19_2_fu_724_p2;
        tmp_19_3_reg_1617 <= tmp_19_3_fu_794_p2;
        tmp_19_reg_1572 <= tmp_19_fu_584_p2;
        tmp_54_reg_1567 <= p_Val2_s_fu_524_p2[32'd6];
        tmp_57_reg_1582 <= p_Val2_s_59_fu_594_p2[32'd6];
        tmp_60_reg_1597 <= p_Val2_5_fu_664_p2[32'd6];
        tmp_63_reg_1612 <= p_Val2_6_fu_734_p2[32'd6];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_reg_1528_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_7_1_reg_1627 <= p_Val2_7_1_fu_1180_p2;
        p_Val2_7_2_reg_1632 <= p_Val2_7_2_fu_1319_p2;
        p_Val2_7_3_reg_1637 <= p_Val2_7_3_fu_1458_p2;
        p_Val2_7_reg_1622 <= p_Val2_7_fu_1041_p2;
    end
end

always @ (*) begin
    if ((exitcond_flatten2_fu_357_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_reg_1501_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_reg_1501_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_2_reg_1528_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_2_reg_1528_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights24_m_weights_1_ce0 = 1'b1;
    end else begin
        weights24_m_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights24_m_weights_2_ce0 = 1'b1;
    end else begin
        weights24_m_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights24_m_weights_3_ce0 = 1'b1;
    end else begin
        weights24_m_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights24_m_weights_s_ce0 = 1'b1;
    end else begin
        weights24_m_weights_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten2_fu_357_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten2_fu_357_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_2_reg_1528_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten2_reg_1501_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_2_reg_1528_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten2_reg_1501_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_2_reg_1528_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten2_reg_1501_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((exitcond_flatten2_reg_1501_pp0_iter1_reg == 1'd0) & (in_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((tmp_2_reg_1528_pp0_iter3_reg == 1'd1) & (out_V_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign exitcond_flatten2_fu_357_p2 = ((indvar_flatten2_reg_281 == 20'd524288) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_369_p2 = ((indvar_flatten_reg_292 == 16'd16384) ? 1'b1 : 1'b0);

assign indvar_flatten_next2_fu_363_p2 = (20'd1 + indvar_flatten2_reg_281);

assign indvar_flatten_next_fu_501_p3 = ((exitcond_flatten_fu_369_p2[0:0] === 1'b1) ? 16'd1 : indvar_flatten_op_fu_495_p2);

assign indvar_flatten_op_fu_495_p2 = (indvar_flatten_reg_292 + 16'd1);

assign macRegisters_0_V_fu_826_p2 = (p_Val2_1_reg_1562 + tmp1_fu_820_p2);

assign macRegisters_1_V_fu_845_p2 = (p_Val2_1_1_reg_1577 + tmp2_fu_839_p2);

assign macRegisters_2_V_fu_864_p2 = (p_Val2_1_2_reg_1592 + tmp3_fu_858_p2);

assign macRegisters_3_V_fu_883_p2 = (p_Val2_1_3_reg_1607 + tmp4_fu_877_p2);

assign nm_1_fu_417_p2 = (7'd1 + nm_mid_fu_375_p3);

assign nm_mid2_fu_465_p3 = ((tmp_8_mid_fu_411_p2[0:0] === 1'b1) ? nm_1_fu_417_p2 : nm_mid_fu_375_p3);

assign nm_mid_fu_375_p3 = ((exitcond_flatten_fu_369_p2[0:0] === 1'b1) ? 7'd0 : nm_reg_303);

assign nm_t_mid2_fu_457_p3 = ((tmp_8_mid_fu_411_p2[0:0] === 1'b1) ? tmp_45_fu_437_p1 : nm_t_mid_fu_391_p3);

assign nm_t_mid_fu_391_p3 = ((exitcond_flatten_fu_369_p2[0:0] === 1'b1) ? 6'd0 : tmp_fu_345_p1);

assign not_exitcond_flatten_fu_399_p2 = (exitcond_flatten_fu_369_p2 ^ 1'd1);

assign out_V_V_din = {{{{p_Val2_7_3_reg_1637}, {p_Val2_7_2_reg_1632}}, {p_Val2_7_1_reg_1627}}, {p_Val2_7_reg_1622}};

assign p_Val2_5_fu_664_p0 = p_s_fu_516_p1;

assign p_Val2_5_fu_664_p1 = weights24_m_weights_1_q0;

assign p_Val2_5_fu_664_p2 = ($signed(p_Val2_5_fu_664_p0) * $signed(p_Val2_5_fu_664_p1));

assign p_Val2_6_fu_734_p0 = p_s_fu_516_p1;

assign p_Val2_6_fu_734_p1 = weights24_m_weights_s_q0;

assign p_Val2_6_fu_734_p2 = ($signed(p_Val2_6_fu_734_p0) * $signed(p_Val2_6_fu_734_p1));

assign p_Val2_7_1_fu_1180_p2 = (macRegisters_1_V_fu_845_p2 + tmp_48_fu_1047_p66);

assign p_Val2_7_2_fu_1319_p2 = (macRegisters_2_V_fu_864_p2 + tmp_49_fu_1186_p66);

assign p_Val2_7_3_fu_1458_p2 = (macRegisters_3_V_fu_883_p2 + tmp_50_fu_1325_p66);

assign p_Val2_7_fu_1041_p2 = (macRegisters_0_V_fu_826_p2 + tmp_47_fu_908_p66);

assign p_Val2_s_59_fu_594_p0 = p_s_fu_516_p1;

assign p_Val2_s_59_fu_594_p1 = weights24_m_weights_2_q0;

assign p_Val2_s_59_fu_594_p2 = ($signed(p_Val2_s_59_fu_594_p0) * $signed(p_Val2_s_59_fu_594_p1));

assign p_Val2_s_fu_524_p0 = p_s_fu_516_p1;

assign p_Val2_s_fu_524_p1 = weights24_m_weights_3_q0;

assign p_Val2_s_fu_524_p2 = ($signed(p_Val2_s_fu_524_p0) * $signed(p_Val2_s_fu_524_p1));

assign p_s_fu_516_p1 = $signed(in_V_V_dout);

assign qb_assign_1_1_fu_831_p2 = (tmp_57_reg_1582 & tmp_19_1_reg_1587);

assign qb_assign_1_2_fu_850_p2 = (tmp_60_reg_1597 & tmp_19_2_reg_1602);

assign qb_assign_1_3_fu_869_p2 = (tmp_63_reg_1612 & tmp_19_3_reg_1617);

assign qb_assign_1_fu_812_p2 = (tmp_54_reg_1567 & tmp_19_reg_1572);

assign sf_1_fu_489_p2 = (sf_mid2_fu_429_p3 + 9'd1);

assign sf_cast1_fu_473_p1 = sf_mid2_fu_429_p3;

assign sf_mid2_fu_429_p3 = ((tmp_5_fu_423_p2[0:0] === 1'b1) ? 9'd0 : sf_reg_314);

assign start_out = real_start;

assign tmp1_fu_820_p2 = (tmp_20_fu_816_p1 + macRegisters_0_V_2_fu_200);

assign tmp2_fu_839_p2 = (tmp_20_1_fu_835_p1 + macRegisters_1_V_2_fu_204);

assign tmp3_fu_858_p2 = (tmp_20_2_fu_854_p1 + macRegisters_2_V_2_fu_208);

assign tmp4_fu_877_p2 = (tmp_20_3_fu_873_p1 + macRegisters_3_V_2_fu_212);

assign tmp_19_1_fu_654_p2 = ((tmp_39_fu_646_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_19_2_fu_724_p2 = ((tmp_42_fu_716_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_19_3_fu_794_p2 = ((tmp_46_fu_786_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_19_fu_584_p2 = ((tmp_36_fu_576_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_20_1_fu_835_p1 = qb_assign_1_1_fu_831_p2;

assign tmp_20_2_fu_854_p1 = qb_assign_1_2_fu_850_p2;

assign tmp_20_3_fu_873_p1 = qb_assign_1_3_fu_869_p2;

assign tmp_20_fu_816_p1 = qb_assign_1_fu_812_p2;

assign tmp_2_fu_483_p2 = ((sf_mid2_fu_429_p3 == 9'd255) ? 1'b1 : 1'b0);

assign tmp_33_fu_405_p2 = ((sf_reg_314 == 9'd256) ? 1'b1 : 1'b0);

assign tmp_34_fu_560_p2 = (tmp_55_fu_556_p1 | tmp_53_fu_530_p3);

assign tmp_35_fu_566_p4 = {{p_Val2_s_fu_524_p2[5:1]}};

assign tmp_36_fu_576_p3 = {{tmp_35_fu_566_p4}, {tmp_34_fu_560_p2}};

assign tmp_37_fu_630_p2 = (tmp_58_fu_626_p1 | tmp_56_fu_600_p3);

assign tmp_38_fu_636_p4 = {{p_Val2_s_59_fu_594_p2[5:1]}};

assign tmp_39_fu_646_p3 = {{tmp_38_fu_636_p4}, {tmp_37_fu_630_p2}};

assign tmp_40_fu_700_p2 = (tmp_61_fu_696_p1 | tmp_59_fu_670_p3);

assign tmp_41_fu_706_p4 = {{p_Val2_5_fu_664_p2[5:1]}};

assign tmp_42_fu_716_p3 = {{tmp_41_fu_706_p4}, {tmp_40_fu_700_p2}};

assign tmp_43_fu_770_p2 = (tmp_64_fu_766_p1 | tmp_62_fu_740_p3);

assign tmp_44_fu_776_p4 = {{p_Val2_6_fu_734_p2[5:1]}};

assign tmp_45_fu_437_p1 = nm_1_fu_417_p2[5:0];

assign tmp_46_fu_786_p3 = {{tmp_44_fu_776_p4}, {tmp_43_fu_770_p2}};

assign tmp_53_fu_530_p3 = p_Val2_s_fu_524_p2[32'd15];

assign tmp_55_fu_556_p1 = p_Val2_s_fu_524_p2[0:0];

assign tmp_56_fu_600_p3 = p_Val2_s_59_fu_594_p2[32'd15];

assign tmp_58_fu_626_p1 = p_Val2_s_59_fu_594_p2[0:0];

assign tmp_59_fu_670_p3 = p_Val2_5_fu_664_p2[32'd15];

assign tmp_5_fu_423_p2 = (tmp_8_mid_fu_411_p2 | exitcond_flatten_fu_369_p2);

assign tmp_61_fu_696_p1 = p_Val2_5_fu_664_p2[0:0];

assign tmp_62_fu_740_p3 = p_Val2_6_fu_734_p2[32'd15];

assign tmp_64_fu_766_p1 = p_Val2_6_fu_734_p2[0:0];

assign tmp_6_fu_349_p3 = {{tmp_fu_345_p1}, {8'd0}};

assign tmp_6_mid1_fu_441_p3 = {{tmp_45_fu_437_p1}, {8'd0}};

assign tmp_6_mid2_fu_449_p3 = ((tmp_8_mid_fu_411_p2[0:0] === 1'b1) ? tmp_6_mid1_fu_441_p3 : tmp_6_mid_fu_383_p3);

assign tmp_6_mid_fu_383_p3 = ((exitcond_flatten_fu_369_p2[0:0] === 1'b1) ? 14'd0 : tmp_6_fu_349_p3);

assign tmp_8_mid_fu_411_p2 = (tmp_33_fu_405_p2 & not_exitcond_flatten_fu_399_p2);

assign tmp_9_fu_477_p2 = (sf_cast1_fu_473_p1 + tmp_6_mid2_fu_449_p3);

assign tmp_fu_345_p1 = nm_reg_303[5:0];

assign tmp_s_fu_509_p1 = tmp_9_reg_1523;

assign weights24_m_weights_1_address0 = tmp_s_fu_509_p1;

assign weights24_m_weights_2_address0 = tmp_s_fu_509_p1;

assign weights24_m_weights_3_address0 = tmp_s_fu_509_p1;

assign weights24_m_weights_s_address0 = tmp_s_fu_509_p1;

endmodule //Conv1DMac_new
