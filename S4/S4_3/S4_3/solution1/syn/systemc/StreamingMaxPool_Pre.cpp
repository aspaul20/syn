// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "StreamingMaxPool_Pre.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic StreamingMaxPool_Pre::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic StreamingMaxPool_Pre::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> StreamingMaxPool_Pre::ap_ST_fsm_state1 = "1";
const sc_lv<7> StreamingMaxPool_Pre::ap_ST_fsm_state2 = "10";
const sc_lv<7> StreamingMaxPool_Pre::ap_ST_fsm_state3 = "100";
const sc_lv<7> StreamingMaxPool_Pre::ap_ST_fsm_pp1_stage0 = "1000";
const sc_lv<7> StreamingMaxPool_Pre::ap_ST_fsm_state6 = "10000";
const sc_lv<7> StreamingMaxPool_Pre::ap_ST_fsm_pp2_stage0 = "100000";
const sc_lv<7> StreamingMaxPool_Pre::ap_ST_fsm_state9 = "1000000";
const bool StreamingMaxPool_Pre::ap_const_boolean_1 = true;
const sc_lv<32> StreamingMaxPool_Pre::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> StreamingMaxPool_Pre::ap_const_lv32_3 = "11";
const bool StreamingMaxPool_Pre::ap_const_boolean_0 = false;
const sc_lv<1> StreamingMaxPool_Pre::ap_const_lv1_0 = "0";
const sc_lv<32> StreamingMaxPool_Pre::ap_const_lv32_5 = "101";
const sc_lv<32> StreamingMaxPool_Pre::ap_const_lv32_1 = "1";
const sc_lv<32> StreamingMaxPool_Pre::ap_const_lv32_2 = "10";
const sc_lv<1> StreamingMaxPool_Pre::ap_const_lv1_1 = "1";
const sc_lv<32> StreamingMaxPool_Pre::ap_const_lv32_4 = "100";
const sc_lv<9> StreamingMaxPool_Pre::ap_const_lv9_0 = "000000000";
const sc_lv<14> StreamingMaxPool_Pre::ap_const_lv14_0 = "00000000000000";
const sc_lv<8> StreamingMaxPool_Pre::ap_const_lv8_0 = "00000000";
const sc_lv<9> StreamingMaxPool_Pre::ap_const_lv9_100 = "100000000";
const sc_lv<9> StreamingMaxPool_Pre::ap_const_lv9_1 = "1";
const sc_lv<14> StreamingMaxPool_Pre::ap_const_lv14_2000 = "10000000000000";
const sc_lv<14> StreamingMaxPool_Pre::ap_const_lv14_1 = "1";
const sc_lv<32> StreamingMaxPool_Pre::ap_const_lv32_6 = "110";

StreamingMaxPool_Pre::StreamingMaxPool_Pre(sc_module_name name) : sc_module(name), mVcdFile(0) {
    buf_0_V_U = new StreamingMaxPool_mb6("buf_0_V_U");
    buf_0_V_U->clk(ap_clk);
    buf_0_V_U->reset(ap_rst);
    buf_0_V_U->address0(buf_0_V_address0);
    buf_0_V_U->ce0(buf_0_V_ce0);
    buf_0_V_U->we0(buf_0_V_we0);
    buf_0_V_U->d0(ap_var_for_const0);
    buf_0_V_U->q0(buf_0_V_q0);
    buf_0_V_U->address1(buf_0_V_address1);
    buf_0_V_U->ce1(buf_0_V_ce1);
    buf_0_V_U->we1(buf_0_V_we1);
    buf_0_V_U->d1(in_V_V_dout);
    buf_0_V_U->q1(buf_0_V_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_flatten_reg_259 );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_flatten_reg_259 );

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_01001);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( tmp_7_reg_282 );

    SC_METHOD(thread_ap_block_pp2_stage0_11001);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( tmp_7_reg_282 );

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( tmp_7_reg_282 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state4_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state5_pp1_stage0_iter1);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( exitcond_flatten_reg_259 );

    SC_METHOD(thread_ap_block_state7_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state8_pp2_stage0_iter1);
    sensitive << ( out_V_V_full_n );
    sensitive << ( tmp_7_reg_282 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state4);
    sensitive << ( exitcond_flatten_fu_191_p2 );

    SC_METHOD(thread_ap_condition_pp2_exit_iter0_state7);
    sensitive << ( tmp_7_fu_234_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_buf_0_V_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( buf_0_V_addr_1_reg_291 );
    sensitive << ( tmp_1_fu_186_p1 );
    sensitive << ( tmp_6_fu_217_p1 );

    SC_METHOD(thread_buf_0_V_address1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( buf_0_V_addr_2_reg_268 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( tmp_8_fu_246_p1 );

    SC_METHOD(thread_buf_0_V_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_buf_0_V_ce1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_buf_0_V_we0);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( tmp_7_reg_282 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( tmp_fu_174_p2 );

    SC_METHOD(thread_buf_0_V_we1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( tmp_9_fu_228_p2 );

    SC_METHOD(thread_ch4_mid2_fu_209_p3);
    sensitive << ( ch4_reg_152 );
    sensitive << ( tmp_s_fu_203_p2 );

    SC_METHOD(thread_ch_1_fu_180_p2);
    sensitive << ( ch_reg_130 );

    SC_METHOD(thread_ch_2_fu_240_p2);
    sensitive << ( ch6_reg_163 );

    SC_METHOD(thread_ch_3_fu_222_p2);
    sensitive << ( ch4_mid2_fu_209_p3 );

    SC_METHOD(thread_exitcond_flatten_fu_191_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( indvar_flatten_reg_141 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_in_V_V_blk_n);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_flatten_reg_259 );

    SC_METHOD(thread_in_V_V_read);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_flatten_reg_259 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_indvar_flatten_next_fu_197_p2);
    sensitive << ( indvar_flatten_reg_141 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_out_V_V_blk_n);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( tmp_7_reg_282 );

    SC_METHOD(thread_out_V_V_din);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( tmp_7_reg_282 );
    sensitive << ( buf_0_V_q1 );
    sensitive << ( ap_block_pp2_stage0_01001 );

    SC_METHOD(thread_out_V_V_write);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( tmp_7_reg_282 );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_1_fu_186_p1);
    sensitive << ( ch_reg_130 );

    SC_METHOD(thread_tmp_6_fu_217_p1);
    sensitive << ( ch4_mid2_fu_209_p3 );

    SC_METHOD(thread_tmp_7_fu_234_p2);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ch6_reg_163 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_tmp_8_fu_246_p1);
    sensitive << ( ch6_reg_163 );

    SC_METHOD(thread_tmp_9_fu_228_p2);
    sensitive << ( in_V_V_dout );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_flatten_reg_259 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( buf_0_V_q0 );

    SC_METHOD(thread_tmp_fu_174_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ch_reg_130 );

    SC_METHOD(thread_tmp_s_fu_203_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ch4_reg_152 );
    sensitive << ( exitcond_flatten_fu_191_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_191_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_7_fu_234_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp2_stage0_subdone );
    sensitive << ( tmp_fu_174_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000001";
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "StreamingMaxPool_Pre_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_V_V_dout, "(port)in_V_V_dout");
    sc_trace(mVcdFile, in_V_V_empty_n, "(port)in_V_V_empty_n");
    sc_trace(mVcdFile, in_V_V_read, "(port)in_V_V_read");
    sc_trace(mVcdFile, out_V_V_din, "(port)out_V_V_din");
    sc_trace(mVcdFile, out_V_V_full_n, "(port)out_V_V_full_n");
    sc_trace(mVcdFile, out_V_V_write, "(port)out_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, in_V_V_blk_n, "in_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, exitcond_flatten_reg_259, "exitcond_flatten_reg_259");
    sc_trace(mVcdFile, out_V_V_blk_n, "out_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, tmp_7_reg_282, "tmp_7_reg_282");
    sc_trace(mVcdFile, indvar_flatten_reg_141, "indvar_flatten_reg_141");
    sc_trace(mVcdFile, ch4_reg_152, "ch4_reg_152");
    sc_trace(mVcdFile, ch6_reg_163, "ch6_reg_163");
    sc_trace(mVcdFile, ch_1_fu_180_p2, "ch_1_fu_180_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond_flatten_fu_191_p2, "exitcond_flatten_fu_191_p2");
    sc_trace(mVcdFile, ap_block_state4_pp1_stage0_iter0, "ap_block_state4_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp1_stage0_iter1, "ap_block_state5_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_next_fu_197_p2, "indvar_flatten_next_fu_197_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, buf_0_V_addr_2_reg_268, "buf_0_V_addr_2_reg_268");
    sc_trace(mVcdFile, ch_3_fu_222_p2, "ch_3_fu_222_p2");
    sc_trace(mVcdFile, tmp_7_fu_234_p2, "tmp_7_fu_234_p2");
    sc_trace(mVcdFile, ap_block_state7_pp2_stage0_iter0, "ap_block_state7_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp2_stage0_iter1, "ap_block_state8_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, ch_2_fu_240_p2, "ch_2_fu_240_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, buf_0_V_addr_1_reg_291, "buf_0_V_addr_1_reg_291");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state4, "ap_condition_pp1_exit_iter0_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp2_exit_iter0_state7, "ap_condition_pp2_exit_iter0_state7");
    sc_trace(mVcdFile, buf_0_V_address0, "buf_0_V_address0");
    sc_trace(mVcdFile, buf_0_V_ce0, "buf_0_V_ce0");
    sc_trace(mVcdFile, buf_0_V_we0, "buf_0_V_we0");
    sc_trace(mVcdFile, buf_0_V_q0, "buf_0_V_q0");
    sc_trace(mVcdFile, buf_0_V_address1, "buf_0_V_address1");
    sc_trace(mVcdFile, buf_0_V_ce1, "buf_0_V_ce1");
    sc_trace(mVcdFile, buf_0_V_we1, "buf_0_V_we1");
    sc_trace(mVcdFile, buf_0_V_q1, "buf_0_V_q1");
    sc_trace(mVcdFile, ch_reg_130, "ch_reg_130");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_fu_174_p2, "tmp_fu_174_p2");
    sc_trace(mVcdFile, tmp_1_fu_186_p1, "tmp_1_fu_186_p1");
    sc_trace(mVcdFile, tmp_6_fu_217_p1, "tmp_6_fu_217_p1");
    sc_trace(mVcdFile, tmp_8_fu_246_p1, "tmp_8_fu_246_p1");
    sc_trace(mVcdFile, ap_block_pp2_stage0_01001, "ap_block_pp2_stage0_01001");
    sc_trace(mVcdFile, tmp_9_fu_228_p2, "tmp_9_fu_228_p2");
    sc_trace(mVcdFile, tmp_s_fu_203_p2, "tmp_s_fu_203_p2");
    sc_trace(mVcdFile, ch4_mid2_fu_209_p3, "ch4_mid2_fu_209_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
#endif

    }
}

StreamingMaxPool_Pre::~StreamingMaxPool_Pre() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete buf_0_V_U;
}

void StreamingMaxPool_Pre::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv8_0;
}

void StreamingMaxPool_Pre::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state4.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state4.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state4.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state7.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state7.read()))) {
            ap_enable_reg_pp2_iter1 = (ap_condition_pp2_exit_iter0_state7.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read())) {
            ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ch4_reg_152 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_191_p2.read()))) {
        ch4_reg_152 = ch_3_fu_222_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ch6_reg_163 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_234_p2.read()))) {
        ch6_reg_163 = ch_2_fu_240_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_fu_174_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ch_reg_130 = ch_1_fu_180_p2.read();
    } else if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ch_reg_130 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        indvar_flatten_reg_141 = ap_const_lv14_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_191_p2.read()))) {
        indvar_flatten_reg_141 = indvar_flatten_next_fu_197_p2.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_234_p2.read()))) {
        buf_0_V_addr_1_reg_291 =  (sc_lv<8>) (tmp_8_fu_246_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_191_p2.read()))) {
        buf_0_V_addr_2_reg_268 =  (sc_lv<8>) (tmp_6_fu_217_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_259 = exitcond_flatten_fu_191_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_7_reg_282 = tmp_7_fu_234_p2.read();
    }
}

void StreamingMaxPool_Pre::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[3];
}

void StreamingMaxPool_Pre::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[5];
}

void StreamingMaxPool_Pre::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void StreamingMaxPool_Pre::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void StreamingMaxPool_Pre::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void StreamingMaxPool_Pre::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[4];
}

void StreamingMaxPool_Pre::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[6];
}

void StreamingMaxPool_Pre::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void StreamingMaxPool_Pre::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_259.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()));
}

void StreamingMaxPool_Pre::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_259.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()));
}

void StreamingMaxPool_Pre::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void StreamingMaxPool_Pre::thread_ap_block_pp2_stage0_01001() {
    ap_block_pp2_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_282.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()));
}

void StreamingMaxPool_Pre::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_282.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()));
}

void StreamingMaxPool_Pre::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_282.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()));
}

void StreamingMaxPool_Pre::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void StreamingMaxPool_Pre::thread_ap_block_state4_pp1_stage0_iter0() {
    ap_block_state4_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void StreamingMaxPool_Pre::thread_ap_block_state5_pp1_stage0_iter1() {
    ap_block_state5_pp1_stage0_iter1 = (esl_seteq<1,1,1>(exitcond_flatten_reg_259.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()));
}

void StreamingMaxPool_Pre::thread_ap_block_state7_pp2_stage0_iter0() {
    ap_block_state7_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void StreamingMaxPool_Pre::thread_ap_block_state8_pp2_stage0_iter1() {
    ap_block_state8_pp2_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_282.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()));
}

void StreamingMaxPool_Pre::thread_ap_condition_pp1_exit_iter0_state4() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_191_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state4 = ap_const_logic_0;
    }
}

void StreamingMaxPool_Pre::thread_ap_condition_pp2_exit_iter0_state7() {
    if (esl_seteq<1,1,1>(tmp_7_fu_234_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp2_exit_iter0_state7 = ap_const_logic_1;
    } else {
        ap_condition_pp2_exit_iter0_state7 = ap_const_logic_0;
    }
}

void StreamingMaxPool_Pre::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void StreamingMaxPool_Pre::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void StreamingMaxPool_Pre::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void StreamingMaxPool_Pre::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void StreamingMaxPool_Pre::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void StreamingMaxPool_Pre::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void StreamingMaxPool_Pre::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void StreamingMaxPool_Pre::thread_buf_0_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0))) {
        buf_0_V_address0 = buf_0_V_addr_1_reg_291.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1))) {
        buf_0_V_address0 =  (sc_lv<8>) (tmp_6_fu_217_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        buf_0_V_address0 =  (sc_lv<8>) (tmp_1_fu_186_p1.read());
    } else {
        buf_0_V_address0 = "XXXXXXXX";
    }
}

void StreamingMaxPool_Pre::thread_buf_0_V_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1))) {
        buf_0_V_address1 =  (sc_lv<8>) (tmp_8_fu_246_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        buf_0_V_address1 = buf_0_V_addr_2_reg_268.read();
    } else {
        buf_0_V_address1 = "XXXXXXXX";
    }
}

void StreamingMaxPool_Pre::thread_buf_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0)))) {
        buf_0_V_ce0 = ap_const_logic_1;
    } else {
        buf_0_V_ce0 = ap_const_logic_0;
    }
}

void StreamingMaxPool_Pre::thread_buf_0_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        buf_0_V_ce1 = ap_const_logic_1;
    } else {
        buf_0_V_ce1 = ap_const_logic_0;
    }
}

void StreamingMaxPool_Pre::thread_buf_0_V_we0() {
    if (((esl_seteq<1,1,1>(tmp_fu_174_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_282.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0)))) {
        buf_0_V_we0 = ap_const_logic_1;
    } else {
        buf_0_V_we0 = ap_const_logic_0;
    }
}

void StreamingMaxPool_Pre::thread_buf_0_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_228_p2.read()))) {
        buf_0_V_we1 = ap_const_logic_1;
    } else {
        buf_0_V_we1 = ap_const_logic_0;
    }
}

void StreamingMaxPool_Pre::thread_ch4_mid2_fu_209_p3() {
    ch4_mid2_fu_209_p3 = (!tmp_s_fu_203_p2.read()[0].is_01())? sc_lv<9>(): ((tmp_s_fu_203_p2.read()[0].to_bool())? ap_const_lv9_0: ch4_reg_152.read());
}

void StreamingMaxPool_Pre::thread_ch_1_fu_180_p2() {
    ch_1_fu_180_p2 = (!ch_reg_130.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(ch_reg_130.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void StreamingMaxPool_Pre::thread_ch_2_fu_240_p2() {
    ch_2_fu_240_p2 = (!ch6_reg_163.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(ch6_reg_163.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void StreamingMaxPool_Pre::thread_ch_3_fu_222_p2() {
    ch_3_fu_222_p2 = (!ch4_mid2_fu_209_p3.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(ch4_mid2_fu_209_p3.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void StreamingMaxPool_Pre::thread_exitcond_flatten_fu_191_p2() {
    exitcond_flatten_fu_191_p2 = (!indvar_flatten_reg_141.read().is_01() || !ap_const_lv14_2000.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_141.read() == ap_const_lv14_2000);
}

void StreamingMaxPool_Pre::thread_in_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_259.read(), ap_const_lv1_0))) {
        in_V_V_blk_n = in_V_V_empty_n.read();
    } else {
        in_V_V_blk_n = ap_const_logic_1;
    }
}

void StreamingMaxPool_Pre::thread_in_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_259.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        in_V_V_read = ap_const_logic_1;
    } else {
        in_V_V_read = ap_const_logic_0;
    }
}

void StreamingMaxPool_Pre::thread_indvar_flatten_next_fu_197_p2() {
    indvar_flatten_next_fu_197_p2 = (!indvar_flatten_reg_141.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(indvar_flatten_reg_141.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void StreamingMaxPool_Pre::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void StreamingMaxPool_Pre::thread_out_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_282.read()))) {
        out_V_V_blk_n = out_V_V_full_n.read();
    } else {
        out_V_V_blk_n = ap_const_logic_1;
    }
}

void StreamingMaxPool_Pre::thread_out_V_V_din() {
    out_V_V_din = buf_0_V_q1.read();
}

void StreamingMaxPool_Pre::thread_out_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_282.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        out_V_V_write = ap_const_logic_1;
    } else {
        out_V_V_write = ap_const_logic_0;
    }
}

void StreamingMaxPool_Pre::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void StreamingMaxPool_Pre::thread_start_out() {
    start_out = real_start.read();
}

void StreamingMaxPool_Pre::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void StreamingMaxPool_Pre::thread_tmp_1_fu_186_p1() {
    tmp_1_fu_186_p1 = esl_zext<64,9>(ch_reg_130.read());
}

void StreamingMaxPool_Pre::thread_tmp_6_fu_217_p1() {
    tmp_6_fu_217_p1 = esl_zext<64,9>(ch4_mid2_fu_209_p3.read());
}

void StreamingMaxPool_Pre::thread_tmp_7_fu_234_p2() {
    tmp_7_fu_234_p2 = (!ch6_reg_163.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(ch6_reg_163.read() == ap_const_lv9_100);
}

void StreamingMaxPool_Pre::thread_tmp_8_fu_246_p1() {
    tmp_8_fu_246_p1 = esl_zext<64,9>(ch6_reg_163.read());
}

void StreamingMaxPool_Pre::thread_tmp_9_fu_228_p2() {
    tmp_9_fu_228_p2 = (!in_V_V_dout.read().is_01() || !buf_0_V_q0.read().is_01())? sc_lv<1>(): (sc_biguint<8>(in_V_V_dout.read()) > sc_biguint<8>(buf_0_V_q0.read()));
}

void StreamingMaxPool_Pre::thread_tmp_fu_174_p2() {
    tmp_fu_174_p2 = (!ch_reg_130.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(ch_reg_130.read() == ap_const_lv9_100);
}

void StreamingMaxPool_Pre::thread_tmp_s_fu_203_p2() {
    tmp_s_fu_203_p2 = (!ch4_reg_152.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(ch4_reg_152.read() == ap_const_lv9_100);
}

void StreamingMaxPool_Pre::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_fu_174_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 8 : 
            if (!(esl_seteq<1,1,1>(exitcond_flatten_fu_191_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(exitcond_flatten_fu_191_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            break;
        case 32 : 
            if (!(esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read()) && esl_seteq<1,1,1>(tmp_7_fu_234_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if ((esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp2_stage0_subdone.read()) && esl_seteq<1,1,1>(tmp_7_fu_234_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

