# This script segment is generated automatically by AutoPilot

set id 127
set name computeS1_mux_164DeQ_x_x_x_x
set corename simcore_mux
set op mux
set stage_num 1
set max_latency -1
set registered_input 1
set din0_width 8
set din0_signed 0
set din1_width 8
set din1_signed 0
set din2_width 8
set din2_signed 0
set din3_width 8
set din3_signed 0
set din4_width 8
set din4_signed 0
set din5_width 8
set din5_signed 0
set din6_width 8
set din6_signed 0
set din7_width 8
set din7_signed 0
set din8_width 8
set din8_signed 0
set din9_width 8
set din9_signed 0
set din10_width 8
set din10_signed 0
set din11_width 8
set din11_signed 0
set din12_width 8
set din12_signed 0
set din13_width 8
set din13_signed 0
set din14_width 8
set din14_signed 1
set din15_width 8
set din15_signed 1
set din16_width 4
set din16_signed 0
set dout_width 8
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mux] == "ap_gen_simcore_mux"} {
eval "ap_gen_simcore_mux { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    din0_width ${din0_width} \
    din0_signed ${din0_signed} \
    din1_width ${din1_width} \
    din1_signed ${din1_signed} \
    din2_width ${din2_width} \
    din2_signed ${din2_signed} \
    din3_width ${din3_width} \
    din3_signed ${din3_signed} \
    din4_width ${din4_width} \
    din4_signed ${din4_signed} \
    din5_width ${din5_width} \
    din5_signed ${din5_signed} \
    din6_width ${din6_width} \
    din6_signed ${din6_signed} \
    din7_width ${din7_width} \
    din7_signed ${din7_signed} \
    din8_width ${din8_width} \
    din8_signed ${din8_signed} \
    din9_width ${din9_width} \
    din9_signed ${din9_signed} \
    din10_width ${din10_width} \
    din10_signed ${din10_signed} \
    din11_width ${din11_width} \
    din11_signed ${din11_signed} \
    din12_width ${din12_width} \
    din12_signed ${din12_signed} \
    din13_width ${din13_width} \
    din13_signed ${din13_signed} \
    din14_width ${din14_width} \
    din14_signed ${din14_signed} \
    din15_width ${din15_width} \
    din15_signed ${din15_signed} \
    din16_width ${din16_width} \
    din16_signed ${din16_signed} \
    dout_width ${dout_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mux, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mux
set corename MuxnS
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_pipemux] == "::AESL_LIB_VIRTEX::xil_gen_pipemux"} {
eval "::AESL_LIB_VIRTEX::xil_gen_pipemux { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    din0_width ${din0_width} \
    din0_signed ${din0_signed} \
    din1_width ${din1_width} \
    din1_signed ${din1_signed} \
    din2_width ${din2_width} \
    din2_signed ${din2_signed} \
    din3_width ${din3_width} \
    din3_signed ${din3_signed} \
    din4_width ${din4_width} \
    din4_signed ${din4_signed} \
    din5_width ${din5_width} \
    din5_signed ${din5_signed} \
    din6_width ${din6_width} \
    din6_signed ${din6_signed} \
    din7_width ${din7_width} \
    din7_signed ${din7_signed} \
    din8_width ${din8_width} \
    din8_signed ${din8_signed} \
    din9_width ${din9_width} \
    din9_signed ${din9_signed} \
    din10_width ${din10_width} \
    din10_signed ${din10_signed} \
    din11_width ${din11_width} \
    din11_signed ${din11_signed} \
    din12_width ${din12_width} \
    din12_signed ${din12_signed} \
    din13_width ${din13_width} \
    din13_signed ${din13_signed} \
    din14_width ${din14_width} \
    din14_signed ${din14_signed} \
    din15_width ${din15_width} \
    din15_signed ${din15_signed} \
    din16_width ${din16_width} \
    din16_signed ${din16_signed} \
    dout_width ${dout_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_pipemux, check your platform lib"
}
}


set id 129
set name computeS1_mux_164DeQ_x_x_x_x
set corename simcore_mux
set op mux
set stage_num 1
set max_latency -1
set registered_input 1
set din0_width 8
set din0_signed 0
set din1_width 8
set din1_signed 0
set din2_width 8
set din2_signed 0
set din3_width 8
set din3_signed 0
set din4_width 8
set din4_signed 0
set din5_width 8
set din5_signed 0
set din6_width 8
set din6_signed 0
set din7_width 8
set din7_signed 0
set din8_width 8
set din8_signed 0
set din9_width 8
set din9_signed 0
set din10_width 8
set din10_signed 0
set din11_width 8
set din11_signed 0
set din12_width 8
set din12_signed 0
set din13_width 8
set din13_signed 0
set din14_width 8
set din14_signed 1
set din15_width 8
set din15_signed 1
set din16_width 4
set din16_signed 0
set dout_width 8
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mux] == "ap_gen_simcore_mux"} {
eval "ap_gen_simcore_mux { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    din0_width ${din0_width} \
    din0_signed ${din0_signed} \
    din1_width ${din1_width} \
    din1_signed ${din1_signed} \
    din2_width ${din2_width} \
    din2_signed ${din2_signed} \
    din3_width ${din3_width} \
    din3_signed ${din3_signed} \
    din4_width ${din4_width} \
    din4_signed ${din4_signed} \
    din5_width ${din5_width} \
    din5_signed ${din5_signed} \
    din6_width ${din6_width} \
    din6_signed ${din6_signed} \
    din7_width ${din7_width} \
    din7_signed ${din7_signed} \
    din8_width ${din8_width} \
    din8_signed ${din8_signed} \
    din9_width ${din9_width} \
    din9_signed ${din9_signed} \
    din10_width ${din10_width} \
    din10_signed ${din10_signed} \
    din11_width ${din11_width} \
    din11_signed ${din11_signed} \
    din12_width ${din12_width} \
    din12_signed ${din12_signed} \
    din13_width ${din13_width} \
    din13_signed ${din13_signed} \
    din14_width ${din14_width} \
    din14_signed ${din14_signed} \
    din15_width ${din15_width} \
    din15_signed ${din15_signed} \
    din16_width ${din16_width} \
    din16_signed ${din16_signed} \
    dout_width ${dout_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mux, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mux
set corename MuxnS
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_pipemux] == "::AESL_LIB_VIRTEX::xil_gen_pipemux"} {
eval "::AESL_LIB_VIRTEX::xil_gen_pipemux { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    din0_width ${din0_width} \
    din0_signed ${din0_signed} \
    din1_width ${din1_width} \
    din1_signed ${din1_signed} \
    din2_width ${din2_width} \
    din2_signed ${din2_signed} \
    din3_width ${din3_width} \
    din3_signed ${din3_signed} \
    din4_width ${din4_width} \
    din4_signed ${din4_signed} \
    din5_width ${din5_width} \
    din5_signed ${din5_signed} \
    din6_width ${din6_width} \
    din6_signed ${din6_signed} \
    din7_width ${din7_width} \
    din7_signed ${din7_signed} \
    din8_width ${din8_width} \
    din8_signed ${din8_signed} \
    din9_width ${din9_width} \
    din9_signed ${din9_signed} \
    din10_width ${din10_width} \
    din10_signed ${din10_signed} \
    din11_width ${din11_width} \
    din11_signed ${din11_signed} \
    din12_width ${din12_width} \
    din12_signed ${din12_signed} \
    din13_width ${din13_width} \
    din13_signed ${din13_signed} \
    din14_width ${din14_width} \
    din14_signed ${din14_signed} \
    din15_width ${din15_width} \
    din15_signed ${din15_signed} \
    din16_width ${din16_width} \
    din16_signed ${din16_signed} \
    dout_width ${dout_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_pipemux, check your platform lib"
}
}


set id 130
set name computeS1_mux_164DeQ_x_x_x_x
set corename simcore_mux
set op mux
set stage_num 1
set max_latency -1
set registered_input 1
set din0_width 8
set din0_signed 0
set din1_width 8
set din1_signed 0
set din2_width 8
set din2_signed 0
set din3_width 8
set din3_signed 0
set din4_width 8
set din4_signed 0
set din5_width 8
set din5_signed 0
set din6_width 8
set din6_signed 0
set din7_width 8
set din7_signed 0
set din8_width 8
set din8_signed 0
set din9_width 8
set din9_signed 0
set din10_width 8
set din10_signed 0
set din11_width 8
set din11_signed 0
set din12_width 8
set din12_signed 0
set din13_width 8
set din13_signed 0
set din14_width 8
set din14_signed 1
set din15_width 8
set din15_signed 1
set din16_width 4
set din16_signed 0
set dout_width 8
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mux] == "ap_gen_simcore_mux"} {
eval "ap_gen_simcore_mux { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    din0_width ${din0_width} \
    din0_signed ${din0_signed} \
    din1_width ${din1_width} \
    din1_signed ${din1_signed} \
    din2_width ${din2_width} \
    din2_signed ${din2_signed} \
    din3_width ${din3_width} \
    din3_signed ${din3_signed} \
    din4_width ${din4_width} \
    din4_signed ${din4_signed} \
    din5_width ${din5_width} \
    din5_signed ${din5_signed} \
    din6_width ${din6_width} \
    din6_signed ${din6_signed} \
    din7_width ${din7_width} \
    din7_signed ${din7_signed} \
    din8_width ${din8_width} \
    din8_signed ${din8_signed} \
    din9_width ${din9_width} \
    din9_signed ${din9_signed} \
    din10_width ${din10_width} \
    din10_signed ${din10_signed} \
    din11_width ${din11_width} \
    din11_signed ${din11_signed} \
    din12_width ${din12_width} \
    din12_signed ${din12_signed} \
    din13_width ${din13_width} \
    din13_signed ${din13_signed} \
    din14_width ${din14_width} \
    din14_signed ${din14_signed} \
    din15_width ${din15_width} \
    din15_signed ${din15_signed} \
    din16_width ${din16_width} \
    din16_signed ${din16_signed} \
    dout_width ${dout_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mux, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mux
set corename MuxnS
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_pipemux] == "::AESL_LIB_VIRTEX::xil_gen_pipemux"} {
eval "::AESL_LIB_VIRTEX::xil_gen_pipemux { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    din0_width ${din0_width} \
    din0_signed ${din0_signed} \
    din1_width ${din1_width} \
    din1_signed ${din1_signed} \
    din2_width ${din2_width} \
    din2_signed ${din2_signed} \
    din3_width ${din3_width} \
    din3_signed ${din3_signed} \
    din4_width ${din4_width} \
    din4_signed ${din4_signed} \
    din5_width ${din5_width} \
    din5_signed ${din5_signed} \
    din6_width ${din6_width} \
    din6_signed ${din6_signed} \
    din7_width ${din7_width} \
    din7_signed ${din7_signed} \
    din8_width ${din8_width} \
    din8_signed ${din8_signed} \
    din9_width ${din9_width} \
    din9_signed ${din9_signed} \
    din10_width ${din10_width} \
    din10_signed ${din10_signed} \
    din11_width ${din11_width} \
    din11_signed ${din11_signed} \
    din12_width ${din12_width} \
    din12_signed ${din12_signed} \
    din13_width ${din13_width} \
    din13_signed ${din13_signed} \
    din14_width ${din14_width} \
    din14_signed ${din14_signed} \
    din15_width ${din15_width} \
    din15_signed ${din15_signed} \
    din16_width ${din16_width} \
    din16_signed ${din16_signed} \
    dout_width ${dout_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_pipemux, check your platform lib"
}
}


# Memory (RAM/ROM)  definition:
set ID 134
set hasByteEnable 0
set MemName Conv1DMac_new_1_wVhK
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 5
set AddrRange 1024
set AddrWd 10
set TrueReset 0
set IsROM 1
set ROMData {}
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.771
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 135
set hasByteEnable 0
set MemName Conv1DMac_new_1_wWhU
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 5
set AddrRange 1024
set AddrWd 10
set TrueReset 0
set IsROM 1
set ROMData { "00000" "00000" "00000" "00000" "00001" "11110" "00000" "11111" "00000" "00000" "00000" "00011" "00000" "00001" "11010" "00000" "00110" "11010" "11111" "11110" "00010" "11111" "00000" "00000" "00000" "00000" "00001" "11111" "11111" "11111" "00010" "11011" "11101" "00100" "00101" "00000" "11111" "11110" "11100" "00011" "11110" "11101" "00000" "00010" "00001" "00000" "00010" "00000" "00000" "00000" "00100" "11110" "00011" "00000" "00100" "00001" "00000" "00010" "11110" "00000" "00000" "00011" "00000" "00000" "00000" "00000" "00000" "00000" "00101" "00011" "00000" "00001" "00000" "00000" "00000" "00001" "00000" "00101" "00011" "00000" "00000" "00100" "00011" "00001" "00111" "11100" "00000" "00000" "00000" "00000" "00011" "11111" "00000" "00110" "00101" "11011" "00100" "00001" "00000" "01000" "00000" "00101" "00100" "11110" "11110" "11011" "00000" "00000" "00010" "00101" "00111" "11101" "00000" "00000" "11100" "00001" "11011" "00000" "00011" "01000" "00101" "11111" "11110" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00101" "01110" "00000" "00010" "00000" "00000" "00000" "11010" "00000" "00001" "01000" "00000" "00011" "11101" "00001" "10101" "00000" "00001" "00000" "00001" "00000" "00000" "00001" "01111" "00101" "11100" "00001" "11010" "11110" "00011" "00011" "11110" "00100" "00000" "00111" "11011" "10111" "01011" "00000" "00001" "00010" "00001" "00000" "11110" "00000" "00000" "01000" "00011" "00110" "00000" "00010" "00000" "00001" "01000" "11110" "00000" "00000" "11011" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00011" "00110" "00000" "00010" "00000" "00000" "00000" "00010" "00000" "00101" "00000" "00000" "00001" "00001" "00000" "00010" "00111" "00000" "00000" "00011" "00000" "00000" "00011" "11111" "11111" "00111" "00110" "00000" "00101" "00001" "11110" "00111" "00001" "00011" "00011" "11101" "11111" "11011" "00000" "00011" "00100" "00110" "00111" "11101" "00000" "00000" "11100" "00010" "11110" "00000" "00100" "00111" "00110" "11111" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "11110" "00000" "00000" "00000" "00000" "00000" "11010" "00000" "00000" "11101" "00000" "00000" "00001" "10101" "00001" "00000" "11010" "00000" "01100" "00000" "00000" "11111" "00000" "01001" "00011" "00100" "11101" "00001" "11100" "00011" "11101" "01011" "00001" "10111" "11101" "00001" "11011" "00000" "00000" "01000" "00100" "11110" "00111" "00000" "00000" "00001" "11111" "11111" "00000" "00010" "11110" "00101" "00010" "11110" "00000" "00000" "00100" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00010" "11101" "00000" "11111" "00000" "00000" "00000" "00110" "00000" "00010" "10110" "00000" "01010" "10111" "11111" "11110" "00011" "11111" "00000" "11111" "00000" "00000" "00010" "11110" "11110" "11111" "00011" "11000" "11100" "00111" "01001" "00000" "11110" "11100" "11010" "00110" "11101" "11011" "00000" "00010" "00001" "00000" "00011" "00000" "00000" "00000" "00101" "11101" "00101" "00000" "00111" "00010" "00000" "00100" "11101" "00000" "00000" "00101" "00000" "00000" "00000" "00000" "00000" "00000" "00010" "11100" "00000" "00000" "00000" "00000" "00000" "10111" "00000" "00000" "11011" "00000" "00000" "00100" "10101" "00010" "00000" "10101" "00000" "01101" "00000" "00000" "11111" "00000" "01101" "00011" "00101" "11011" "00000" "11100" "00101" "11100" "01100" "00010" "10111" "11101" "11111" "11001" "00000" "11111" "01000" "00100" "11111" "01000" "00000" "00000" "00010" "11111" "11110" "00000" "00011" "11110" "00101" "00100" "11110" "00000" "00000" "00110" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.771
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 136
set hasByteEnable 0
set MemName Conv1DMac_new_1_wXh4
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 5
set AddrRange 1024
set AddrWd 10
set TrueReset 0
set IsROM 1
set ROMData { "00000" "00000" "00000" "00000" "00101" "00100" "00000" "00001" "00000" "00000" "00000" "00001" "00000" "00101" "00010" "00000" "00000" "00100" "00011" "00010" "01000" "11101" "00000" "00000" "00000" "00000" "00011" "11111" "00000" "00111" "00110" "11100" "00100" "00001" "00000" "01000" "00000" "00101" "00100" "11101" "11101" "11010" "00000" "00001" "00011" "00101" "01000" "11100" "00000" "00000" "11011" "00001" "11100" "00000" "00100" "01000" "00101" "11111" "11111" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00010" "00010" "00000" "00001" "00000" "00000" "00000" "00000" "00000" "00010" "00001" "00000" "00000" "00010" "00010" "00001" "00100" "11111" "00000" "00000" "00000" "00000" "00010" "00000" "00000" "00011" "00011" "11110" "00010" "00001" "00000" "00100" "00000" "00010" "00010" "11111" "11111" "11101" "00000" "00000" "00001" "00010" "00100" "11110" "00000" "00000" "11110" "00001" "11111" "00000" "00010" "00100" "00010" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "11110" "11111" "00000" "01010" "00000" "00000" "00000" "00001" "00000" "00111" "00011" "00000" "11111" "11011" "00001" "11110" "00010" "00001" "00000" "11111" "00000" "00000" "00110" "11101" "00011" "00010" "11110" "00011" "11011" "11110" "00000" "00000" "11110" "00101" "00000" "00011" "00100" "11011" "00000" "10111" "00000" "00101" "00010" "00000" "00000" "00000" "00001" "00100" "00100" "00000" "11110" "00010" "00011" "00100" "00111" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00010" "11110" "00000" "11111" "00000" "00000" "00000" "00100" "00000" "00001" "11001" "00000" "00111" "11001" "11111" "11110" "00010" "11111" "00000" "11111" "00000" "00000" "00010" "11111" "11111" "11111" "00010" "11010" "11101" "00110" "00111" "00000" "11110" "11101" "11100" "00100" "11110" "11100" "00000" "00010" "00001" "00000" "00010" "00000" "00000" "00000" "00100" "11110" "00100" "00000" "00101" "00010" "00000" "00011" "11110" "00000" "00000" "00011" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "11101" "11101" "00000" "01110" "00000" "00000" "00000" "00010" "00000" "01010" "00101" "00000" "11110" "11000" "00001" "11101" "00010" "00010" "00000" "11111" "00000" "00000" "01001" "11110" "00011" "00011" "11101" "00101" "11010" "11101" "00000" "00000" "11100" "01000" "11111" "00011" "00111" "11001" "00000" "10011" "00000" "00111" "00010" "00001" "00000" "00000" "00001" "00111" "00110" "00000" "11101" "00010" "00100" "00101" "01010" "00000" "00000" "11111" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00001" "11111" "00000" "00000" "00000" "00000" "00000" "00010" "00000" "00001" "11100" "00000" "00100" "11101" "11111" "11111" "00001" "11111" "00000" "00000" "00000" "00000" "00001" "11111" "11111" "11111" "00001" "11100" "11110" "00011" "00100" "00000" "11111" "11110" "11110" "00010" "11111" "11110" "00000" "00001" "00000" "00000" "00001" "00000" "00000" "00000" "00010" "11111" "00010" "00000" "00011" "00001" "00000" "00010" "11110" "00000" "00000" "00010" "00000" "00000" "00000" "00000" "00000" "00000" "11111" "00000" "00000" "00111" "00000" "00000" "00000" "00001" "00000" "00101" "00010" "00000" "11111" "11100" "00000" "11111" "00001" "00010" "00000" "00000" "00000" "00000" "00100" "11110" "00001" "00010" "11111" "00011" "11101" "11111" "11111" "00000" "11110" "00011" "11111" "00010" "00100" "11101" "00000" "11011" "00001" "00100" "00001" "00001" "00000" "00000" "00001" "00011" "00011" "00000" "11111" "00001" "00011" "00010" "00100" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00101" "00010" "00000" "00001" "00000" "00000" "00000" "00001" "00000" "00100" "00010" "00000" "00000" "00011" "00011" "00001" "00111" "11100" "00000" "00001" "00000" "00000" "00010" "00001" "00000" "00101" "00101" "11100" "00101" "00001" "00000" "01001" "00010" "00101" "00011" "11011" "11110" "11010" "00000" "00001" "00010" "00101" "00111" "11100" "00000" "00000" "11011" "00001" "11100" "00000" "00011" "00111" "00101" "11111" "11111" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "00000" "01001" "10110" "00000" "11100" "00000" "00000" "00000" "11010" "00000" "00010" "00100" "00000" "00011" "00111" "01101" "11111" "00110" "10010" "00000" "11011" "00000" "00000" "00010" "00100" "01001" "11111" "00101" "10101" "11110" "00000" "01011" "00101" "00100" "01011" "00000" "11000" "10111" "00000" "00000" "10111" "11110" "00000" "00111" "11100" "00000" "00000" "11011" "11111" "00011" "00000" "00110" "00111" "00000" "00000" "11110" "00000" "00000" "00100" "00000" "00000" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.771
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 137
set hasByteEnable 0
set MemName Conv1DMac_new_1_wYie
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 6
set AddrRange 1024
set AddrWd 10
set TrueReset 0
set IsROM 1
set ROMData {}
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.771
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 138 \
    name in_V_V \
    type fifo \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_in_V_V \
    op interface \
    ports { in_V_V_dout { I 8 vector } in_V_V_empty_n { I 1 bit } in_V_V_read { O 1 bit } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 139 \
    name out_V_V \
    type fifo \
    dir O \
    reset_level 1 \
    sync_rst true \
    corename dc_out_V_V \
    op interface \
    ports { out_V_V_din { O 32 vector } out_V_V_full_n { I 1 bit } out_V_V_write { O 1 bit } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_done { O 1 bit } ap_idle { O 1 bit } ap_continue { I 1 bit } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -2 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


