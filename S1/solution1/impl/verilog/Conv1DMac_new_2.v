// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv1DMac_new_2 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state6 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [31:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [4:0] weights0_m_weights_V_address0;
reg    weights0_m_weights_V_ce0;
wire   [5:0] weights0_m_weights_V_q0;
wire   [4:0] weights0_m_weights_V_1_address0;
reg    weights0_m_weights_V_1_ce0;
wire   [5:0] weights0_m_weights_V_1_q0;
wire   [4:0] weights0_m_weights_V_2_address0;
reg    weights0_m_weights_V_2_ce0;
wire   [5:0] weights0_m_weights_V_2_q0;
wire   [4:0] weights0_m_weights_V_3_address0;
reg    weights0_m_weights_V_3_ce0;
wire   [5:0] weights0_m_weights_V_3_q0;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten6_reg_1530;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] tmp_106_reg_1569;
reg   [0:0] tmp_106_reg_1569_pp0_iter2_reg;
reg   [13:0] indvar_flatten6_reg_225;
reg   [5:0] indvar_flatten_reg_236;
reg   [3:0] nm_reg_247;
reg   [1:0] sf_reg_258;
wire   [0:0] exitcond_flatten6_fu_555_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten6_reg_1530_pp0_iter1_reg;
wire   [13:0] indvar_flatten_next6_fu_561_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] newSel57_cast_mid2_fu_829_p3;
reg   [5:0] newSel57_cast_mid2_reg_1539;
reg   [5:0] newSel57_cast_mid2_reg_1539_pp0_iter1_reg;
reg   [5:0] newSel57_cast_mid2_reg_1539_pp0_iter2_reg;
wire   [5:0] newSel71_cast_mid2_fu_875_p3;
reg   [5:0] newSel71_cast_mid2_reg_1544;
reg   [5:0] newSel71_cast_mid2_reg_1544_pp0_iter1_reg;
reg   [5:0] newSel71_cast_mid2_reg_1544_pp0_iter2_reg;
wire   [5:0] newSel85_cast_mid2_fu_939_p3;
reg   [5:0] newSel85_cast_mid2_reg_1549;
reg   [5:0] newSel85_cast_mid2_reg_1549_pp0_iter1_reg;
reg   [5:0] newSel85_cast_mid2_reg_1549_pp0_iter2_reg;
wire   [5:0] newSel99_cast_mid2_fu_979_p3;
reg   [5:0] newSel99_cast_mid2_reg_1554;
reg   [5:0] newSel99_cast_mid2_reg_1554_pp0_iter1_reg;
reg   [5:0] newSel99_cast_mid2_reg_1554_pp0_iter2_reg;
wire   [3:0] nm_mid2_fu_987_p3;
wire   [5:0] tmp_104_fu_999_p2;
reg   [5:0] tmp_104_reg_1564;
wire   [0:0] tmp_106_fu_1005_p2;
reg   [0:0] tmp_106_reg_1569_pp0_iter1_reg;
wire   [1:0] sf_2_fu_1011_p2;
wire   [5:0] indvar_flatten_next_fu_1023_p3;
reg   [7:0] tmp_V_reg_1583;
reg   [6:0] tmp_115_reg_1608;
wire   [0:0] qb_assign_3_fu_1115_p2;
reg   [0:0] qb_assign_3_reg_1613;
reg   [6:0] tmp_123_reg_1618;
wire   [0:0] qb_assign_3_1_fu_1191_p2;
reg   [0:0] qb_assign_3_1_reg_1623;
reg   [6:0] tmp_129_reg_1628;
wire   [0:0] qb_assign_3_2_fu_1267_p2;
reg   [0:0] qb_assign_3_2_reg_1633;
reg   [6:0] tmp_135_reg_1638;
wire   [0:0] qb_assign_3_3_fu_1343_p2;
reg   [0:0] qb_assign_3_3_reg_1643;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire   [63:0] tmp_105_fu_1034_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] macRegisters_0_V_4_fu_144;
wire   [7:0] macRegisters_0_V_fu_1385_p2;
reg   [7:0] macRegisters_1_V_4_fu_148;
wire   [7:0] macRegisters_1_V_fu_1403_p2;
reg   [7:0] macRegisters_2_V_4_fu_152;
wire   [7:0] macRegisters_2_V_fu_1421_p2;
reg   [7:0] macRegisters_3_V_4_fu_156;
wire   [7:0] macRegisters_3_V_fu_1439_p2;
wire   [2:0] tmp_fu_293_p1;
wire   [4:0] p_shl_fu_297_p3;
wire   [5:0] p_shl_cast_fu_305_p1;
wire   [5:0] nm_cast1_fu_289_p1;
wire   [0:0] tmp_109_fu_351_p2;
wire   [0:0] tmp_108_fu_345_p2;
wire   [0:0] tmp_107_fu_339_p2;
wire   [0:0] tmp_102_fu_333_p2;
wire   [0:0] tmp_101_fu_327_p2;
wire   [0:0] tmp_100_fu_321_p2;
wire   [0:0] tmp_99_fu_315_p2;
wire   [0:0] tmp_110_fu_357_p2;
wire   [5:0] newSel_fu_375_p3;
wire   [5:0] newSel1_fu_383_p3;
wire   [0:0] tmp_111_fu_363_p2;
wire   [0:0] tmp_112_fu_369_p2;
wire   [5:0] newSel2_fu_391_p3;
wire   [5:0] newSel3_fu_399_p3;
wire   [0:0] or_cond_fu_415_p2;
wire   [5:0] newSel4_fu_407_p3;
wire   [5:0] newSel5_fu_421_p3;
wire   [5:0] newSel7_fu_437_p3;
wire   [0:0] tmp_113_fu_453_p2;
wire   [5:0] newSel8_fu_445_p3;
wire   [5:0] newSel9_fu_459_p3;
wire   [5:0] newSel11_fu_475_p3;
wire   [5:0] newSel12_fu_483_p3;
wire   [5:0] newSel13_fu_491_p3;
wire   [5:0] newSel14_fu_499_p3;
wire   [5:0] newSel15_fu_507_p3;
wire   [5:0] newSel16_fu_515_p3;
wire   [5:0] newSel18_fu_531_p3;
wire   [5:0] newSel93_cast_cast_fu_539_p3;
wire   [0:0] exitcond_flatten_fu_567_p2;
wire   [5:0] tmp_s_fu_309_p2;
wire   [5:0] newSel6_fu_429_p3;
wire   [5:0] newSel10_fu_467_p3;
wire   [5:0] newSel17_fu_523_p3;
wire   [0:0] tmp_633_fu_621_p2;
wire   [5:0] newSel20_fu_613_p3;
wire   [5:0] newSel19_fu_547_p3;
wire   [0:0] tmp_357_fu_641_p2;
wire   [0:0] not_exitcond_flatten_fu_635_p2;
wire   [3:0] nm_mid_fu_573_p3;
wire   [0:0] tmp_103_mid_fu_647_p2;
wire   [0:0] tmp_358_fu_659_p2;
wire   [3:0] nm_2_fu_653_p2;
wire   [2:0] tmp_634_fu_677_p1;
wire   [4:0] p_shl_mid1_fu_681_p3;
wire   [5:0] p_shl_cast_mid1_fu_689_p1;
wire   [5:0] nm_cast1_mid1_fu_673_p1;
wire   [5:0] tmp_102_mid1_fu_693_p2;
wire   [5:0] tmp_102_mid_fu_581_p3;
wire   [0:0] tmp_292_mid1_fu_743_p2;
wire   [0:0] tmp_291_mid1_fu_737_p2;
wire   [0:0] tmp_290_mid1_fu_731_p2;
wire   [0:0] tmp_289_mid1_fu_725_p2;
wire   [0:0] tmp_288_mid1_fu_719_p2;
wire   [0:0] tmp_287_mid1_fu_713_p2;
wire   [0:0] tmp_286_mid1_fu_707_p2;
wire   [0:0] tmp_293_mid1_fu_749_p2;
wire   [5:0] newSel_mid1_fu_767_p3;
wire   [5:0] newSel1_mid1_fu_775_p3;
wire   [0:0] tmp_294_mid1_fu_755_p2;
wire   [0:0] tmp_295_mid1_fu_761_p2;
wire   [5:0] newSel2_mid1_fu_783_p3;
wire   [5:0] newSel3_mid1_fu_791_p3;
wire   [0:0] or_cond_mid1_fu_807_p2;
wire   [5:0] newSel4_mid1_fu_799_p3;
wire   [5:0] newSel5_mid1_fu_813_p3;
wire   [5:0] newSel6_mid1_fu_821_p3;
wire   [5:0] newSel57_cast_mid_fu_589_p3;
wire   [5:0] newSel7_mid1_fu_837_p3;
wire   [0:0] tmp_308_mid1_fu_853_p2;
wire   [5:0] newSel8_mid1_fu_845_p3;
wire   [5:0] newSel9_mid1_fu_859_p3;
wire   [5:0] newSel10_mid1_fu_867_p3;
wire   [5:0] newSel71_cast_mid_fu_597_p3;
wire   [5:0] newSel11_mid1_fu_883_p3;
wire   [5:0] newSel12_mid1_fu_891_p3;
wire   [5:0] newSel13_mid1_fu_899_p3;
wire   [5:0] newSel14_mid1_fu_907_p3;
wire   [5:0] newSel15_mid1_fu_915_p3;
wire   [5:0] newSel16_mid1_fu_923_p3;
wire   [5:0] newSel17_mid1_fu_931_p3;
wire   [5:0] newSel85_cast_mid_fu_605_p3;
wire   [5:0] newSel18_mid1_fu_947_p3;
wire   [5:0] newSel93_cast_mid1_c_fu_955_p3;
wire   [5:0] newSel19_mid1_fu_963_p3;
wire   [5:0] newSel20_mid1_fu_971_p3;
wire   [5:0] newSel99_cast_mid_fu_627_p3;
wire   [1:0] sf_mid2_fu_665_p3;
wire   [5:0] sf_cast_fu_995_p1;
wire   [5:0] tmp_102_mid2_fu_699_p3;
wire   [5:0] indvar_flatten_op_fu_1017_p2;
wire  signed [31:0] tmp_104_cast_fu_1031_p1;
wire  signed [5:0] p_Val2_s_142_fu_1049_p0;
wire  signed [7:0] p_Val2_s_142_fu_1049_p1;
wire  signed [13:0] p_08_cast_cast_fu_1042_p1;
wire   [13:0] p_Val2_s_142_fu_1049_p2;
wire   [0:0] tmp_637_fu_1081_p1;
wire   [0:0] tmp_635_fu_1055_p3;
wire   [4:0] tmp_119_fu_1091_p4;
wire   [0:0] tmp_118_fu_1085_p2;
wire   [5:0] tmp_120_fu_1101_p3;
wire   [0:0] tmp_121_fu_1109_p2;
wire   [0:0] tmp_636_fu_1073_p3;
wire  signed [5:0] p_Val2_1_fu_1125_p0;
wire  signed [7:0] p_Val2_1_fu_1125_p1;
wire   [13:0] p_Val2_1_fu_1125_p2;
wire   [0:0] tmp_640_fu_1157_p1;
wire   [0:0] tmp_638_fu_1131_p3;
wire   [4:0] tmp_127_fu_1167_p4;
wire   [0:0] tmp_126_fu_1161_p2;
wire   [5:0] tmp_128_fu_1177_p3;
wire   [0:0] tmp_251_1_fu_1185_p2;
wire   [0:0] tmp_639_fu_1149_p3;
wire  signed [5:0] p_Val2_2_fu_1201_p0;
wire  signed [7:0] p_Val2_2_fu_1201_p1;
wire   [13:0] p_Val2_2_fu_1201_p2;
wire   [0:0] tmp_643_fu_1233_p1;
wire   [0:0] tmp_641_fu_1207_p3;
wire   [4:0] tmp_133_fu_1243_p4;
wire   [0:0] tmp_132_fu_1237_p2;
wire   [5:0] tmp_134_fu_1253_p3;
wire   [0:0] tmp_251_2_fu_1261_p2;
wire   [0:0] tmp_642_fu_1225_p3;
wire  signed [5:0] p_Val2_3_fu_1277_p0;
wire  signed [7:0] p_Val2_3_fu_1277_p1;
wire   [13:0] p_Val2_3_fu_1277_p2;
wire   [0:0] tmp_646_fu_1309_p1;
wire   [0:0] tmp_644_fu_1283_p3;
wire   [4:0] tmp_139_fu_1319_p4;
wire   [0:0] tmp_138_fu_1313_p2;
wire   [5:0] tmp_140_fu_1329_p3;
wire   [0:0] tmp_251_3_fu_1337_p2;
wire   [0:0] tmp_645_fu_1301_p3;
wire   [7:0] tmp_122_fu_1376_p1;
wire  signed [7:0] tmp_116_fu_1373_p1;
wire   [7:0] tmp43_fu_1379_p2;
wire   [7:0] tmp_252_1_fu_1394_p1;
wire  signed [7:0] tmp_124_fu_1391_p1;
wire   [7:0] tmp44_fu_1397_p2;
wire   [7:0] tmp_252_2_fu_1412_p1;
wire  signed [7:0] tmp_130_fu_1409_p1;
wire   [7:0] tmp45_fu_1415_p2;
wire   [7:0] tmp_252_3_fu_1430_p1;
wire  signed [7:0] tmp_136_fu_1427_p1;
wire   [7:0] tmp46_fu_1433_p2;
wire   [7:0] newSel57_cast_mid2_c_fu_1361_p1;
wire   [7:0] newSel71_cast_mid2_c_fu_1364_p1;
wire   [7:0] newSel85_cast_mid2_c_fu_1367_p1;
wire   [7:0] newSel99_cast_mid2_c_fu_1370_p1;
wire   [7:0] p_Val2_24_3_fu_1483_p2;
wire   [7:0] p_Val2_24_2_fu_1477_p2;
wire   [7:0] p_Val2_24_1_fu_1471_p2;
wire   [7:0] p_Val2_s_fu_1465_p2;
wire    ap_CS_fsm_state6;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

Conv1DMac_new_2_wcud #(
    .DataWidth( 6 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
weights0_m_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights0_m_weights_V_address0),
    .ce0(weights0_m_weights_V_ce0),
    .q0(weights0_m_weights_V_q0)
);

Conv1DMac_new_2_wdEe #(
    .DataWidth( 6 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
weights0_m_weights_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights0_m_weights_V_1_address0),
    .ce0(weights0_m_weights_V_1_ce0),
    .q0(weights0_m_weights_V_1_q0)
);

Conv1DMac_new_2_weOg #(
    .DataWidth( 6 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
weights0_m_weights_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights0_m_weights_V_2_address0),
    .ce0(weights0_m_weights_V_2_ce0),
    .q0(weights0_m_weights_V_2_q0)
);

Conv1DMac_new_2_wfYi #(
    .DataWidth( 6 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
weights0_m_weights_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights0_m_weights_V_3_address0),
    .ce0(weights0_m_weights_V_3_ce0),
    .q0(weights0_m_weights_V_3_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_fu_555_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten6_reg_225 <= indvar_flatten_next6_fu_561_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten6_reg_225 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_fu_555_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_236 <= indvar_flatten_next_fu_1023_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_236 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_106_reg_1569_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_0_V_4_fu_144 <= macRegisters_0_V_fu_1385_p2;
    end else if ((((tmp_106_reg_1569_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        macRegisters_0_V_4_fu_144 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_106_reg_1569_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_1_V_4_fu_148 <= macRegisters_1_V_fu_1403_p2;
    end else if ((((tmp_106_reg_1569_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        macRegisters_1_V_4_fu_148 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_106_reg_1569_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_2_V_4_fu_152 <= macRegisters_2_V_fu_1421_p2;
    end else if ((((tmp_106_reg_1569_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        macRegisters_2_V_4_fu_152 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_106_reg_1569_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macRegisters_3_V_4_fu_156 <= macRegisters_3_V_fu_1439_p2;
    end else if ((((tmp_106_reg_1569_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        macRegisters_3_V_4_fu_156 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_fu_555_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nm_reg_247 <= nm_mid2_fu_987_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nm_reg_247 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_fu_555_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sf_reg_258 <= sf_2_fu_1011_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sf_reg_258 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten6_reg_1530 <= exitcond_flatten6_fu_555_p2;
        exitcond_flatten6_reg_1530_pp0_iter1_reg <= exitcond_flatten6_reg_1530;
        newSel57_cast_mid2_reg_1539_pp0_iter1_reg[1 : 0] <= newSel57_cast_mid2_reg_1539[1 : 0];
newSel57_cast_mid2_reg_1539_pp0_iter1_reg[5] <= newSel57_cast_mid2_reg_1539[5];
        newSel71_cast_mid2_reg_1544_pp0_iter1_reg[1 : 0] <= newSel71_cast_mid2_reg_1544[1 : 0];
newSel71_cast_mid2_reg_1544_pp0_iter1_reg[5] <= newSel71_cast_mid2_reg_1544[5];
        newSel85_cast_mid2_reg_1549_pp0_iter1_reg[2 : 0] <= newSel85_cast_mid2_reg_1549[2 : 0];
newSel85_cast_mid2_reg_1549_pp0_iter1_reg[5] <= newSel85_cast_mid2_reg_1549[5];
        newSel99_cast_mid2_reg_1554_pp0_iter1_reg <= newSel99_cast_mid2_reg_1554;
        tmp_106_reg_1569_pp0_iter1_reg <= tmp_106_reg_1569;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_fu_555_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        newSel57_cast_mid2_reg_1539[1 : 0] <= newSel57_cast_mid2_fu_829_p3[1 : 0];
newSel57_cast_mid2_reg_1539[5] <= newSel57_cast_mid2_fu_829_p3[5];
        newSel71_cast_mid2_reg_1544[1 : 0] <= newSel71_cast_mid2_fu_875_p3[1 : 0];
newSel71_cast_mid2_reg_1544[5] <= newSel71_cast_mid2_fu_875_p3[5];
        newSel85_cast_mid2_reg_1549[2 : 0] <= newSel85_cast_mid2_fu_939_p3[2 : 0];
newSel85_cast_mid2_reg_1549[5] <= newSel85_cast_mid2_fu_939_p3[5];
        newSel99_cast_mid2_reg_1554 <= newSel99_cast_mid2_fu_979_p3;
        tmp_104_reg_1564 <= tmp_104_fu_999_p2;
        tmp_106_reg_1569 <= tmp_106_fu_1005_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        newSel57_cast_mid2_reg_1539_pp0_iter2_reg[1 : 0] <= newSel57_cast_mid2_reg_1539_pp0_iter1_reg[1 : 0];
newSel57_cast_mid2_reg_1539_pp0_iter2_reg[5] <= newSel57_cast_mid2_reg_1539_pp0_iter1_reg[5];
        newSel71_cast_mid2_reg_1544_pp0_iter2_reg[1 : 0] <= newSel71_cast_mid2_reg_1544_pp0_iter1_reg[1 : 0];
newSel71_cast_mid2_reg_1544_pp0_iter2_reg[5] <= newSel71_cast_mid2_reg_1544_pp0_iter1_reg[5];
        newSel85_cast_mid2_reg_1549_pp0_iter2_reg[2 : 0] <= newSel85_cast_mid2_reg_1549_pp0_iter1_reg[2 : 0];
newSel85_cast_mid2_reg_1549_pp0_iter2_reg[5] <= newSel85_cast_mid2_reg_1549_pp0_iter1_reg[5];
        newSel99_cast_mid2_reg_1554_pp0_iter2_reg <= newSel99_cast_mid2_reg_1554_pp0_iter1_reg;
        tmp_106_reg_1569_pp0_iter2_reg <= tmp_106_reg_1569_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_reg_1530_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        qb_assign_3_1_reg_1623 <= qb_assign_3_1_fu_1191_p2;
        qb_assign_3_2_reg_1633 <= qb_assign_3_2_fu_1267_p2;
        qb_assign_3_3_reg_1643 <= qb_assign_3_3_fu_1343_p2;
        qb_assign_3_reg_1613 <= qb_assign_3_fu_1115_p2;
        tmp_115_reg_1608 <= {{p_Val2_s_142_fu_1049_p2[13:7]}};
        tmp_123_reg_1618 <= {{p_Val2_1_fu_1125_p2[13:7]}};
        tmp_129_reg_1628 <= {{p_Val2_2_fu_1201_p2[13:7]}};
        tmp_135_reg_1638 <= {{p_Val2_3_fu_1277_p2[13:7]}};
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten6_reg_1530 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_reg_1583 <= in_V_V_dout;
    end
end

always @ (*) begin
    if ((exitcond_flatten6_fu_555_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten6_reg_1530 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten6_reg_1530 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_106_reg_1569_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_106_reg_1569_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights0_m_weights_V_1_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights0_m_weights_V_2_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights0_m_weights_V_3_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights0_m_weights_V_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten6_fu_555_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((exitcond_flatten6_fu_555_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_106_reg_1569_pp0_iter2_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((exitcond_flatten6_reg_1530 == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_106_reg_1569_pp0_iter2_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((exitcond_flatten6_reg_1530 == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_106_reg_1569_pp0_iter2_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((exitcond_flatten6_reg_1530 == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((exitcond_flatten6_reg_1530 == 1'd0) & (in_V_V_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3 = ((tmp_106_reg_1569_pp0_iter2_reg == 1'd1) & (out_V_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign exitcond_flatten6_fu_555_p2 = ((indvar_flatten6_reg_225 == 14'd12288) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_567_p2 = ((indvar_flatten_reg_236 == 6'd24) ? 1'b1 : 1'b0);

assign indvar_flatten_next6_fu_561_p2 = (14'd1 + indvar_flatten6_reg_225);

assign indvar_flatten_next_fu_1023_p3 = ((exitcond_flatten_fu_567_p2[0:0] === 1'b1) ? 6'd1 : indvar_flatten_op_fu_1017_p2);

assign indvar_flatten_op_fu_1017_p2 = (indvar_flatten_reg_236 + 6'd1);

assign macRegisters_0_V_fu_1385_p2 = ($signed(tmp_116_fu_1373_p1) + $signed(tmp43_fu_1379_p2));

assign macRegisters_1_V_fu_1403_p2 = ($signed(tmp_124_fu_1391_p1) + $signed(tmp44_fu_1397_p2));

assign macRegisters_2_V_fu_1421_p2 = ($signed(tmp_130_fu_1409_p1) + $signed(tmp45_fu_1415_p2));

assign macRegisters_3_V_fu_1439_p2 = ($signed(tmp_136_fu_1427_p1) + $signed(tmp46_fu_1433_p2));

assign newSel10_fu_467_p3 = ((or_cond_fu_415_p2[0:0] === 1'b1) ? newSel8_fu_445_p3 : newSel9_fu_459_p3);

assign newSel10_mid1_fu_867_p3 = ((or_cond_mid1_fu_807_p2[0:0] === 1'b1) ? newSel8_mid1_fu_845_p3 : newSel9_mid1_fu_859_p3);

assign newSel11_fu_475_p3 = ((tmp_109_fu_351_p2[0:0] === 1'b1) ? 6'd0 : 6'd36);

assign newSel11_mid1_fu_883_p3 = ((tmp_292_mid1_fu_743_p2[0:0] === 1'b1) ? 6'd0 : 6'd36);

assign newSel12_fu_483_p3 = ((tmp_107_fu_339_p2[0:0] === 1'b1) ? 6'd35 : 6'd0);

assign newSel12_mid1_fu_891_p3 = ((tmp_290_mid1_fu_731_p2[0:0] === 1'b1) ? 6'd35 : 6'd0);

assign newSel13_fu_491_p3 = ((tmp_101_fu_327_p2[0:0] === 1'b1) ? 6'd0 : 6'd37);

assign newSel13_mid1_fu_899_p3 = ((tmp_288_mid1_fu_719_p2[0:0] === 1'b1) ? 6'd0 : 6'd37);

assign newSel14_fu_499_p3 = ((tmp_99_fu_315_p2[0:0] === 1'b1) ? 6'd33 : 6'd32);

assign newSel14_mid1_fu_907_p3 = ((tmp_286_mid1_fu_707_p2[0:0] === 1'b1) ? 6'd33 : 6'd32);

assign newSel15_fu_507_p3 = ((tmp_110_fu_357_p2[0:0] === 1'b1) ? newSel11_fu_475_p3 : newSel12_fu_483_p3);

assign newSel15_mid1_fu_915_p3 = ((tmp_293_mid1_fu_749_p2[0:0] === 1'b1) ? newSel11_mid1_fu_883_p3 : newSel12_mid1_fu_891_p3);

assign newSel16_fu_515_p3 = ((tmp_112_fu_369_p2[0:0] === 1'b1) ? newSel13_fu_491_p3 : newSel14_fu_499_p3);

assign newSel16_mid1_fu_923_p3 = ((tmp_295_mid1_fu_761_p2[0:0] === 1'b1) ? newSel13_mid1_fu_899_p3 : newSel14_mid1_fu_907_p3);

assign newSel17_fu_523_p3 = ((or_cond_fu_415_p2[0:0] === 1'b1) ? newSel15_fu_507_p3 : newSel16_fu_515_p3);

assign newSel17_mid1_fu_931_p3 = ((or_cond_mid1_fu_807_p2[0:0] === 1'b1) ? newSel15_mid1_fu_915_p3 : newSel16_mid1_fu_923_p3);

assign newSel18_fu_531_p3 = ((tmp_101_fu_327_p2[0:0] === 1'b1) ? 6'd35 : 6'd0);

assign newSel18_mid1_fu_947_p3 = ((tmp_288_mid1_fu_719_p2[0:0] === 1'b1) ? 6'd35 : 6'd0);

assign newSel19_fu_547_p3 = ((tmp_112_fu_369_p2[0:0] === 1'b1) ? newSel18_fu_531_p3 : newSel93_cast_cast_fu_539_p3);

assign newSel19_mid1_fu_963_p3 = ((tmp_295_mid1_fu_761_p2[0:0] === 1'b1) ? newSel18_mid1_fu_947_p3 : newSel93_cast_mid1_c_fu_955_p3);

assign newSel1_fu_383_p3 = ((tmp_107_fu_339_p2[0:0] === 1'b1) ? 6'd0 : 6'd33);

assign newSel1_mid1_fu_775_p3 = ((tmp_290_mid1_fu_731_p2[0:0] === 1'b1) ? 6'd0 : 6'd33);

assign newSel20_fu_613_p3 = ((exitcond_flatten_fu_567_p2[0:0] === 1'b1) ? 6'd29 : 6'd0);

assign newSel20_mid1_fu_971_p3 = ((or_cond_mid1_fu_807_p2[0:0] === 1'b1) ? 6'd0 : newSel19_mid1_fu_963_p3);

assign newSel2_fu_391_p3 = ((tmp_101_fu_327_p2[0:0] === 1'b1) ? 6'd32 : 6'd0);

assign newSel2_mid1_fu_783_p3 = ((tmp_288_mid1_fu_719_p2[0:0] === 1'b1) ? 6'd32 : 6'd0);

assign newSel3_fu_399_p3 = ((tmp_99_fu_315_p2[0:0] === 1'b1) ? 6'd35 : 6'd0);

assign newSel3_mid1_fu_791_p3 = ((tmp_286_mid1_fu_707_p2[0:0] === 1'b1) ? 6'd35 : 6'd0);

assign newSel4_fu_407_p3 = ((tmp_110_fu_357_p2[0:0] === 1'b1) ? newSel_fu_375_p3 : newSel1_fu_383_p3);

assign newSel4_mid1_fu_799_p3 = ((tmp_293_mid1_fu_749_p2[0:0] === 1'b1) ? newSel_mid1_fu_767_p3 : newSel1_mid1_fu_775_p3);

assign newSel57_cast_mid2_c_fu_1361_p1 = newSel57_cast_mid2_reg_1539_pp0_iter2_reg;

assign newSel57_cast_mid2_fu_829_p3 = ((tmp_103_mid_fu_647_p2[0:0] === 1'b1) ? newSel6_mid1_fu_821_p3 : newSel57_cast_mid_fu_589_p3);

assign newSel57_cast_mid_fu_589_p3 = ((exitcond_flatten_fu_567_p2[0:0] === 1'b1) ? 6'd35 : newSel6_fu_429_p3);

assign newSel5_fu_421_p3 = ((tmp_112_fu_369_p2[0:0] === 1'b1) ? newSel2_fu_391_p3 : newSel3_fu_399_p3);

assign newSel5_mid1_fu_813_p3 = ((tmp_295_mid1_fu_761_p2[0:0] === 1'b1) ? newSel2_mid1_fu_783_p3 : newSel3_mid1_fu_791_p3);

assign newSel6_fu_429_p3 = ((or_cond_fu_415_p2[0:0] === 1'b1) ? newSel4_fu_407_p3 : newSel5_fu_421_p3);

assign newSel6_mid1_fu_821_p3 = ((or_cond_mid1_fu_807_p2[0:0] === 1'b1) ? newSel4_mid1_fu_799_p3 : newSel5_mid1_fu_813_p3);

assign newSel71_cast_mid2_c_fu_1364_p1 = newSel71_cast_mid2_reg_1544_pp0_iter2_reg;

assign newSel71_cast_mid2_fu_875_p3 = ((tmp_103_mid_fu_647_p2[0:0] === 1'b1) ? newSel10_mid1_fu_867_p3 : newSel71_cast_mid_fu_597_p3);

assign newSel71_cast_mid_fu_597_p3 = ((exitcond_flatten_fu_567_p2[0:0] === 1'b1) ? 6'd0 : newSel10_fu_467_p3);

assign newSel7_fu_437_p3 = ((tmp_109_fu_351_p2[0:0] === 1'b1) ? 6'd35 : 6'd0);

assign newSel7_mid1_fu_837_p3 = ((tmp_292_mid1_fu_743_p2[0:0] === 1'b1) ? 6'd35 : 6'd0);

assign newSel85_cast_mid2_c_fu_1367_p1 = newSel85_cast_mid2_reg_1549_pp0_iter2_reg;

assign newSel85_cast_mid2_fu_939_p3 = ((tmp_103_mid_fu_647_p2[0:0] === 1'b1) ? newSel17_mid1_fu_931_p3 : newSel85_cast_mid_fu_605_p3);

assign newSel85_cast_mid_fu_605_p3 = ((exitcond_flatten_fu_567_p2[0:0] === 1'b1) ? 6'd33 : newSel17_fu_523_p3);

assign newSel8_fu_445_p3 = ((tmp_110_fu_357_p2[0:0] === 1'b1) ? newSel7_fu_437_p3 : 6'd0);

assign newSel8_mid1_fu_845_p3 = ((tmp_293_mid1_fu_749_p2[0:0] === 1'b1) ? newSel7_mid1_fu_837_p3 : 6'd0);

assign newSel93_cast_cast_fu_539_p3 = ((tmp_99_fu_315_p2[0:0] === 1'b1) ? 6'd29 : 6'd0);

assign newSel93_cast_mid1_c_fu_955_p3 = ((tmp_286_mid1_fu_707_p2[0:0] === 1'b1) ? 6'd29 : 6'd0);

assign newSel99_cast_mid2_c_fu_1370_p1 = newSel99_cast_mid2_reg_1554_pp0_iter2_reg;

assign newSel99_cast_mid2_fu_979_p3 = ((tmp_103_mid_fu_647_p2[0:0] === 1'b1) ? newSel20_mid1_fu_971_p3 : newSel99_cast_mid_fu_627_p3);

assign newSel99_cast_mid_fu_627_p3 = ((tmp_633_fu_621_p2[0:0] === 1'b1) ? newSel20_fu_613_p3 : newSel19_fu_547_p3);

assign newSel9_fu_459_p3 = ((tmp_113_fu_453_p2[0:0] === 1'b1) ? 6'd0 : 6'd32);

assign newSel9_mid1_fu_859_p3 = ((tmp_308_mid1_fu_853_p2[0:0] === 1'b1) ? 6'd0 : 6'd32);

assign newSel_fu_375_p3 = ((tmp_109_fu_351_p2[0:0] === 1'b1) ? 6'd0 : 6'd35);

assign newSel_mid1_fu_767_p3 = ((tmp_292_mid1_fu_743_p2[0:0] === 1'b1) ? 6'd0 : 6'd35);

assign nm_2_fu_653_p2 = (4'd1 + nm_mid_fu_573_p3);

assign nm_cast1_fu_289_p1 = nm_reg_247;

assign nm_cast1_mid1_fu_673_p1 = nm_2_fu_653_p2;

assign nm_mid2_fu_987_p3 = ((tmp_103_mid_fu_647_p2[0:0] === 1'b1) ? nm_2_fu_653_p2 : nm_mid_fu_573_p3);

assign nm_mid_fu_573_p3 = ((exitcond_flatten_fu_567_p2[0:0] === 1'b1) ? 4'd0 : nm_reg_247);

assign not_exitcond_flatten_fu_635_p2 = (exitcond_flatten_fu_567_p2 ^ 1'd1);

assign or_cond_fu_415_p2 = (tmp_111_fu_363_p2 | tmp_110_fu_357_p2);

assign or_cond_mid1_fu_807_p2 = (tmp_294_mid1_fu_755_p2 | tmp_293_mid1_fu_749_p2);

assign out_V_V_din = {{{{p_Val2_24_3_fu_1483_p2}, {p_Val2_24_2_fu_1477_p2}}, {p_Val2_24_1_fu_1471_p2}}, {p_Val2_s_fu_1465_p2}};

assign p_08_cast_cast_fu_1042_p1 = $signed(tmp_V_reg_1583);

assign p_Val2_1_fu_1125_p0 = weights0_m_weights_V_1_q0;

assign p_Val2_1_fu_1125_p1 = p_08_cast_cast_fu_1042_p1;

assign p_Val2_1_fu_1125_p2 = ($signed(p_Val2_1_fu_1125_p0) * $signed(p_Val2_1_fu_1125_p1));

assign p_Val2_24_1_fu_1471_p2 = (newSel71_cast_mid2_c_fu_1364_p1 + macRegisters_1_V_fu_1403_p2);

assign p_Val2_24_2_fu_1477_p2 = (newSel85_cast_mid2_c_fu_1367_p1 + macRegisters_2_V_fu_1421_p2);

assign p_Val2_24_3_fu_1483_p2 = (newSel99_cast_mid2_c_fu_1370_p1 + macRegisters_3_V_fu_1439_p2);

assign p_Val2_2_fu_1201_p0 = weights0_m_weights_V_2_q0;

assign p_Val2_2_fu_1201_p1 = p_08_cast_cast_fu_1042_p1;

assign p_Val2_2_fu_1201_p2 = ($signed(p_Val2_2_fu_1201_p0) * $signed(p_Val2_2_fu_1201_p1));

assign p_Val2_3_fu_1277_p0 = weights0_m_weights_V_3_q0;

assign p_Val2_3_fu_1277_p1 = p_08_cast_cast_fu_1042_p1;

assign p_Val2_3_fu_1277_p2 = ($signed(p_Val2_3_fu_1277_p0) * $signed(p_Val2_3_fu_1277_p1));

assign p_Val2_s_142_fu_1049_p0 = weights0_m_weights_V_q0;

assign p_Val2_s_142_fu_1049_p1 = p_08_cast_cast_fu_1042_p1;

assign p_Val2_s_142_fu_1049_p2 = ($signed(p_Val2_s_142_fu_1049_p0) * $signed(p_Val2_s_142_fu_1049_p1));

assign p_Val2_s_fu_1465_p2 = (newSel57_cast_mid2_c_fu_1361_p1 + macRegisters_0_V_fu_1385_p2);

assign p_shl_cast_fu_305_p1 = p_shl_fu_297_p3;

assign p_shl_cast_mid1_fu_689_p1 = p_shl_mid1_fu_681_p3;

assign p_shl_fu_297_p3 = {{tmp_fu_293_p1}, {2'd0}};

assign p_shl_mid1_fu_681_p3 = {{tmp_634_fu_677_p1}, {2'd0}};

assign qb_assign_3_1_fu_1191_p2 = (tmp_639_fu_1149_p3 & tmp_251_1_fu_1185_p2);

assign qb_assign_3_2_fu_1267_p2 = (tmp_642_fu_1225_p3 & tmp_251_2_fu_1261_p2);

assign qb_assign_3_3_fu_1343_p2 = (tmp_645_fu_1301_p3 & tmp_251_3_fu_1337_p2);

assign qb_assign_3_fu_1115_p2 = (tmp_636_fu_1073_p3 & tmp_121_fu_1109_p2);

assign sf_2_fu_1011_p2 = (sf_mid2_fu_665_p3 + 2'd1);

assign sf_cast_fu_995_p1 = sf_mid2_fu_665_p3;

assign sf_mid2_fu_665_p3 = ((tmp_358_fu_659_p2[0:0] === 1'b1) ? 2'd0 : sf_reg_258);

assign start_out = real_start;

assign tmp43_fu_1379_p2 = (tmp_122_fu_1376_p1 + macRegisters_0_V_4_fu_144);

assign tmp44_fu_1397_p2 = (tmp_252_1_fu_1394_p1 + macRegisters_1_V_4_fu_148);

assign tmp45_fu_1415_p2 = (tmp_252_2_fu_1412_p1 + macRegisters_2_V_4_fu_152);

assign tmp46_fu_1433_p2 = (tmp_252_3_fu_1430_p1 + macRegisters_3_V_4_fu_156);

assign tmp_100_fu_321_p2 = ((tmp_fu_293_p1 == 3'd1) ? 1'b1 : 1'b0);

assign tmp_101_fu_327_p2 = ((tmp_fu_293_p1 == 3'd2) ? 1'b1 : 1'b0);

assign tmp_102_fu_333_p2 = ((tmp_fu_293_p1 == 3'd3) ? 1'b1 : 1'b0);

assign tmp_102_mid1_fu_693_p2 = (p_shl_cast_mid1_fu_689_p1 - nm_cast1_mid1_fu_673_p1);

assign tmp_102_mid2_fu_699_p3 = ((tmp_103_mid_fu_647_p2[0:0] === 1'b1) ? tmp_102_mid1_fu_693_p2 : tmp_102_mid_fu_581_p3);

assign tmp_102_mid_fu_581_p3 = ((exitcond_flatten_fu_567_p2[0:0] === 1'b1) ? 6'd0 : tmp_s_fu_309_p2);

assign tmp_103_mid_fu_647_p2 = (tmp_357_fu_641_p2 & not_exitcond_flatten_fu_635_p2);

assign tmp_104_cast_fu_1031_p1 = $signed(tmp_104_reg_1564);

assign tmp_104_fu_999_p2 = (sf_cast_fu_995_p1 + tmp_102_mid2_fu_699_p3);

assign tmp_105_fu_1034_p1 = $unsigned(tmp_104_cast_fu_1031_p1);

assign tmp_106_fu_1005_p2 = ((sf_mid2_fu_665_p3 == 2'd2) ? 1'b1 : 1'b0);

assign tmp_107_fu_339_p2 = ((tmp_fu_293_p1 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_108_fu_345_p2 = ((tmp_fu_293_p1 == 3'd5) ? 1'b1 : 1'b0);

assign tmp_109_fu_351_p2 = ((tmp_fu_293_p1 == 3'd6) ? 1'b1 : 1'b0);

assign tmp_110_fu_357_p2 = (tmp_109_fu_351_p2 | tmp_108_fu_345_p2);

assign tmp_111_fu_363_p2 = (tmp_107_fu_339_p2 | tmp_102_fu_333_p2);

assign tmp_112_fu_369_p2 = (tmp_101_fu_327_p2 | tmp_100_fu_321_p2);

assign tmp_113_fu_453_p2 = (tmp_99_fu_315_p2 | tmp_112_fu_369_p2);

assign tmp_116_fu_1373_p1 = $signed(tmp_115_reg_1608);

assign tmp_118_fu_1085_p2 = (tmp_637_fu_1081_p1 | tmp_635_fu_1055_p3);

assign tmp_119_fu_1091_p4 = {{p_Val2_s_142_fu_1049_p2[5:1]}};

assign tmp_120_fu_1101_p3 = {{tmp_119_fu_1091_p4}, {tmp_118_fu_1085_p2}};

assign tmp_121_fu_1109_p2 = ((tmp_120_fu_1101_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_122_fu_1376_p1 = qb_assign_3_reg_1613;

assign tmp_124_fu_1391_p1 = $signed(tmp_123_reg_1618);

assign tmp_126_fu_1161_p2 = (tmp_640_fu_1157_p1 | tmp_638_fu_1131_p3);

assign tmp_127_fu_1167_p4 = {{p_Val2_1_fu_1125_p2[5:1]}};

assign tmp_128_fu_1177_p3 = {{tmp_127_fu_1167_p4}, {tmp_126_fu_1161_p2}};

assign tmp_130_fu_1409_p1 = $signed(tmp_129_reg_1628);

assign tmp_132_fu_1237_p2 = (tmp_643_fu_1233_p1 | tmp_641_fu_1207_p3);

assign tmp_133_fu_1243_p4 = {{p_Val2_2_fu_1201_p2[5:1]}};

assign tmp_134_fu_1253_p3 = {{tmp_133_fu_1243_p4}, {tmp_132_fu_1237_p2}};

assign tmp_136_fu_1427_p1 = $signed(tmp_135_reg_1638);

assign tmp_138_fu_1313_p2 = (tmp_646_fu_1309_p1 | tmp_644_fu_1283_p3);

assign tmp_139_fu_1319_p4 = {{p_Val2_3_fu_1277_p2[5:1]}};

assign tmp_140_fu_1329_p3 = {{tmp_139_fu_1319_p4}, {tmp_138_fu_1313_p2}};

assign tmp_251_1_fu_1185_p2 = ((tmp_128_fu_1177_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_251_2_fu_1261_p2 = ((tmp_134_fu_1253_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_251_3_fu_1337_p2 = ((tmp_140_fu_1329_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_252_1_fu_1394_p1 = qb_assign_3_1_reg_1623;

assign tmp_252_2_fu_1412_p1 = qb_assign_3_2_reg_1633;

assign tmp_252_3_fu_1430_p1 = qb_assign_3_3_reg_1643;

assign tmp_286_mid1_fu_707_p2 = ((tmp_634_fu_677_p1 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_287_mid1_fu_713_p2 = ((tmp_634_fu_677_p1 == 3'd1) ? 1'b1 : 1'b0);

assign tmp_288_mid1_fu_719_p2 = ((tmp_634_fu_677_p1 == 3'd2) ? 1'b1 : 1'b0);

assign tmp_289_mid1_fu_725_p2 = ((tmp_634_fu_677_p1 == 3'd3) ? 1'b1 : 1'b0);

assign tmp_290_mid1_fu_731_p2 = ((tmp_634_fu_677_p1 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_291_mid1_fu_737_p2 = ((tmp_634_fu_677_p1 == 3'd5) ? 1'b1 : 1'b0);

assign tmp_292_mid1_fu_743_p2 = ((tmp_634_fu_677_p1 == 3'd6) ? 1'b1 : 1'b0);

assign tmp_293_mid1_fu_749_p2 = (tmp_292_mid1_fu_743_p2 | tmp_291_mid1_fu_737_p2);

assign tmp_294_mid1_fu_755_p2 = (tmp_290_mid1_fu_731_p2 | tmp_289_mid1_fu_725_p2);

assign tmp_295_mid1_fu_761_p2 = (tmp_288_mid1_fu_719_p2 | tmp_287_mid1_fu_713_p2);

assign tmp_308_mid1_fu_853_p2 = (tmp_295_mid1_fu_761_p2 | tmp_286_mid1_fu_707_p2);

assign tmp_357_fu_641_p2 = ((sf_reg_258 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_358_fu_659_p2 = (tmp_103_mid_fu_647_p2 | exitcond_flatten_fu_567_p2);

assign tmp_633_fu_621_p2 = (or_cond_fu_415_p2 | exitcond_flatten_fu_567_p2);

assign tmp_634_fu_677_p1 = nm_2_fu_653_p2[2:0];

assign tmp_635_fu_1055_p3 = p_Val2_s_142_fu_1049_p2[32'd13];

assign tmp_636_fu_1073_p3 = p_Val2_s_142_fu_1049_p2[32'd6];

assign tmp_637_fu_1081_p1 = p_Val2_s_142_fu_1049_p2[0:0];

assign tmp_638_fu_1131_p3 = p_Val2_1_fu_1125_p2[32'd13];

assign tmp_639_fu_1149_p3 = p_Val2_1_fu_1125_p2[32'd6];

assign tmp_640_fu_1157_p1 = p_Val2_1_fu_1125_p2[0:0];

assign tmp_641_fu_1207_p3 = p_Val2_2_fu_1201_p2[32'd13];

assign tmp_642_fu_1225_p3 = p_Val2_2_fu_1201_p2[32'd6];

assign tmp_643_fu_1233_p1 = p_Val2_2_fu_1201_p2[0:0];

assign tmp_644_fu_1283_p3 = p_Val2_3_fu_1277_p2[32'd13];

assign tmp_645_fu_1301_p3 = p_Val2_3_fu_1277_p2[32'd6];

assign tmp_646_fu_1309_p1 = p_Val2_3_fu_1277_p2[0:0];

assign tmp_99_fu_315_p2 = ((tmp_fu_293_p1 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_fu_293_p1 = nm_reg_247[2:0];

assign tmp_s_fu_309_p2 = (p_shl_cast_fu_305_p1 - nm_cast1_fu_289_p1);

assign weights0_m_weights_V_1_address0 = tmp_105_fu_1034_p1;

assign weights0_m_weights_V_2_address0 = tmp_105_fu_1034_p1;

assign weights0_m_weights_V_3_address0 = tmp_105_fu_1034_p1;

assign weights0_m_weights_V_address0 = tmp_105_fu_1034_p1;

always @ (posedge ap_clk) begin
    newSel57_cast_mid2_reg_1539[4:2] <= 3'b000;
    newSel57_cast_mid2_reg_1539_pp0_iter1_reg[4:2] <= 3'b000;
    newSel57_cast_mid2_reg_1539_pp0_iter2_reg[4:2] <= 3'b000;
    newSel71_cast_mid2_reg_1544[4:2] <= 3'b000;
    newSel71_cast_mid2_reg_1544_pp0_iter1_reg[4:2] <= 3'b000;
    newSel71_cast_mid2_reg_1544_pp0_iter2_reg[4:2] <= 3'b000;
    newSel85_cast_mid2_reg_1549[4:3] <= 2'b00;
    newSel85_cast_mid2_reg_1549_pp0_iter1_reg[4:3] <= 2'b00;
    newSel85_cast_mid2_reg_1549_pp0_iter2_reg[4:3] <= 2'b00;
end

endmodule //Conv1DMac_new_2
