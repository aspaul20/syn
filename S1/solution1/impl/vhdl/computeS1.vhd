-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity computeS1 is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_HOSTMEM_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_HOSTMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_HOSTMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_HOSTMEM_DATA_WIDTH : INTEGER := 64;
    C_M_AXI_HOSTMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_HOSTMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_HOSTMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_HOSTMEM_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_HOSTMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_HOSTMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_HOSTMEM_CACHE_VALUE : INTEGER := 3 );
port (
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_hostmem_AWVALID : OUT STD_LOGIC;
    m_axi_hostmem_AWREADY : IN STD_LOGIC;
    m_axi_hostmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_HOSTMEM_ADDR_WIDTH-1 downto 0);
    m_axi_hostmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_HOSTMEM_ID_WIDTH-1 downto 0);
    m_axi_hostmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_hostmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_hostmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_hostmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_hostmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_hostmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_hostmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_hostmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_hostmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_HOSTMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_hostmem_WVALID : OUT STD_LOGIC;
    m_axi_hostmem_WREADY : IN STD_LOGIC;
    m_axi_hostmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_HOSTMEM_DATA_WIDTH-1 downto 0);
    m_axi_hostmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_HOSTMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_hostmem_WLAST : OUT STD_LOGIC;
    m_axi_hostmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_HOSTMEM_ID_WIDTH-1 downto 0);
    m_axi_hostmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_HOSTMEM_WUSER_WIDTH-1 downto 0);
    m_axi_hostmem_ARVALID : OUT STD_LOGIC;
    m_axi_hostmem_ARREADY : IN STD_LOGIC;
    m_axi_hostmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_HOSTMEM_ADDR_WIDTH-1 downto 0);
    m_axi_hostmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_HOSTMEM_ID_WIDTH-1 downto 0);
    m_axi_hostmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_hostmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_hostmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_hostmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_hostmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_hostmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_hostmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_hostmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_hostmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_HOSTMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_hostmem_RVALID : IN STD_LOGIC;
    m_axi_hostmem_RREADY : OUT STD_LOGIC;
    m_axi_hostmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_HOSTMEM_DATA_WIDTH-1 downto 0);
    m_axi_hostmem_RLAST : IN STD_LOGIC;
    m_axi_hostmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_HOSTMEM_ID_WIDTH-1 downto 0);
    m_axi_hostmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_HOSTMEM_RUSER_WIDTH-1 downto 0);
    m_axi_hostmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_hostmem_BVALID : IN STD_LOGIC;
    m_axi_hostmem_BREADY : OUT STD_LOGIC;
    m_axi_hostmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_hostmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_HOSTMEM_ID_WIDTH-1 downto 0);
    m_axi_hostmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_HOSTMEM_BUSER_WIDTH-1 downto 0);
    s1_out_V_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    s1_out_V_V_TVALID : OUT STD_LOGIC;
    s1_out_V_V_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of computeS1 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "computeS1,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=12863214,HLS_SYN_TPT=4194373,HLS_SYN_MEM=128,HLS_SYN_DSP=0,HLS_SYN_FF=7162,HLS_SYN_LUT=22690,HLS_VERSION=2018_2}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant C_M_AXI_ID_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_M_AXI_AWUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_ARUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_WUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_RUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_BUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal inPtr_V : STD_LOGIC_VECTOR (31 downto 0);
    signal hostmem_AWREADY : STD_LOGIC;
    signal hostmem_WREADY : STD_LOGIC;
    signal hostmem_ARREADY : STD_LOGIC;
    signal hostmem_RVALID : STD_LOGIC;
    signal hostmem_RDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal hostmem_RLAST : STD_LOGIC;
    signal hostmem_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal hostmem_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal hostmem_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal hostmem_BVALID : STD_LOGIC;
    signal hostmem_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal hostmem_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal hostmem_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Mem2Stream_U0_ap_start : STD_LOGIC;
    signal Mem2Stream_U0_ap_done : STD_LOGIC;
    signal Mem2Stream_U0_ap_continue : STD_LOGIC;
    signal Mem2Stream_U0_ap_idle : STD_LOGIC;
    signal Mem2Stream_U0_ap_ready : STD_LOGIC;
    signal Mem2Stream_U0_start_out : STD_LOGIC;
    signal Mem2Stream_U0_start_write : STD_LOGIC;
    signal Mem2Stream_U0_m_axi_in_V_AWVALID : STD_LOGIC;
    signal Mem2Stream_U0_m_axi_in_V_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_WVALID : STD_LOGIC;
    signal Mem2Stream_U0_m_axi_in_V_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_WLAST : STD_LOGIC;
    signal Mem2Stream_U0_m_axi_in_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_ARVALID : STD_LOGIC;
    signal Mem2Stream_U0_m_axi_in_V_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Mem2Stream_U0_m_axi_in_V_RREADY : STD_LOGIC;
    signal Mem2Stream_U0_m_axi_in_V_BREADY : STD_LOGIC;
    signal Mem2Stream_U0_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal Mem2Stream_U0_out_V_V_write : STD_LOGIC;
    signal ResizeStream_1_U0_ap_start : STD_LOGIC;
    signal ResizeStream_1_U0_ap_done : STD_LOGIC;
    signal ResizeStream_1_U0_ap_continue : STD_LOGIC;
    signal ResizeStream_1_U0_ap_idle : STD_LOGIC;
    signal ResizeStream_1_U0_ap_ready : STD_LOGIC;
    signal ResizeStream_1_U0_start_out : STD_LOGIC;
    signal ResizeStream_1_U0_start_write : STD_LOGIC;
    signal ResizeStream_1_U0_in_V_V_read : STD_LOGIC;
    signal ResizeStream_1_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal ResizeStream_1_U0_out_V_V_write : STD_LOGIC;
    signal CloneStream_U0_ap_start : STD_LOGIC;
    signal CloneStream_U0_start_full_n : STD_LOGIC;
    signal CloneStream_U0_ap_done : STD_LOGIC;
    signal CloneStream_U0_ap_continue : STD_LOGIC;
    signal CloneStream_U0_ap_idle : STD_LOGIC;
    signal CloneStream_U0_ap_ready : STD_LOGIC;
    signal CloneStream_U0_start_out : STD_LOGIC;
    signal CloneStream_U0_start_write : STD_LOGIC;
    signal CloneStream_U0_IN_V_V_read : STD_LOGIC;
    signal CloneStream_U0_out1_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal CloneStream_U0_out1_V_V_write : STD_LOGIC;
    signal CloneStream_U0_out2_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal CloneStream_U0_out2_V_V_write : STD_LOGIC;
    signal Conv1DBuffer_new_2_U0_ap_start : STD_LOGIC;
    signal Conv1DBuffer_new_2_U0_ap_done : STD_LOGIC;
    signal Conv1DBuffer_new_2_U0_ap_continue : STD_LOGIC;
    signal Conv1DBuffer_new_2_U0_ap_idle : STD_LOGIC;
    signal Conv1DBuffer_new_2_U0_ap_ready : STD_LOGIC;
    signal Conv1DBuffer_new_2_U0_start_out : STD_LOGIC;
    signal Conv1DBuffer_new_2_U0_start_write : STD_LOGIC;
    signal Conv1DBuffer_new_2_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DBuffer_new_2_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Conv1DBuffer_new_2_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DMac_new_2_U0_ap_start : STD_LOGIC;
    signal Conv1DMac_new_2_U0_ap_done : STD_LOGIC;
    signal Conv1DMac_new_2_U0_ap_continue : STD_LOGIC;
    signal Conv1DMac_new_2_U0_ap_idle : STD_LOGIC;
    signal Conv1DMac_new_2_U0_ap_ready : STD_LOGIC;
    signal Conv1DMac_new_2_U0_start_out : STD_LOGIC;
    signal Conv1DMac_new_2_U0_start_write : STD_LOGIC;
    signal Conv1DMac_new_2_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DMac_new_2_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Conv1DMac_new_2_U0_out_V_V_write : STD_LOGIC;
    signal Relu1D_2_U0_ap_start : STD_LOGIC;
    signal Relu1D_2_U0_ap_done : STD_LOGIC;
    signal Relu1D_2_U0_ap_continue : STD_LOGIC;
    signal Relu1D_2_U0_ap_idle : STD_LOGIC;
    signal Relu1D_2_U0_ap_ready : STD_LOGIC;
    signal Relu1D_2_U0_start_out : STD_LOGIC;
    signal Relu1D_2_U0_start_write : STD_LOGIC;
    signal Relu1D_2_U0_in_V_V_read : STD_LOGIC;
    signal Relu1D_2_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Relu1D_2_U0_out_V_V_write : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_in_V_V_read : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal StreamingDataWidthCo_4_U0_out_V_V_write : STD_LOGIC;
    signal CloneStreamOnce_U0_ap_start : STD_LOGIC;
    signal CloneStreamOnce_U0_ap_done : STD_LOGIC;
    signal CloneStreamOnce_U0_ap_continue : STD_LOGIC;
    signal CloneStreamOnce_U0_ap_idle : STD_LOGIC;
    signal CloneStreamOnce_U0_ap_ready : STD_LOGIC;
    signal CloneStreamOnce_U0_start_out : STD_LOGIC;
    signal CloneStreamOnce_U0_start_write : STD_LOGIC;
    signal CloneStreamOnce_U0_IN_V_V_read : STD_LOGIC;
    signal CloneStreamOnce_U0_out1_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal CloneStreamOnce_U0_out1_V_V_write : STD_LOGIC;
    signal grouperPE_U0_ap_start : STD_LOGIC;
    signal grouperPE_U0_ap_done : STD_LOGIC;
    signal grouperPE_U0_ap_continue : STD_LOGIC;
    signal grouperPE_U0_ap_idle : STD_LOGIC;
    signal grouperPE_U0_ap_ready : STD_LOGIC;
    signal grouperPE_U0_start_out : STD_LOGIC;
    signal grouperPE_U0_start_write : STD_LOGIC;
    signal grouperPE_U0_inStream_V_V_read : STD_LOGIC;
    signal grouperPE_U0_features_V_V_read : STD_LOGIC;
    signal grouperPE_U0_outStream_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grouperPE_U0_outStream_V_V_write : STD_LOGIC;
    signal Conv1DBuffer_new406_U0_ap_start : STD_LOGIC;
    signal Conv1DBuffer_new406_U0_ap_done : STD_LOGIC;
    signal Conv1DBuffer_new406_U0_ap_continue : STD_LOGIC;
    signal Conv1DBuffer_new406_U0_ap_idle : STD_LOGIC;
    signal Conv1DBuffer_new406_U0_ap_ready : STD_LOGIC;
    signal Conv1DBuffer_new406_U0_start_out : STD_LOGIC;
    signal Conv1DBuffer_new406_U0_start_write : STD_LOGIC;
    signal Conv1DBuffer_new406_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DBuffer_new406_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Conv1DBuffer_new406_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DMac_new407_U0_ap_start : STD_LOGIC;
    signal Conv1DMac_new407_U0_ap_done : STD_LOGIC;
    signal Conv1DMac_new407_U0_ap_continue : STD_LOGIC;
    signal Conv1DMac_new407_U0_ap_idle : STD_LOGIC;
    signal Conv1DMac_new407_U0_ap_ready : STD_LOGIC;
    signal Conv1DMac_new407_U0_start_out : STD_LOGIC;
    signal Conv1DMac_new407_U0_start_write : STD_LOGIC;
    signal Conv1DMac_new407_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DMac_new407_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Conv1DMac_new407_U0_out_V_V_write : STD_LOGIC;
    signal Relu1D408_U0_ap_start : STD_LOGIC;
    signal Relu1D408_U0_ap_done : STD_LOGIC;
    signal Relu1D408_U0_ap_continue : STD_LOGIC;
    signal Relu1D408_U0_ap_idle : STD_LOGIC;
    signal Relu1D408_U0_ap_ready : STD_LOGIC;
    signal Relu1D408_U0_start_out : STD_LOGIC;
    signal Relu1D408_U0_start_write : STD_LOGIC;
    signal Relu1D408_U0_in_V_V_read : STD_LOGIC;
    signal Relu1D408_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Relu1D408_U0_out_V_V_write : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_start_out : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_start_write : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_in_V_V_read : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal StreamingDataWidthCo_1_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DBuffer_new410_U0_ap_start : STD_LOGIC;
    signal Conv1DBuffer_new410_U0_ap_done : STD_LOGIC;
    signal Conv1DBuffer_new410_U0_ap_continue : STD_LOGIC;
    signal Conv1DBuffer_new410_U0_ap_idle : STD_LOGIC;
    signal Conv1DBuffer_new410_U0_ap_ready : STD_LOGIC;
    signal Conv1DBuffer_new410_U0_start_out : STD_LOGIC;
    signal Conv1DBuffer_new410_U0_start_write : STD_LOGIC;
    signal Conv1DBuffer_new410_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DBuffer_new410_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Conv1DBuffer_new410_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DMac_new411_U0_ap_start : STD_LOGIC;
    signal Conv1DMac_new411_U0_ap_done : STD_LOGIC;
    signal Conv1DMac_new411_U0_ap_continue : STD_LOGIC;
    signal Conv1DMac_new411_U0_ap_idle : STD_LOGIC;
    signal Conv1DMac_new411_U0_ap_ready : STD_LOGIC;
    signal Conv1DMac_new411_U0_start_out : STD_LOGIC;
    signal Conv1DMac_new411_U0_start_write : STD_LOGIC;
    signal Conv1DMac_new411_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DMac_new411_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Conv1DMac_new411_U0_out_V_V_write : STD_LOGIC;
    signal Relu1D412_U0_ap_start : STD_LOGIC;
    signal Relu1D412_U0_ap_done : STD_LOGIC;
    signal Relu1D412_U0_ap_continue : STD_LOGIC;
    signal Relu1D412_U0_ap_idle : STD_LOGIC;
    signal Relu1D412_U0_ap_ready : STD_LOGIC;
    signal Relu1D412_U0_start_out : STD_LOGIC;
    signal Relu1D412_U0_start_write : STD_LOGIC;
    signal Relu1D412_U0_in_V_V_read : STD_LOGIC;
    signal Relu1D412_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Relu1D412_U0_out_V_V_write : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthCo_U0_start_out : STD_LOGIC;
    signal StreamingDataWidthCo_U0_start_write : STD_LOGIC;
    signal StreamingDataWidthCo_U0_in_V_V_read : STD_LOGIC;
    signal StreamingDataWidthCo_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal StreamingDataWidthCo_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DBuffer_new_U0_ap_start : STD_LOGIC;
    signal Conv1DBuffer_new_U0_ap_done : STD_LOGIC;
    signal Conv1DBuffer_new_U0_ap_continue : STD_LOGIC;
    signal Conv1DBuffer_new_U0_ap_idle : STD_LOGIC;
    signal Conv1DBuffer_new_U0_ap_ready : STD_LOGIC;
    signal Conv1DBuffer_new_U0_start_out : STD_LOGIC;
    signal Conv1DBuffer_new_U0_start_write : STD_LOGIC;
    signal Conv1DBuffer_new_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DBuffer_new_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Conv1DBuffer_new_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DMac_new_U0_ap_start : STD_LOGIC;
    signal Conv1DMac_new_U0_ap_done : STD_LOGIC;
    signal Conv1DMac_new_U0_ap_continue : STD_LOGIC;
    signal Conv1DMac_new_U0_ap_idle : STD_LOGIC;
    signal Conv1DMac_new_U0_ap_ready : STD_LOGIC;
    signal Conv1DMac_new_U0_start_out : STD_LOGIC;
    signal Conv1DMac_new_U0_start_write : STD_LOGIC;
    signal Conv1DMac_new_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DMac_new_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Conv1DMac_new_U0_out_V_V_write : STD_LOGIC;
    signal Relu1D_U0_ap_start : STD_LOGIC;
    signal Relu1D_U0_ap_done : STD_LOGIC;
    signal Relu1D_U0_ap_continue : STD_LOGIC;
    signal Relu1D_U0_ap_idle : STD_LOGIC;
    signal Relu1D_U0_ap_ready : STD_LOGIC;
    signal Relu1D_U0_start_out : STD_LOGIC;
    signal Relu1D_U0_start_write : STD_LOGIC;
    signal Relu1D_U0_in_V_V_read : STD_LOGIC;
    signal Relu1D_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Relu1D_U0_out_V_V_write : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_start_out : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_start_write : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_in_V_V_read : STD_LOGIC;
    signal StreamingDataWidthCo_2_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal StreamingDataWidthCo_2_U0_out_V_V_write : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_ap_start : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_ap_done : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_ap_continue : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_ap_idle : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_ap_ready : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_start_out : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_start_write : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_in_V_V_read : STD_LOGIC;
    signal StreamingMaxPool_Pre_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal StreamingMaxPool_Pre_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DBuffer_new414_U0_ap_start : STD_LOGIC;
    signal Conv1DBuffer_new414_U0_ap_done : STD_LOGIC;
    signal Conv1DBuffer_new414_U0_ap_continue : STD_LOGIC;
    signal Conv1DBuffer_new414_U0_ap_idle : STD_LOGIC;
    signal Conv1DBuffer_new414_U0_ap_ready : STD_LOGIC;
    signal Conv1DBuffer_new414_U0_start_out : STD_LOGIC;
    signal Conv1DBuffer_new414_U0_start_write : STD_LOGIC;
    signal Conv1DBuffer_new414_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DBuffer_new414_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Conv1DBuffer_new414_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DMac_new415_U0_ap_start : STD_LOGIC;
    signal Conv1DMac_new415_U0_ap_done : STD_LOGIC;
    signal Conv1DMac_new415_U0_ap_continue : STD_LOGIC;
    signal Conv1DMac_new415_U0_ap_idle : STD_LOGIC;
    signal Conv1DMac_new415_U0_ap_ready : STD_LOGIC;
    signal Conv1DMac_new415_U0_start_out : STD_LOGIC;
    signal Conv1DMac_new415_U0_start_write : STD_LOGIC;
    signal Conv1DMac_new415_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DMac_new415_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Conv1DMac_new415_U0_out_V_V_write : STD_LOGIC;
    signal Relu1D416_U0_ap_start : STD_LOGIC;
    signal Relu1D416_U0_ap_done : STD_LOGIC;
    signal Relu1D416_U0_ap_continue : STD_LOGIC;
    signal Relu1D416_U0_ap_idle : STD_LOGIC;
    signal Relu1D416_U0_ap_ready : STD_LOGIC;
    signal Relu1D416_U0_start_out : STD_LOGIC;
    signal Relu1D416_U0_start_write : STD_LOGIC;
    signal Relu1D416_U0_in_V_V_read : STD_LOGIC;
    signal Relu1D416_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Relu1D416_U0_out_V_V_write : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_start_out : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_start_write : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_in_V_V_read : STD_LOGIC;
    signal StreamingDataWidthCo_3_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal StreamingDataWidthCo_3_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_ap_start : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_ap_done : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_ap_continue : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_ap_idle : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_ap_ready : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_start_out : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_start_write : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DBuffer_new_1_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Conv1DBuffer_new_1_U0_out_V_V_write : STD_LOGIC;
    signal Conv1DMac_new_1_U0_ap_start : STD_LOGIC;
    signal Conv1DMac_new_1_U0_ap_done : STD_LOGIC;
    signal Conv1DMac_new_1_U0_ap_continue : STD_LOGIC;
    signal Conv1DMac_new_1_U0_ap_idle : STD_LOGIC;
    signal Conv1DMac_new_1_U0_ap_ready : STD_LOGIC;
    signal Conv1DMac_new_1_U0_start_out : STD_LOGIC;
    signal Conv1DMac_new_1_U0_start_write : STD_LOGIC;
    signal Conv1DMac_new_1_U0_in_V_V_read : STD_LOGIC;
    signal Conv1DMac_new_1_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Conv1DMac_new_1_U0_out_V_V_write : STD_LOGIC;
    signal Relu1D_1_U0_ap_start : STD_LOGIC;
    signal Relu1D_1_U0_ap_done : STD_LOGIC;
    signal Relu1D_1_U0_ap_continue : STD_LOGIC;
    signal Relu1D_1_U0_ap_idle : STD_LOGIC;
    signal Relu1D_1_U0_ap_ready : STD_LOGIC;
    signal Relu1D_1_U0_start_out : STD_LOGIC;
    signal Relu1D_1_U0_start_write : STD_LOGIC;
    signal Relu1D_1_U0_in_V_V_read : STD_LOGIC;
    signal Relu1D_1_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Relu1D_1_U0_out_V_V_write : STD_LOGIC;
    signal StreamingDataWidthCo_5_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthCo_5_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthCo_5_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthCo_5_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthCo_5_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthCo_5_U0_start_out : STD_LOGIC;
    signal StreamingDataWidthCo_5_U0_start_write : STD_LOGIC;
    signal StreamingDataWidthCo_5_U0_in_V_V_read : STD_LOGIC;
    signal StreamingDataWidthCo_5_U0_out_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal StreamingDataWidthCo_5_U0_out_V_V_write : STD_LOGIC;
    signal ResizeStream_U0_ap_start : STD_LOGIC;
    signal ResizeStream_U0_ap_done : STD_LOGIC;
    signal ResizeStream_U0_ap_continue : STD_LOGIC;
    signal ResizeStream_U0_ap_idle : STD_LOGIC;
    signal ResizeStream_U0_ap_ready : STD_LOGIC;
    signal ResizeStream_U0_in_V_V_read : STD_LOGIC;
    signal ResizeStream_U0_out_V_V_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal ResizeStream_U0_out_V_V_TVALID : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal inStr_V_V_full_n : STD_LOGIC;
    signal inStr_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal inStr_V_V_empty_n : STD_LOGIC;
    signal inStr2_V_V_full_n : STD_LOGIC;
    signal inStr2_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inStr2_V_V_empty_n : STD_LOGIC;
    signal in_1_V_V_full_n : STD_LOGIC;
    signal in_1_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal in_1_V_V_empty_n : STD_LOGIC;
    signal in_2_V_V_full_n : STD_LOGIC;
    signal in_2_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal in_2_V_V_empty_n : STD_LOGIC;
    signal cnv_1_V_V_full_n : STD_LOGIC;
    signal cnv_1_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_1_V_V_empty_n : STD_LOGIC;
    signal cnv_2PRL_V_V_full_n : STD_LOGIC;
    signal cnv_2PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_2PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_3PRL_V_V_full_n : STD_LOGIC;
    signal cnv_3PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_3PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_4_V_V_full_n : STD_LOGIC;
    signal cnv_4_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_4_V_V_empty_n : STD_LOGIC;
    signal in_3_V_V_full_n : STD_LOGIC;
    signal in_3_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal in_3_V_V_empty_n : STD_LOGIC;
    signal cnv_5_V_V_full_n : STD_LOGIC;
    signal cnv_5_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_5_V_V_empty_n : STD_LOGIC;
    signal cnv_6_V_V_full_n : STD_LOGIC;
    signal cnv_6_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_6_V_V_empty_n : STD_LOGIC;
    signal cnv_7PRL_V_V_full_n : STD_LOGIC;
    signal cnv_7PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_7PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_8PRL_V_V_full_n : STD_LOGIC;
    signal cnv_8PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_8PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_9_V_V_full_n : STD_LOGIC;
    signal cnv_9_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_9_V_V_empty_n : STD_LOGIC;
    signal cnv_10_V_V_full_n : STD_LOGIC;
    signal cnv_10_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_10_V_V_empty_n : STD_LOGIC;
    signal cnv_11PRL_V_V_full_n : STD_LOGIC;
    signal cnv_11PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_11PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_12PRL_V_V_full_n : STD_LOGIC;
    signal cnv_12PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_12PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_13_V_V_full_n : STD_LOGIC;
    signal cnv_13_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_13_V_V_empty_n : STD_LOGIC;
    signal cnv_14_V_V_full_n : STD_LOGIC;
    signal cnv_14_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_14_V_V_empty_n : STD_LOGIC;
    signal cnv_15PRL_V_V_full_n : STD_LOGIC;
    signal cnv_15PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_15PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_16PRL_V_V_full_n : STD_LOGIC;
    signal cnv_16PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_16PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_17_V_V_full_n : STD_LOGIC;
    signal cnv_17_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_17_V_V_empty_n : STD_LOGIC;
    signal cnv_18_V_V_full_n : STD_LOGIC;
    signal cnv_18_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_18_V_V_empty_n : STD_LOGIC;
    signal cnv_19_V_V_full_n : STD_LOGIC;
    signal cnv_19_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_19_V_V_empty_n : STD_LOGIC;
    signal cnv_20PRL_V_V_full_n : STD_LOGIC;
    signal cnv_20PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_20PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_21PRL_V_V_full_n : STD_LOGIC;
    signal cnv_21PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_21PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_22_V_V_full_n : STD_LOGIC;
    signal cnv_22_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_22_V_V_empty_n : STD_LOGIC;
    signal cnv_23_V_V_full_n : STD_LOGIC;
    signal cnv_23_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal cnv_23_V_V_empty_n : STD_LOGIC;
    signal cnv_24PRL_V_V_full_n : STD_LOGIC;
    signal cnv_24PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_24PRL_V_V_empty_n : STD_LOGIC;
    signal cnv_25PRL_V_V_full_n : STD_LOGIC;
    signal cnv_25PRL_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cnv_25PRL_V_V_empty_n : STD_LOGIC;
    signal outStr_V_V_full_n : STD_LOGIC;
    signal outStr_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal outStr_V_V_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_ResizeStream_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_ResizeStream_1_U0_full_n : STD_LOGIC;
    signal start_for_ResizeStream_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_ResizeStream_1_U0_empty_n : STD_LOGIC;
    signal start_for_CloneStream_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_CloneStream_U0_full_n : STD_LOGIC;
    signal start_for_CloneStream_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_CloneStream_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new_2_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new_2_U0_empty_n : STD_LOGIC;
    signal start_for_CloneStreamOnce_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_CloneStreamOnce_U0_full_n : STD_LOGIC;
    signal start_for_CloneStreamOnce_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_CloneStreamOnce_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DMac_new_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new_2_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DMac_new_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new_2_U0_empty_n : STD_LOGIC;
    signal start_for_Relu1D_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D_2_U0_full_n : STD_LOGIC;
    signal start_for_Relu1D_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D_2_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_4_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_4_U0_full_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_4_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_4_U0_empty_n : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_start_full_n : STD_LOGIC;
    signal StreamingDataWidthCo_4_U0_start_write : STD_LOGIC;
    signal start_for_grouperPE_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_grouperPE_U0_full_n : STD_LOGIC;
    signal start_for_grouperPE_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_grouperPE_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new406_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new406_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new406_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new406_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DMac_new407_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new407_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DMac_new407_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new407_U0_empty_n : STD_LOGIC;
    signal start_for_Relu1D408_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D408_U0_full_n : STD_LOGIC;
    signal start_for_Relu1D408_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D408_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_1_U0_full_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_1_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new410_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new410_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new410_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new410_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DMac_new411_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new411_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DMac_new411_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new411_U0_empty_n : STD_LOGIC;
    signal start_for_Relu1D412_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D412_U0_full_n : STD_LOGIC;
    signal start_for_Relu1D412_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D412_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_U0_full_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DMac_new_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DMac_new_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new_U0_empty_n : STD_LOGIC;
    signal start_for_Relu1D_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D_U0_full_n : STD_LOGIC;
    signal start_for_Relu1D_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_2_U0_full_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_2_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingMaxPool_Pre_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingMaxPool_Pre_U0_full_n : STD_LOGIC;
    signal start_for_StreamingMaxPool_Pre_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingMaxPool_Pre_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new414_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new414_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new414_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new414_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DMac_new415_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new415_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DMac_new415_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new415_U0_empty_n : STD_LOGIC;
    signal start_for_Relu1D416_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D416_U0_full_n : STD_LOGIC;
    signal start_for_Relu1D416_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D416_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_3_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_3_U0_full_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_3_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_3_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new_1_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DBuffer_new_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DBuffer_new_1_U0_empty_n : STD_LOGIC;
    signal start_for_Conv1DMac_new_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new_1_U0_full_n : STD_LOGIC;
    signal start_for_Conv1DMac_new_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Conv1DMac_new_1_U0_empty_n : STD_LOGIC;
    signal start_for_Relu1D_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D_1_U0_full_n : STD_LOGIC;
    signal start_for_Relu1D_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Relu1D_1_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_5_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_5_U0_full_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_5_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_5_U0_empty_n : STD_LOGIC;
    signal start_for_ResizeStream_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_ResizeStream_U0_full_n : STD_LOGIC;
    signal start_for_ResizeStream_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_ResizeStream_U0_empty_n : STD_LOGIC;
    signal ResizeStream_U0_start_full_n : STD_LOGIC;
    signal ResizeStream_U0_start_write : STD_LOGIC;

    component Mem2Stream IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        m_axi_in_V_AWVALID : OUT STD_LOGIC;
        m_axi_in_V_AWREADY : IN STD_LOGIC;
        m_axi_in_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_in_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_in_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_in_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_in_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_WVALID : OUT STD_LOGIC;
        m_axi_in_V_WREADY : IN STD_LOGIC;
        m_axi_in_V_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_in_V_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_in_V_WLAST : OUT STD_LOGIC;
        m_axi_in_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_ARVALID : OUT STD_LOGIC;
        m_axi_in_V_ARREADY : IN STD_LOGIC;
        m_axi_in_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_in_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_in_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_in_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_in_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_RVALID : IN STD_LOGIC;
        m_axi_in_V_RREADY : OUT STD_LOGIC;
        m_axi_in_V_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_in_V_RLAST : IN STD_LOGIC;
        m_axi_in_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_BVALID : IN STD_LOGIC;
        m_axi_in_V_BREADY : OUT STD_LOGIC;
        m_axi_in_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        in_V_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component ResizeStream_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component CloneStream IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        IN_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        IN_V_V_empty_n : IN STD_LOGIC;
        IN_V_V_read : OUT STD_LOGIC;
        out1_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out1_V_V_full_n : IN STD_LOGIC;
        out1_V_V_write : OUT STD_LOGIC;
        out2_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out2_V_V_full_n : IN STD_LOGIC;
        out2_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DBuffer_new_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DMac_new_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Relu1D_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthCo_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component CloneStreamOnce IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        IN_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        IN_V_V_empty_n : IN STD_LOGIC;
        IN_V_V_read : OUT STD_LOGIC;
        out1_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out1_V_V_full_n : IN STD_LOGIC;
        out1_V_V_write : OUT STD_LOGIC );
    end component;


    component grouperPE IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        inStream_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        inStream_V_V_empty_n : IN STD_LOGIC;
        inStream_V_V_read : OUT STD_LOGIC;
        features_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        features_V_V_empty_n : IN STD_LOGIC;
        features_V_V_read : OUT STD_LOGIC;
        outStream_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        outStream_V_V_full_n : IN STD_LOGIC;
        outStream_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DBuffer_new406 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DMac_new407 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Relu1D408 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthCo_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DBuffer_new410 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DMac_new411 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Relu1D412 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthCo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DBuffer_new IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DMac_new IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Relu1D IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthCo_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component StreamingMaxPool_Pre IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DBuffer_new414 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DMac_new415 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Relu1D416 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthCo_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DBuffer_new_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Conv1DMac_new_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Relu1D_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthCo_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component ResizeStream IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_V_V_TVALID : OUT STD_LOGIC;
        out_V_V_TREADY : IN STD_LOGIC );
    end component;


    component fifo_w64_d1024_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d1024_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d1024_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_ResizeSZio IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_CloneSt0iy IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DB1iI IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_CloneSt2iS IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DM3i2 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Relu1D_4jc IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Streami5jm IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_grouper6jw IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DB7jG IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DM8jQ IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Relu1D49j0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Streamibak IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DBbbk IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DMbck IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Relu1D4bdk IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Streamibek IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DBbfk IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DMbgk IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Relu1D_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Streamibhl IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Streamibil IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DBbjl IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DMbkl IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Relu1D4bll IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Streamibml IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DBbnm IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Conv1DMbom IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Relu1D_bpm IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Streamibqm IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_ResizeSbrm IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component computeS1_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        inPtr_V : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component computeS1_hostmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    computeS1_control_s_axi_U : component computeS1_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        inPtr_V => inPtr_V);

    computeS1_hostmem_m_axi_U : component computeS1_hostmem_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 64,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_HOSTMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_HOSTMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_HOSTMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_HOSTMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_HOSTMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_HOSTMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_HOSTMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_HOSTMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_HOSTMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_HOSTMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_HOSTMEM_CACHE_VALUE)
    port map (
        AWVALID => m_axi_hostmem_AWVALID,
        AWREADY => m_axi_hostmem_AWREADY,
        AWADDR => m_axi_hostmem_AWADDR,
        AWID => m_axi_hostmem_AWID,
        AWLEN => m_axi_hostmem_AWLEN,
        AWSIZE => m_axi_hostmem_AWSIZE,
        AWBURST => m_axi_hostmem_AWBURST,
        AWLOCK => m_axi_hostmem_AWLOCK,
        AWCACHE => m_axi_hostmem_AWCACHE,
        AWPROT => m_axi_hostmem_AWPROT,
        AWQOS => m_axi_hostmem_AWQOS,
        AWREGION => m_axi_hostmem_AWREGION,
        AWUSER => m_axi_hostmem_AWUSER,
        WVALID => m_axi_hostmem_WVALID,
        WREADY => m_axi_hostmem_WREADY,
        WDATA => m_axi_hostmem_WDATA,
        WSTRB => m_axi_hostmem_WSTRB,
        WLAST => m_axi_hostmem_WLAST,
        WID => m_axi_hostmem_WID,
        WUSER => m_axi_hostmem_WUSER,
        ARVALID => m_axi_hostmem_ARVALID,
        ARREADY => m_axi_hostmem_ARREADY,
        ARADDR => m_axi_hostmem_ARADDR,
        ARID => m_axi_hostmem_ARID,
        ARLEN => m_axi_hostmem_ARLEN,
        ARSIZE => m_axi_hostmem_ARSIZE,
        ARBURST => m_axi_hostmem_ARBURST,
        ARLOCK => m_axi_hostmem_ARLOCK,
        ARCACHE => m_axi_hostmem_ARCACHE,
        ARPROT => m_axi_hostmem_ARPROT,
        ARQOS => m_axi_hostmem_ARQOS,
        ARREGION => m_axi_hostmem_ARREGION,
        ARUSER => m_axi_hostmem_ARUSER,
        RVALID => m_axi_hostmem_RVALID,
        RREADY => m_axi_hostmem_RREADY,
        RDATA => m_axi_hostmem_RDATA,
        RLAST => m_axi_hostmem_RLAST,
        RID => m_axi_hostmem_RID,
        RUSER => m_axi_hostmem_RUSER,
        RRESP => m_axi_hostmem_RRESP,
        BVALID => m_axi_hostmem_BVALID,
        BREADY => m_axi_hostmem_BREADY,
        BRESP => m_axi_hostmem_BRESP,
        BID => m_axi_hostmem_BID,
        BUSER => m_axi_hostmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Mem2Stream_U0_m_axi_in_V_ARVALID,
        I_ARREADY => hostmem_ARREADY,
        I_ARADDR => Mem2Stream_U0_m_axi_in_V_ARADDR,
        I_ARID => Mem2Stream_U0_m_axi_in_V_ARID,
        I_ARLEN => Mem2Stream_U0_m_axi_in_V_ARLEN,
        I_ARSIZE => Mem2Stream_U0_m_axi_in_V_ARSIZE,
        I_ARLOCK => Mem2Stream_U0_m_axi_in_V_ARLOCK,
        I_ARCACHE => Mem2Stream_U0_m_axi_in_V_ARCACHE,
        I_ARQOS => Mem2Stream_U0_m_axi_in_V_ARQOS,
        I_ARPROT => Mem2Stream_U0_m_axi_in_V_ARPROT,
        I_ARUSER => Mem2Stream_U0_m_axi_in_V_ARUSER,
        I_ARBURST => Mem2Stream_U0_m_axi_in_V_ARBURST,
        I_ARREGION => Mem2Stream_U0_m_axi_in_V_ARREGION,
        I_RVALID => hostmem_RVALID,
        I_RREADY => Mem2Stream_U0_m_axi_in_V_RREADY,
        I_RDATA => hostmem_RDATA,
        I_RID => hostmem_RID,
        I_RUSER => hostmem_RUSER,
        I_RRESP => hostmem_RRESP,
        I_RLAST => hostmem_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => hostmem_AWREADY,
        I_AWADDR => ap_const_lv32_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => hostmem_WREADY,
        I_WDATA => ap_const_lv64_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv8_0,
        I_BVALID => hostmem_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => hostmem_BRESP,
        I_BID => hostmem_BID,
        I_BUSER => hostmem_BUSER);

    Mem2Stream_U0 : component Mem2Stream
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Mem2Stream_U0_ap_start,
        start_full_n => start_for_ResizeStream_1_U0_full_n,
        ap_done => Mem2Stream_U0_ap_done,
        ap_continue => Mem2Stream_U0_ap_continue,
        ap_idle => Mem2Stream_U0_ap_idle,
        ap_ready => Mem2Stream_U0_ap_ready,
        start_out => Mem2Stream_U0_start_out,
        start_write => Mem2Stream_U0_start_write,
        m_axi_in_V_AWVALID => Mem2Stream_U0_m_axi_in_V_AWVALID,
        m_axi_in_V_AWREADY => ap_const_logic_0,
        m_axi_in_V_AWADDR => Mem2Stream_U0_m_axi_in_V_AWADDR,
        m_axi_in_V_AWID => Mem2Stream_U0_m_axi_in_V_AWID,
        m_axi_in_V_AWLEN => Mem2Stream_U0_m_axi_in_V_AWLEN,
        m_axi_in_V_AWSIZE => Mem2Stream_U0_m_axi_in_V_AWSIZE,
        m_axi_in_V_AWBURST => Mem2Stream_U0_m_axi_in_V_AWBURST,
        m_axi_in_V_AWLOCK => Mem2Stream_U0_m_axi_in_V_AWLOCK,
        m_axi_in_V_AWCACHE => Mem2Stream_U0_m_axi_in_V_AWCACHE,
        m_axi_in_V_AWPROT => Mem2Stream_U0_m_axi_in_V_AWPROT,
        m_axi_in_V_AWQOS => Mem2Stream_U0_m_axi_in_V_AWQOS,
        m_axi_in_V_AWREGION => Mem2Stream_U0_m_axi_in_V_AWREGION,
        m_axi_in_V_AWUSER => Mem2Stream_U0_m_axi_in_V_AWUSER,
        m_axi_in_V_WVALID => Mem2Stream_U0_m_axi_in_V_WVALID,
        m_axi_in_V_WREADY => ap_const_logic_0,
        m_axi_in_V_WDATA => Mem2Stream_U0_m_axi_in_V_WDATA,
        m_axi_in_V_WSTRB => Mem2Stream_U0_m_axi_in_V_WSTRB,
        m_axi_in_V_WLAST => Mem2Stream_U0_m_axi_in_V_WLAST,
        m_axi_in_V_WID => Mem2Stream_U0_m_axi_in_V_WID,
        m_axi_in_V_WUSER => Mem2Stream_U0_m_axi_in_V_WUSER,
        m_axi_in_V_ARVALID => Mem2Stream_U0_m_axi_in_V_ARVALID,
        m_axi_in_V_ARREADY => hostmem_ARREADY,
        m_axi_in_V_ARADDR => Mem2Stream_U0_m_axi_in_V_ARADDR,
        m_axi_in_V_ARID => Mem2Stream_U0_m_axi_in_V_ARID,
        m_axi_in_V_ARLEN => Mem2Stream_U0_m_axi_in_V_ARLEN,
        m_axi_in_V_ARSIZE => Mem2Stream_U0_m_axi_in_V_ARSIZE,
        m_axi_in_V_ARBURST => Mem2Stream_U0_m_axi_in_V_ARBURST,
        m_axi_in_V_ARLOCK => Mem2Stream_U0_m_axi_in_V_ARLOCK,
        m_axi_in_V_ARCACHE => Mem2Stream_U0_m_axi_in_V_ARCACHE,
        m_axi_in_V_ARPROT => Mem2Stream_U0_m_axi_in_V_ARPROT,
        m_axi_in_V_ARQOS => Mem2Stream_U0_m_axi_in_V_ARQOS,
        m_axi_in_V_ARREGION => Mem2Stream_U0_m_axi_in_V_ARREGION,
        m_axi_in_V_ARUSER => Mem2Stream_U0_m_axi_in_V_ARUSER,
        m_axi_in_V_RVALID => hostmem_RVALID,
        m_axi_in_V_RREADY => Mem2Stream_U0_m_axi_in_V_RREADY,
        m_axi_in_V_RDATA => hostmem_RDATA,
        m_axi_in_V_RLAST => hostmem_RLAST,
        m_axi_in_V_RID => hostmem_RID,
        m_axi_in_V_RUSER => hostmem_RUSER,
        m_axi_in_V_RRESP => hostmem_RRESP,
        m_axi_in_V_BVALID => ap_const_logic_0,
        m_axi_in_V_BREADY => Mem2Stream_U0_m_axi_in_V_BREADY,
        m_axi_in_V_BRESP => ap_const_lv2_0,
        m_axi_in_V_BID => ap_const_lv1_0,
        m_axi_in_V_BUSER => ap_const_lv1_0,
        in_V_offset => inPtr_V,
        out_V_V_din => Mem2Stream_U0_out_V_V_din,
        out_V_V_full_n => inStr_V_V_full_n,
        out_V_V_write => Mem2Stream_U0_out_V_V_write);

    ResizeStream_1_U0 : component ResizeStream_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => ResizeStream_1_U0_ap_start,
        start_full_n => start_for_CloneStream_U0_full_n,
        ap_done => ResizeStream_1_U0_ap_done,
        ap_continue => ResizeStream_1_U0_ap_continue,
        ap_idle => ResizeStream_1_U0_ap_idle,
        ap_ready => ResizeStream_1_U0_ap_ready,
        start_out => ResizeStream_1_U0_start_out,
        start_write => ResizeStream_1_U0_start_write,
        in_V_V_dout => inStr_V_V_dout,
        in_V_V_empty_n => inStr_V_V_empty_n,
        in_V_V_read => ResizeStream_1_U0_in_V_V_read,
        out_V_V_din => ResizeStream_1_U0_out_V_V_din,
        out_V_V_full_n => inStr2_V_V_full_n,
        out_V_V_write => ResizeStream_1_U0_out_V_V_write);

    CloneStream_U0 : component CloneStream
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => CloneStream_U0_ap_start,
        start_full_n => CloneStream_U0_start_full_n,
        ap_done => CloneStream_U0_ap_done,
        ap_continue => CloneStream_U0_ap_continue,
        ap_idle => CloneStream_U0_ap_idle,
        ap_ready => CloneStream_U0_ap_ready,
        start_out => CloneStream_U0_start_out,
        start_write => CloneStream_U0_start_write,
        IN_V_V_dout => inStr2_V_V_dout,
        IN_V_V_empty_n => inStr2_V_V_empty_n,
        IN_V_V_read => CloneStream_U0_IN_V_V_read,
        out1_V_V_din => CloneStream_U0_out1_V_V_din,
        out1_V_V_full_n => in_1_V_V_full_n,
        out1_V_V_write => CloneStream_U0_out1_V_V_write,
        out2_V_V_din => CloneStream_U0_out2_V_V_din,
        out2_V_V_full_n => in_2_V_V_full_n,
        out2_V_V_write => CloneStream_U0_out2_V_V_write);

    Conv1DBuffer_new_2_U0 : component Conv1DBuffer_new_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DBuffer_new_2_U0_ap_start,
        start_full_n => start_for_Conv1DMac_new_2_U0_full_n,
        ap_done => Conv1DBuffer_new_2_U0_ap_done,
        ap_continue => Conv1DBuffer_new_2_U0_ap_continue,
        ap_idle => Conv1DBuffer_new_2_U0_ap_idle,
        ap_ready => Conv1DBuffer_new_2_U0_ap_ready,
        start_out => Conv1DBuffer_new_2_U0_start_out,
        start_write => Conv1DBuffer_new_2_U0_start_write,
        in_V_V_dout => in_1_V_V_dout,
        in_V_V_empty_n => in_1_V_V_empty_n,
        in_V_V_read => Conv1DBuffer_new_2_U0_in_V_V_read,
        out_V_V_din => Conv1DBuffer_new_2_U0_out_V_V_din,
        out_V_V_full_n => cnv_1_V_V_full_n,
        out_V_V_write => Conv1DBuffer_new_2_U0_out_V_V_write);

    Conv1DMac_new_2_U0 : component Conv1DMac_new_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DMac_new_2_U0_ap_start,
        start_full_n => start_for_Relu1D_2_U0_full_n,
        ap_done => Conv1DMac_new_2_U0_ap_done,
        ap_continue => Conv1DMac_new_2_U0_ap_continue,
        ap_idle => Conv1DMac_new_2_U0_ap_idle,
        ap_ready => Conv1DMac_new_2_U0_ap_ready,
        start_out => Conv1DMac_new_2_U0_start_out,
        start_write => Conv1DMac_new_2_U0_start_write,
        in_V_V_dout => cnv_1_V_V_dout,
        in_V_V_empty_n => cnv_1_V_V_empty_n,
        in_V_V_read => Conv1DMac_new_2_U0_in_V_V_read,
        out_V_V_din => Conv1DMac_new_2_U0_out_V_V_din,
        out_V_V_full_n => cnv_2PRL_V_V_full_n,
        out_V_V_write => Conv1DMac_new_2_U0_out_V_V_write);

    Relu1D_2_U0 : component Relu1D_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Relu1D_2_U0_ap_start,
        start_full_n => start_for_StreamingDataWidthCo_4_U0_full_n,
        ap_done => Relu1D_2_U0_ap_done,
        ap_continue => Relu1D_2_U0_ap_continue,
        ap_idle => Relu1D_2_U0_ap_idle,
        ap_ready => Relu1D_2_U0_ap_ready,
        start_out => Relu1D_2_U0_start_out,
        start_write => Relu1D_2_U0_start_write,
        in_V_V_dout => cnv_2PRL_V_V_dout,
        in_V_V_empty_n => cnv_2PRL_V_V_empty_n,
        in_V_V_read => Relu1D_2_U0_in_V_V_read,
        out_V_V_din => Relu1D_2_U0_out_V_V_din,
        out_V_V_full_n => cnv_3PRL_V_V_full_n,
        out_V_V_write => Relu1D_2_U0_out_V_V_write);

    StreamingDataWidthCo_4_U0 : component StreamingDataWidthCo_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingDataWidthCo_4_U0_ap_start,
        ap_done => StreamingDataWidthCo_4_U0_ap_done,
        ap_continue => StreamingDataWidthCo_4_U0_ap_continue,
        ap_idle => StreamingDataWidthCo_4_U0_ap_idle,
        ap_ready => StreamingDataWidthCo_4_U0_ap_ready,
        in_V_V_dout => cnv_3PRL_V_V_dout,
        in_V_V_empty_n => cnv_3PRL_V_V_empty_n,
        in_V_V_read => StreamingDataWidthCo_4_U0_in_V_V_read,
        out_V_V_din => StreamingDataWidthCo_4_U0_out_V_V_din,
        out_V_V_full_n => cnv_4_V_V_full_n,
        out_V_V_write => StreamingDataWidthCo_4_U0_out_V_V_write);

    CloneStreamOnce_U0 : component CloneStreamOnce
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => CloneStreamOnce_U0_ap_start,
        start_full_n => start_for_grouperPE_U0_full_n,
        ap_done => CloneStreamOnce_U0_ap_done,
        ap_continue => CloneStreamOnce_U0_ap_continue,
        ap_idle => CloneStreamOnce_U0_ap_idle,
        ap_ready => CloneStreamOnce_U0_ap_ready,
        start_out => CloneStreamOnce_U0_start_out,
        start_write => CloneStreamOnce_U0_start_write,
        IN_V_V_dout => in_2_V_V_dout,
        IN_V_V_empty_n => in_2_V_V_empty_n,
        IN_V_V_read => CloneStreamOnce_U0_IN_V_V_read,
        out1_V_V_din => CloneStreamOnce_U0_out1_V_V_din,
        out1_V_V_full_n => in_3_V_V_full_n,
        out1_V_V_write => CloneStreamOnce_U0_out1_V_V_write);

    grouperPE_U0 : component grouperPE
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grouperPE_U0_ap_start,
        start_full_n => start_for_Conv1DBuffer_new406_U0_full_n,
        ap_done => grouperPE_U0_ap_done,
        ap_continue => grouperPE_U0_ap_continue,
        ap_idle => grouperPE_U0_ap_idle,
        ap_ready => grouperPE_U0_ap_ready,
        start_out => grouperPE_U0_start_out,
        start_write => grouperPE_U0_start_write,
        inStream_V_V_dout => in_3_V_V_dout,
        inStream_V_V_empty_n => in_3_V_V_empty_n,
        inStream_V_V_read => grouperPE_U0_inStream_V_V_read,
        features_V_V_dout => cnv_4_V_V_dout,
        features_V_V_empty_n => cnv_4_V_V_empty_n,
        features_V_V_read => grouperPE_U0_features_V_V_read,
        outStream_V_V_din => grouperPE_U0_outStream_V_V_din,
        outStream_V_V_full_n => cnv_5_V_V_full_n,
        outStream_V_V_write => grouperPE_U0_outStream_V_V_write);

    Conv1DBuffer_new406_U0 : component Conv1DBuffer_new406
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DBuffer_new406_U0_ap_start,
        start_full_n => start_for_Conv1DMac_new407_U0_full_n,
        ap_done => Conv1DBuffer_new406_U0_ap_done,
        ap_continue => Conv1DBuffer_new406_U0_ap_continue,
        ap_idle => Conv1DBuffer_new406_U0_ap_idle,
        ap_ready => Conv1DBuffer_new406_U0_ap_ready,
        start_out => Conv1DBuffer_new406_U0_start_out,
        start_write => Conv1DBuffer_new406_U0_start_write,
        in_V_V_dout => cnv_5_V_V_dout,
        in_V_V_empty_n => cnv_5_V_V_empty_n,
        in_V_V_read => Conv1DBuffer_new406_U0_in_V_V_read,
        out_V_V_din => Conv1DBuffer_new406_U0_out_V_V_din,
        out_V_V_full_n => cnv_6_V_V_full_n,
        out_V_V_write => Conv1DBuffer_new406_U0_out_V_V_write);

    Conv1DMac_new407_U0 : component Conv1DMac_new407
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DMac_new407_U0_ap_start,
        start_full_n => start_for_Relu1D408_U0_full_n,
        ap_done => Conv1DMac_new407_U0_ap_done,
        ap_continue => Conv1DMac_new407_U0_ap_continue,
        ap_idle => Conv1DMac_new407_U0_ap_idle,
        ap_ready => Conv1DMac_new407_U0_ap_ready,
        start_out => Conv1DMac_new407_U0_start_out,
        start_write => Conv1DMac_new407_U0_start_write,
        in_V_V_dout => cnv_6_V_V_dout,
        in_V_V_empty_n => cnv_6_V_V_empty_n,
        in_V_V_read => Conv1DMac_new407_U0_in_V_V_read,
        out_V_V_din => Conv1DMac_new407_U0_out_V_V_din,
        out_V_V_full_n => cnv_7PRL_V_V_full_n,
        out_V_V_write => Conv1DMac_new407_U0_out_V_V_write);

    Relu1D408_U0 : component Relu1D408
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Relu1D408_U0_ap_start,
        start_full_n => start_for_StreamingDataWidthCo_1_U0_full_n,
        ap_done => Relu1D408_U0_ap_done,
        ap_continue => Relu1D408_U0_ap_continue,
        ap_idle => Relu1D408_U0_ap_idle,
        ap_ready => Relu1D408_U0_ap_ready,
        start_out => Relu1D408_U0_start_out,
        start_write => Relu1D408_U0_start_write,
        in_V_V_dout => cnv_7PRL_V_V_dout,
        in_V_V_empty_n => cnv_7PRL_V_V_empty_n,
        in_V_V_read => Relu1D408_U0_in_V_V_read,
        out_V_V_din => Relu1D408_U0_out_V_V_din,
        out_V_V_full_n => cnv_8PRL_V_V_full_n,
        out_V_V_write => Relu1D408_U0_out_V_V_write);

    StreamingDataWidthCo_1_U0 : component StreamingDataWidthCo_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingDataWidthCo_1_U0_ap_start,
        start_full_n => start_for_Conv1DBuffer_new410_U0_full_n,
        ap_done => StreamingDataWidthCo_1_U0_ap_done,
        ap_continue => StreamingDataWidthCo_1_U0_ap_continue,
        ap_idle => StreamingDataWidthCo_1_U0_ap_idle,
        ap_ready => StreamingDataWidthCo_1_U0_ap_ready,
        start_out => StreamingDataWidthCo_1_U0_start_out,
        start_write => StreamingDataWidthCo_1_U0_start_write,
        in_V_V_dout => cnv_8PRL_V_V_dout,
        in_V_V_empty_n => cnv_8PRL_V_V_empty_n,
        in_V_V_read => StreamingDataWidthCo_1_U0_in_V_V_read,
        out_V_V_din => StreamingDataWidthCo_1_U0_out_V_V_din,
        out_V_V_full_n => cnv_9_V_V_full_n,
        out_V_V_write => StreamingDataWidthCo_1_U0_out_V_V_write);

    Conv1DBuffer_new410_U0 : component Conv1DBuffer_new410
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DBuffer_new410_U0_ap_start,
        start_full_n => start_for_Conv1DMac_new411_U0_full_n,
        ap_done => Conv1DBuffer_new410_U0_ap_done,
        ap_continue => Conv1DBuffer_new410_U0_ap_continue,
        ap_idle => Conv1DBuffer_new410_U0_ap_idle,
        ap_ready => Conv1DBuffer_new410_U0_ap_ready,
        start_out => Conv1DBuffer_new410_U0_start_out,
        start_write => Conv1DBuffer_new410_U0_start_write,
        in_V_V_dout => cnv_9_V_V_dout,
        in_V_V_empty_n => cnv_9_V_V_empty_n,
        in_V_V_read => Conv1DBuffer_new410_U0_in_V_V_read,
        out_V_V_din => Conv1DBuffer_new410_U0_out_V_V_din,
        out_V_V_full_n => cnv_10_V_V_full_n,
        out_V_V_write => Conv1DBuffer_new410_U0_out_V_V_write);

    Conv1DMac_new411_U0 : component Conv1DMac_new411
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DMac_new411_U0_ap_start,
        start_full_n => start_for_Relu1D412_U0_full_n,
        ap_done => Conv1DMac_new411_U0_ap_done,
        ap_continue => Conv1DMac_new411_U0_ap_continue,
        ap_idle => Conv1DMac_new411_U0_ap_idle,
        ap_ready => Conv1DMac_new411_U0_ap_ready,
        start_out => Conv1DMac_new411_U0_start_out,
        start_write => Conv1DMac_new411_U0_start_write,
        in_V_V_dout => cnv_10_V_V_dout,
        in_V_V_empty_n => cnv_10_V_V_empty_n,
        in_V_V_read => Conv1DMac_new411_U0_in_V_V_read,
        out_V_V_din => Conv1DMac_new411_U0_out_V_V_din,
        out_V_V_full_n => cnv_11PRL_V_V_full_n,
        out_V_V_write => Conv1DMac_new411_U0_out_V_V_write);

    Relu1D412_U0 : component Relu1D412
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Relu1D412_U0_ap_start,
        start_full_n => start_for_StreamingDataWidthCo_U0_full_n,
        ap_done => Relu1D412_U0_ap_done,
        ap_continue => Relu1D412_U0_ap_continue,
        ap_idle => Relu1D412_U0_ap_idle,
        ap_ready => Relu1D412_U0_ap_ready,
        start_out => Relu1D412_U0_start_out,
        start_write => Relu1D412_U0_start_write,
        in_V_V_dout => cnv_11PRL_V_V_dout,
        in_V_V_empty_n => cnv_11PRL_V_V_empty_n,
        in_V_V_read => Relu1D412_U0_in_V_V_read,
        out_V_V_din => Relu1D412_U0_out_V_V_din,
        out_V_V_full_n => cnv_12PRL_V_V_full_n,
        out_V_V_write => Relu1D412_U0_out_V_V_write);

    StreamingDataWidthCo_U0 : component StreamingDataWidthCo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingDataWidthCo_U0_ap_start,
        start_full_n => start_for_Conv1DBuffer_new_U0_full_n,
        ap_done => StreamingDataWidthCo_U0_ap_done,
        ap_continue => StreamingDataWidthCo_U0_ap_continue,
        ap_idle => StreamingDataWidthCo_U0_ap_idle,
        ap_ready => StreamingDataWidthCo_U0_ap_ready,
        start_out => StreamingDataWidthCo_U0_start_out,
        start_write => StreamingDataWidthCo_U0_start_write,
        in_V_V_dout => cnv_12PRL_V_V_dout,
        in_V_V_empty_n => cnv_12PRL_V_V_empty_n,
        in_V_V_read => StreamingDataWidthCo_U0_in_V_V_read,
        out_V_V_din => StreamingDataWidthCo_U0_out_V_V_din,
        out_V_V_full_n => cnv_13_V_V_full_n,
        out_V_V_write => StreamingDataWidthCo_U0_out_V_V_write);

    Conv1DBuffer_new_U0 : component Conv1DBuffer_new
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DBuffer_new_U0_ap_start,
        start_full_n => start_for_Conv1DMac_new_U0_full_n,
        ap_done => Conv1DBuffer_new_U0_ap_done,
        ap_continue => Conv1DBuffer_new_U0_ap_continue,
        ap_idle => Conv1DBuffer_new_U0_ap_idle,
        ap_ready => Conv1DBuffer_new_U0_ap_ready,
        start_out => Conv1DBuffer_new_U0_start_out,
        start_write => Conv1DBuffer_new_U0_start_write,
        in_V_V_dout => cnv_13_V_V_dout,
        in_V_V_empty_n => cnv_13_V_V_empty_n,
        in_V_V_read => Conv1DBuffer_new_U0_in_V_V_read,
        out_V_V_din => Conv1DBuffer_new_U0_out_V_V_din,
        out_V_V_full_n => cnv_14_V_V_full_n,
        out_V_V_write => Conv1DBuffer_new_U0_out_V_V_write);

    Conv1DMac_new_U0 : component Conv1DMac_new
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DMac_new_U0_ap_start,
        start_full_n => start_for_Relu1D_U0_full_n,
        ap_done => Conv1DMac_new_U0_ap_done,
        ap_continue => Conv1DMac_new_U0_ap_continue,
        ap_idle => Conv1DMac_new_U0_ap_idle,
        ap_ready => Conv1DMac_new_U0_ap_ready,
        start_out => Conv1DMac_new_U0_start_out,
        start_write => Conv1DMac_new_U0_start_write,
        in_V_V_dout => cnv_14_V_V_dout,
        in_V_V_empty_n => cnv_14_V_V_empty_n,
        in_V_V_read => Conv1DMac_new_U0_in_V_V_read,
        out_V_V_din => Conv1DMac_new_U0_out_V_V_din,
        out_V_V_full_n => cnv_15PRL_V_V_full_n,
        out_V_V_write => Conv1DMac_new_U0_out_V_V_write);

    Relu1D_U0 : component Relu1D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Relu1D_U0_ap_start,
        start_full_n => start_for_StreamingDataWidthCo_2_U0_full_n,
        ap_done => Relu1D_U0_ap_done,
        ap_continue => Relu1D_U0_ap_continue,
        ap_idle => Relu1D_U0_ap_idle,
        ap_ready => Relu1D_U0_ap_ready,
        start_out => Relu1D_U0_start_out,
        start_write => Relu1D_U0_start_write,
        in_V_V_dout => cnv_15PRL_V_V_dout,
        in_V_V_empty_n => cnv_15PRL_V_V_empty_n,
        in_V_V_read => Relu1D_U0_in_V_V_read,
        out_V_V_din => Relu1D_U0_out_V_V_din,
        out_V_V_full_n => cnv_16PRL_V_V_full_n,
        out_V_V_write => Relu1D_U0_out_V_V_write);

    StreamingDataWidthCo_2_U0 : component StreamingDataWidthCo_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingDataWidthCo_2_U0_ap_start,
        start_full_n => start_for_StreamingMaxPool_Pre_U0_full_n,
        ap_done => StreamingDataWidthCo_2_U0_ap_done,
        ap_continue => StreamingDataWidthCo_2_U0_ap_continue,
        ap_idle => StreamingDataWidthCo_2_U0_ap_idle,
        ap_ready => StreamingDataWidthCo_2_U0_ap_ready,
        start_out => StreamingDataWidthCo_2_U0_start_out,
        start_write => StreamingDataWidthCo_2_U0_start_write,
        in_V_V_dout => cnv_16PRL_V_V_dout,
        in_V_V_empty_n => cnv_16PRL_V_V_empty_n,
        in_V_V_read => StreamingDataWidthCo_2_U0_in_V_V_read,
        out_V_V_din => StreamingDataWidthCo_2_U0_out_V_V_din,
        out_V_V_full_n => cnv_17_V_V_full_n,
        out_V_V_write => StreamingDataWidthCo_2_U0_out_V_V_write);

    StreamingMaxPool_Pre_U0 : component StreamingMaxPool_Pre
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingMaxPool_Pre_U0_ap_start,
        start_full_n => start_for_Conv1DBuffer_new414_U0_full_n,
        ap_done => StreamingMaxPool_Pre_U0_ap_done,
        ap_continue => StreamingMaxPool_Pre_U0_ap_continue,
        ap_idle => StreamingMaxPool_Pre_U0_ap_idle,
        ap_ready => StreamingMaxPool_Pre_U0_ap_ready,
        start_out => StreamingMaxPool_Pre_U0_start_out,
        start_write => StreamingMaxPool_Pre_U0_start_write,
        in_V_V_dout => cnv_17_V_V_dout,
        in_V_V_empty_n => cnv_17_V_V_empty_n,
        in_V_V_read => StreamingMaxPool_Pre_U0_in_V_V_read,
        out_V_V_din => StreamingMaxPool_Pre_U0_out_V_V_din,
        out_V_V_full_n => cnv_18_V_V_full_n,
        out_V_V_write => StreamingMaxPool_Pre_U0_out_V_V_write);

    Conv1DBuffer_new414_U0 : component Conv1DBuffer_new414
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DBuffer_new414_U0_ap_start,
        start_full_n => start_for_Conv1DMac_new415_U0_full_n,
        ap_done => Conv1DBuffer_new414_U0_ap_done,
        ap_continue => Conv1DBuffer_new414_U0_ap_continue,
        ap_idle => Conv1DBuffer_new414_U0_ap_idle,
        ap_ready => Conv1DBuffer_new414_U0_ap_ready,
        start_out => Conv1DBuffer_new414_U0_start_out,
        start_write => Conv1DBuffer_new414_U0_start_write,
        in_V_V_dout => cnv_18_V_V_dout,
        in_V_V_empty_n => cnv_18_V_V_empty_n,
        in_V_V_read => Conv1DBuffer_new414_U0_in_V_V_read,
        out_V_V_din => Conv1DBuffer_new414_U0_out_V_V_din,
        out_V_V_full_n => cnv_19_V_V_full_n,
        out_V_V_write => Conv1DBuffer_new414_U0_out_V_V_write);

    Conv1DMac_new415_U0 : component Conv1DMac_new415
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DMac_new415_U0_ap_start,
        start_full_n => start_for_Relu1D416_U0_full_n,
        ap_done => Conv1DMac_new415_U0_ap_done,
        ap_continue => Conv1DMac_new415_U0_ap_continue,
        ap_idle => Conv1DMac_new415_U0_ap_idle,
        ap_ready => Conv1DMac_new415_U0_ap_ready,
        start_out => Conv1DMac_new415_U0_start_out,
        start_write => Conv1DMac_new415_U0_start_write,
        in_V_V_dout => cnv_19_V_V_dout,
        in_V_V_empty_n => cnv_19_V_V_empty_n,
        in_V_V_read => Conv1DMac_new415_U0_in_V_V_read,
        out_V_V_din => Conv1DMac_new415_U0_out_V_V_din,
        out_V_V_full_n => cnv_20PRL_V_V_full_n,
        out_V_V_write => Conv1DMac_new415_U0_out_V_V_write);

    Relu1D416_U0 : component Relu1D416
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Relu1D416_U0_ap_start,
        start_full_n => start_for_StreamingDataWidthCo_3_U0_full_n,
        ap_done => Relu1D416_U0_ap_done,
        ap_continue => Relu1D416_U0_ap_continue,
        ap_idle => Relu1D416_U0_ap_idle,
        ap_ready => Relu1D416_U0_ap_ready,
        start_out => Relu1D416_U0_start_out,
        start_write => Relu1D416_U0_start_write,
        in_V_V_dout => cnv_20PRL_V_V_dout,
        in_V_V_empty_n => cnv_20PRL_V_V_empty_n,
        in_V_V_read => Relu1D416_U0_in_V_V_read,
        out_V_V_din => Relu1D416_U0_out_V_V_din,
        out_V_V_full_n => cnv_21PRL_V_V_full_n,
        out_V_V_write => Relu1D416_U0_out_V_V_write);

    StreamingDataWidthCo_3_U0 : component StreamingDataWidthCo_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingDataWidthCo_3_U0_ap_start,
        start_full_n => start_for_Conv1DBuffer_new_1_U0_full_n,
        ap_done => StreamingDataWidthCo_3_U0_ap_done,
        ap_continue => StreamingDataWidthCo_3_U0_ap_continue,
        ap_idle => StreamingDataWidthCo_3_U0_ap_idle,
        ap_ready => StreamingDataWidthCo_3_U0_ap_ready,
        start_out => StreamingDataWidthCo_3_U0_start_out,
        start_write => StreamingDataWidthCo_3_U0_start_write,
        in_V_V_dout => cnv_21PRL_V_V_dout,
        in_V_V_empty_n => cnv_21PRL_V_V_empty_n,
        in_V_V_read => StreamingDataWidthCo_3_U0_in_V_V_read,
        out_V_V_din => StreamingDataWidthCo_3_U0_out_V_V_din,
        out_V_V_full_n => cnv_22_V_V_full_n,
        out_V_V_write => StreamingDataWidthCo_3_U0_out_V_V_write);

    Conv1DBuffer_new_1_U0 : component Conv1DBuffer_new_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DBuffer_new_1_U0_ap_start,
        start_full_n => start_for_Conv1DMac_new_1_U0_full_n,
        ap_done => Conv1DBuffer_new_1_U0_ap_done,
        ap_continue => Conv1DBuffer_new_1_U0_ap_continue,
        ap_idle => Conv1DBuffer_new_1_U0_ap_idle,
        ap_ready => Conv1DBuffer_new_1_U0_ap_ready,
        start_out => Conv1DBuffer_new_1_U0_start_out,
        start_write => Conv1DBuffer_new_1_U0_start_write,
        in_V_V_dout => cnv_22_V_V_dout,
        in_V_V_empty_n => cnv_22_V_V_empty_n,
        in_V_V_read => Conv1DBuffer_new_1_U0_in_V_V_read,
        out_V_V_din => Conv1DBuffer_new_1_U0_out_V_V_din,
        out_V_V_full_n => cnv_23_V_V_full_n,
        out_V_V_write => Conv1DBuffer_new_1_U0_out_V_V_write);

    Conv1DMac_new_1_U0 : component Conv1DMac_new_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Conv1DMac_new_1_U0_ap_start,
        start_full_n => start_for_Relu1D_1_U0_full_n,
        ap_done => Conv1DMac_new_1_U0_ap_done,
        ap_continue => Conv1DMac_new_1_U0_ap_continue,
        ap_idle => Conv1DMac_new_1_U0_ap_idle,
        ap_ready => Conv1DMac_new_1_U0_ap_ready,
        start_out => Conv1DMac_new_1_U0_start_out,
        start_write => Conv1DMac_new_1_U0_start_write,
        in_V_V_dout => cnv_23_V_V_dout,
        in_V_V_empty_n => cnv_23_V_V_empty_n,
        in_V_V_read => Conv1DMac_new_1_U0_in_V_V_read,
        out_V_V_din => Conv1DMac_new_1_U0_out_V_V_din,
        out_V_V_full_n => cnv_24PRL_V_V_full_n,
        out_V_V_write => Conv1DMac_new_1_U0_out_V_V_write);

    Relu1D_1_U0 : component Relu1D_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Relu1D_1_U0_ap_start,
        start_full_n => start_for_StreamingDataWidthCo_5_U0_full_n,
        ap_done => Relu1D_1_U0_ap_done,
        ap_continue => Relu1D_1_U0_ap_continue,
        ap_idle => Relu1D_1_U0_ap_idle,
        ap_ready => Relu1D_1_U0_ap_ready,
        start_out => Relu1D_1_U0_start_out,
        start_write => Relu1D_1_U0_start_write,
        in_V_V_dout => cnv_24PRL_V_V_dout,
        in_V_V_empty_n => cnv_24PRL_V_V_empty_n,
        in_V_V_read => Relu1D_1_U0_in_V_V_read,
        out_V_V_din => Relu1D_1_U0_out_V_V_din,
        out_V_V_full_n => cnv_25PRL_V_V_full_n,
        out_V_V_write => Relu1D_1_U0_out_V_V_write);

    StreamingDataWidthCo_5_U0 : component StreamingDataWidthCo_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => StreamingDataWidthCo_5_U0_ap_start,
        start_full_n => start_for_ResizeStream_U0_full_n,
        ap_done => StreamingDataWidthCo_5_U0_ap_done,
        ap_continue => StreamingDataWidthCo_5_U0_ap_continue,
        ap_idle => StreamingDataWidthCo_5_U0_ap_idle,
        ap_ready => StreamingDataWidthCo_5_U0_ap_ready,
        start_out => StreamingDataWidthCo_5_U0_start_out,
        start_write => StreamingDataWidthCo_5_U0_start_write,
        in_V_V_dout => cnv_25PRL_V_V_dout,
        in_V_V_empty_n => cnv_25PRL_V_V_empty_n,
        in_V_V_read => StreamingDataWidthCo_5_U0_in_V_V_read,
        out_V_V_din => StreamingDataWidthCo_5_U0_out_V_V_din,
        out_V_V_full_n => outStr_V_V_full_n,
        out_V_V_write => StreamingDataWidthCo_5_U0_out_V_V_write);

    ResizeStream_U0 : component ResizeStream
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => ResizeStream_U0_ap_start,
        ap_done => ResizeStream_U0_ap_done,
        ap_continue => ResizeStream_U0_ap_continue,
        ap_idle => ResizeStream_U0_ap_idle,
        ap_ready => ResizeStream_U0_ap_ready,
        in_V_V_dout => outStr_V_V_dout,
        in_V_V_empty_n => outStr_V_V_empty_n,
        in_V_V_read => ResizeStream_U0_in_V_V_read,
        out_V_V_TDATA => ResizeStream_U0_out_V_V_TDATA,
        out_V_V_TVALID => ResizeStream_U0_out_V_V_TVALID,
        out_V_V_TREADY => s1_out_V_V_TREADY);

    inStr_V_V_U : component fifo_w64_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Mem2Stream_U0_out_V_V_din,
        if_full_n => inStr_V_V_full_n,
        if_write => Mem2Stream_U0_out_V_V_write,
        if_dout => inStr_V_V_dout,
        if_empty_n => inStr_V_V_empty_n,
        if_read => ResizeStream_1_U0_in_V_V_read);

    inStr2_V_V_U : component fifo_w8_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ResizeStream_1_U0_out_V_V_din,
        if_full_n => inStr2_V_V_full_n,
        if_write => ResizeStream_1_U0_out_V_V_write,
        if_dout => inStr2_V_V_dout,
        if_empty_n => inStr2_V_V_empty_n,
        if_read => CloneStream_U0_IN_V_V_read);

    in_1_V_V_U : component fifo_w8_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => CloneStream_U0_out1_V_V_din,
        if_full_n => in_1_V_V_full_n,
        if_write => CloneStream_U0_out1_V_V_write,
        if_dout => in_1_V_V_dout,
        if_empty_n => in_1_V_V_empty_n,
        if_read => Conv1DBuffer_new_2_U0_in_V_V_read);

    in_2_V_V_U : component fifo_w8_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => CloneStream_U0_out2_V_V_din,
        if_full_n => in_2_V_V_full_n,
        if_write => CloneStream_U0_out2_V_V_write,
        if_dout => in_2_V_V_dout,
        if_empty_n => in_2_V_V_empty_n,
        if_read => CloneStreamOnce_U0_IN_V_V_read);

    cnv_1_V_V_U : component fifo_w8_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DBuffer_new_2_U0_out_V_V_din,
        if_full_n => cnv_1_V_V_full_n,
        if_write => Conv1DBuffer_new_2_U0_out_V_V_write,
        if_dout => cnv_1_V_V_dout,
        if_empty_n => cnv_1_V_V_empty_n,
        if_read => Conv1DMac_new_2_U0_in_V_V_read);

    cnv_2PRL_V_V_U : component fifo_w32_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DMac_new_2_U0_out_V_V_din,
        if_full_n => cnv_2PRL_V_V_full_n,
        if_write => Conv1DMac_new_2_U0_out_V_V_write,
        if_dout => cnv_2PRL_V_V_dout,
        if_empty_n => cnv_2PRL_V_V_empty_n,
        if_read => Relu1D_2_U0_in_V_V_read);

    cnv_3PRL_V_V_U : component fifo_w32_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Relu1D_2_U0_out_V_V_din,
        if_full_n => cnv_3PRL_V_V_full_n,
        if_write => Relu1D_2_U0_out_V_V_write,
        if_dout => cnv_3PRL_V_V_dout,
        if_empty_n => cnv_3PRL_V_V_empty_n,
        if_read => StreamingDataWidthCo_4_U0_in_V_V_read);

    cnv_4_V_V_U : component fifo_w8_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_4_U0_out_V_V_din,
        if_full_n => cnv_4_V_V_full_n,
        if_write => StreamingDataWidthCo_4_U0_out_V_V_write,
        if_dout => cnv_4_V_V_dout,
        if_empty_n => cnv_4_V_V_empty_n,
        if_read => grouperPE_U0_features_V_V_read);

    in_3_V_V_U : component fifo_w8_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => CloneStreamOnce_U0_out1_V_V_din,
        if_full_n => in_3_V_V_full_n,
        if_write => CloneStreamOnce_U0_out1_V_V_write,
        if_dout => in_3_V_V_dout,
        if_empty_n => in_3_V_V_empty_n,
        if_read => grouperPE_U0_inStream_V_V_read);

    cnv_5_V_V_U : component fifo_w8_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grouperPE_U0_outStream_V_V_din,
        if_full_n => cnv_5_V_V_full_n,
        if_write => grouperPE_U0_outStream_V_V_write,
        if_dout => cnv_5_V_V_dout,
        if_empty_n => cnv_5_V_V_empty_n,
        if_read => Conv1DBuffer_new406_U0_in_V_V_read);

    cnv_6_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DBuffer_new406_U0_out_V_V_din,
        if_full_n => cnv_6_V_V_full_n,
        if_write => Conv1DBuffer_new406_U0_out_V_V_write,
        if_dout => cnv_6_V_V_dout,
        if_empty_n => cnv_6_V_V_empty_n,
        if_read => Conv1DMac_new407_U0_in_V_V_read);

    cnv_7PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DMac_new407_U0_out_V_V_din,
        if_full_n => cnv_7PRL_V_V_full_n,
        if_write => Conv1DMac_new407_U0_out_V_V_write,
        if_dout => cnv_7PRL_V_V_dout,
        if_empty_n => cnv_7PRL_V_V_empty_n,
        if_read => Relu1D408_U0_in_V_V_read);

    cnv_8PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Relu1D408_U0_out_V_V_din,
        if_full_n => cnv_8PRL_V_V_full_n,
        if_write => Relu1D408_U0_out_V_V_write,
        if_dout => cnv_8PRL_V_V_dout,
        if_empty_n => cnv_8PRL_V_V_empty_n,
        if_read => StreamingDataWidthCo_1_U0_in_V_V_read);

    cnv_9_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_1_U0_out_V_V_din,
        if_full_n => cnv_9_V_V_full_n,
        if_write => StreamingDataWidthCo_1_U0_out_V_V_write,
        if_dout => cnv_9_V_V_dout,
        if_empty_n => cnv_9_V_V_empty_n,
        if_read => Conv1DBuffer_new410_U0_in_V_V_read);

    cnv_10_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DBuffer_new410_U0_out_V_V_din,
        if_full_n => cnv_10_V_V_full_n,
        if_write => Conv1DBuffer_new410_U0_out_V_V_write,
        if_dout => cnv_10_V_V_dout,
        if_empty_n => cnv_10_V_V_empty_n,
        if_read => Conv1DMac_new411_U0_in_V_V_read);

    cnv_11PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DMac_new411_U0_out_V_V_din,
        if_full_n => cnv_11PRL_V_V_full_n,
        if_write => Conv1DMac_new411_U0_out_V_V_write,
        if_dout => cnv_11PRL_V_V_dout,
        if_empty_n => cnv_11PRL_V_V_empty_n,
        if_read => Relu1D412_U0_in_V_V_read);

    cnv_12PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Relu1D412_U0_out_V_V_din,
        if_full_n => cnv_12PRL_V_V_full_n,
        if_write => Relu1D412_U0_out_V_V_write,
        if_dout => cnv_12PRL_V_V_dout,
        if_empty_n => cnv_12PRL_V_V_empty_n,
        if_read => StreamingDataWidthCo_U0_in_V_V_read);

    cnv_13_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_U0_out_V_V_din,
        if_full_n => cnv_13_V_V_full_n,
        if_write => StreamingDataWidthCo_U0_out_V_V_write,
        if_dout => cnv_13_V_V_dout,
        if_empty_n => cnv_13_V_V_empty_n,
        if_read => Conv1DBuffer_new_U0_in_V_V_read);

    cnv_14_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DBuffer_new_U0_out_V_V_din,
        if_full_n => cnv_14_V_V_full_n,
        if_write => Conv1DBuffer_new_U0_out_V_V_write,
        if_dout => cnv_14_V_V_dout,
        if_empty_n => cnv_14_V_V_empty_n,
        if_read => Conv1DMac_new_U0_in_V_V_read);

    cnv_15PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DMac_new_U0_out_V_V_din,
        if_full_n => cnv_15PRL_V_V_full_n,
        if_write => Conv1DMac_new_U0_out_V_V_write,
        if_dout => cnv_15PRL_V_V_dout,
        if_empty_n => cnv_15PRL_V_V_empty_n,
        if_read => Relu1D_U0_in_V_V_read);

    cnv_16PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Relu1D_U0_out_V_V_din,
        if_full_n => cnv_16PRL_V_V_full_n,
        if_write => Relu1D_U0_out_V_V_write,
        if_dout => cnv_16PRL_V_V_dout,
        if_empty_n => cnv_16PRL_V_V_empty_n,
        if_read => StreamingDataWidthCo_2_U0_in_V_V_read);

    cnv_17_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_2_U0_out_V_V_din,
        if_full_n => cnv_17_V_V_full_n,
        if_write => StreamingDataWidthCo_2_U0_out_V_V_write,
        if_dout => cnv_17_V_V_dout,
        if_empty_n => cnv_17_V_V_empty_n,
        if_read => StreamingMaxPool_Pre_U0_in_V_V_read);

    cnv_18_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingMaxPool_Pre_U0_out_V_V_din,
        if_full_n => cnv_18_V_V_full_n,
        if_write => StreamingMaxPool_Pre_U0_out_V_V_write,
        if_dout => cnv_18_V_V_dout,
        if_empty_n => cnv_18_V_V_empty_n,
        if_read => Conv1DBuffer_new414_U0_in_V_V_read);

    cnv_19_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DBuffer_new414_U0_out_V_V_din,
        if_full_n => cnv_19_V_V_full_n,
        if_write => Conv1DBuffer_new414_U0_out_V_V_write,
        if_dout => cnv_19_V_V_dout,
        if_empty_n => cnv_19_V_V_empty_n,
        if_read => Conv1DMac_new415_U0_in_V_V_read);

    cnv_20PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DMac_new415_U0_out_V_V_din,
        if_full_n => cnv_20PRL_V_V_full_n,
        if_write => Conv1DMac_new415_U0_out_V_V_write,
        if_dout => cnv_20PRL_V_V_dout,
        if_empty_n => cnv_20PRL_V_V_empty_n,
        if_read => Relu1D416_U0_in_V_V_read);

    cnv_21PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Relu1D416_U0_out_V_V_din,
        if_full_n => cnv_21PRL_V_V_full_n,
        if_write => Relu1D416_U0_out_V_V_write,
        if_dout => cnv_21PRL_V_V_dout,
        if_empty_n => cnv_21PRL_V_V_empty_n,
        if_read => StreamingDataWidthCo_3_U0_in_V_V_read);

    cnv_22_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_3_U0_out_V_V_din,
        if_full_n => cnv_22_V_V_full_n,
        if_write => StreamingDataWidthCo_3_U0_out_V_V_write,
        if_dout => cnv_22_V_V_dout,
        if_empty_n => cnv_22_V_V_empty_n,
        if_read => Conv1DBuffer_new_1_U0_in_V_V_read);

    cnv_23_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DBuffer_new_1_U0_out_V_V_din,
        if_full_n => cnv_23_V_V_full_n,
        if_write => Conv1DBuffer_new_1_U0_out_V_V_write,
        if_dout => cnv_23_V_V_dout,
        if_empty_n => cnv_23_V_V_empty_n,
        if_read => Conv1DMac_new_1_U0_in_V_V_read);

    cnv_24PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Conv1DMac_new_1_U0_out_V_V_din,
        if_full_n => cnv_24PRL_V_V_full_n,
        if_write => Conv1DMac_new_1_U0_out_V_V_write,
        if_dout => cnv_24PRL_V_V_dout,
        if_empty_n => cnv_24PRL_V_V_empty_n,
        if_read => Relu1D_1_U0_in_V_V_read);

    cnv_25PRL_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Relu1D_1_U0_out_V_V_din,
        if_full_n => cnv_25PRL_V_V_full_n,
        if_write => Relu1D_1_U0_out_V_V_write,
        if_dout => cnv_25PRL_V_V_dout,
        if_empty_n => cnv_25PRL_V_V_empty_n,
        if_read => StreamingDataWidthCo_5_U0_in_V_V_read);

    outStr_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_5_U0_out_V_V_din,
        if_full_n => outStr_V_V_full_n,
        if_write => StreamingDataWidthCo_5_U0_out_V_V_write,
        if_dout => outStr_V_V_dout,
        if_empty_n => outStr_V_V_empty_n,
        if_read => ResizeStream_U0_in_V_V_read);

    start_for_ResizeSZio_U : component start_for_ResizeSZio
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_ResizeStream_1_U0_din,
        if_full_n => start_for_ResizeStream_1_U0_full_n,
        if_write => Mem2Stream_U0_start_write,
        if_dout => start_for_ResizeStream_1_U0_dout,
        if_empty_n => start_for_ResizeStream_1_U0_empty_n,
        if_read => ResizeStream_1_U0_ap_ready);

    start_for_CloneSt0iy_U : component start_for_CloneSt0iy
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_CloneStream_U0_din,
        if_full_n => start_for_CloneStream_U0_full_n,
        if_write => ResizeStream_1_U0_start_write,
        if_dout => start_for_CloneStream_U0_dout,
        if_empty_n => start_for_CloneStream_U0_empty_n,
        if_read => CloneStream_U0_ap_ready);

    start_for_Conv1DB1iI_U : component start_for_Conv1DB1iI
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DBuffer_new_2_U0_din,
        if_full_n => start_for_Conv1DBuffer_new_2_U0_full_n,
        if_write => CloneStream_U0_start_write,
        if_dout => start_for_Conv1DBuffer_new_2_U0_dout,
        if_empty_n => start_for_Conv1DBuffer_new_2_U0_empty_n,
        if_read => Conv1DBuffer_new_2_U0_ap_ready);

    start_for_CloneSt2iS_U : component start_for_CloneSt2iS
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_CloneStreamOnce_U0_din,
        if_full_n => start_for_CloneStreamOnce_U0_full_n,
        if_write => CloneStream_U0_start_write,
        if_dout => start_for_CloneStreamOnce_U0_dout,
        if_empty_n => start_for_CloneStreamOnce_U0_empty_n,
        if_read => CloneStreamOnce_U0_ap_ready);

    start_for_Conv1DM3i2_U : component start_for_Conv1DM3i2
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DMac_new_2_U0_din,
        if_full_n => start_for_Conv1DMac_new_2_U0_full_n,
        if_write => Conv1DBuffer_new_2_U0_start_write,
        if_dout => start_for_Conv1DMac_new_2_U0_dout,
        if_empty_n => start_for_Conv1DMac_new_2_U0_empty_n,
        if_read => Conv1DMac_new_2_U0_ap_ready);

    start_for_Relu1D_4jc_U : component start_for_Relu1D_4jc
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Relu1D_2_U0_din,
        if_full_n => start_for_Relu1D_2_U0_full_n,
        if_write => Conv1DMac_new_2_U0_start_write,
        if_dout => start_for_Relu1D_2_U0_dout,
        if_empty_n => start_for_Relu1D_2_U0_empty_n,
        if_read => Relu1D_2_U0_ap_ready);

    start_for_Streami5jm_U : component start_for_Streami5jm
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingDataWidthCo_4_U0_din,
        if_full_n => start_for_StreamingDataWidthCo_4_U0_full_n,
        if_write => Relu1D_2_U0_start_write,
        if_dout => start_for_StreamingDataWidthCo_4_U0_dout,
        if_empty_n => start_for_StreamingDataWidthCo_4_U0_empty_n,
        if_read => StreamingDataWidthCo_4_U0_ap_ready);

    start_for_grouper6jw_U : component start_for_grouper6jw
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_grouperPE_U0_din,
        if_full_n => start_for_grouperPE_U0_full_n,
        if_write => CloneStreamOnce_U0_start_write,
        if_dout => start_for_grouperPE_U0_dout,
        if_empty_n => start_for_grouperPE_U0_empty_n,
        if_read => grouperPE_U0_ap_ready);

    start_for_Conv1DB7jG_U : component start_for_Conv1DB7jG
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DBuffer_new406_U0_din,
        if_full_n => start_for_Conv1DBuffer_new406_U0_full_n,
        if_write => grouperPE_U0_start_write,
        if_dout => start_for_Conv1DBuffer_new406_U0_dout,
        if_empty_n => start_for_Conv1DBuffer_new406_U0_empty_n,
        if_read => Conv1DBuffer_new406_U0_ap_ready);

    start_for_Conv1DM8jQ_U : component start_for_Conv1DM8jQ
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DMac_new407_U0_din,
        if_full_n => start_for_Conv1DMac_new407_U0_full_n,
        if_write => Conv1DBuffer_new406_U0_start_write,
        if_dout => start_for_Conv1DMac_new407_U0_dout,
        if_empty_n => start_for_Conv1DMac_new407_U0_empty_n,
        if_read => Conv1DMac_new407_U0_ap_ready);

    start_for_Relu1D49j0_U : component start_for_Relu1D49j0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Relu1D408_U0_din,
        if_full_n => start_for_Relu1D408_U0_full_n,
        if_write => Conv1DMac_new407_U0_start_write,
        if_dout => start_for_Relu1D408_U0_dout,
        if_empty_n => start_for_Relu1D408_U0_empty_n,
        if_read => Relu1D408_U0_ap_ready);

    start_for_Streamibak_U : component start_for_Streamibak
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingDataWidthCo_1_U0_din,
        if_full_n => start_for_StreamingDataWidthCo_1_U0_full_n,
        if_write => Relu1D408_U0_start_write,
        if_dout => start_for_StreamingDataWidthCo_1_U0_dout,
        if_empty_n => start_for_StreamingDataWidthCo_1_U0_empty_n,
        if_read => StreamingDataWidthCo_1_U0_ap_ready);

    start_for_Conv1DBbbk_U : component start_for_Conv1DBbbk
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DBuffer_new410_U0_din,
        if_full_n => start_for_Conv1DBuffer_new410_U0_full_n,
        if_write => StreamingDataWidthCo_1_U0_start_write,
        if_dout => start_for_Conv1DBuffer_new410_U0_dout,
        if_empty_n => start_for_Conv1DBuffer_new410_U0_empty_n,
        if_read => Conv1DBuffer_new410_U0_ap_ready);

    start_for_Conv1DMbck_U : component start_for_Conv1DMbck
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DMac_new411_U0_din,
        if_full_n => start_for_Conv1DMac_new411_U0_full_n,
        if_write => Conv1DBuffer_new410_U0_start_write,
        if_dout => start_for_Conv1DMac_new411_U0_dout,
        if_empty_n => start_for_Conv1DMac_new411_U0_empty_n,
        if_read => Conv1DMac_new411_U0_ap_ready);

    start_for_Relu1D4bdk_U : component start_for_Relu1D4bdk
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Relu1D412_U0_din,
        if_full_n => start_for_Relu1D412_U0_full_n,
        if_write => Conv1DMac_new411_U0_start_write,
        if_dout => start_for_Relu1D412_U0_dout,
        if_empty_n => start_for_Relu1D412_U0_empty_n,
        if_read => Relu1D412_U0_ap_ready);

    start_for_Streamibek_U : component start_for_Streamibek
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingDataWidthCo_U0_din,
        if_full_n => start_for_StreamingDataWidthCo_U0_full_n,
        if_write => Relu1D412_U0_start_write,
        if_dout => start_for_StreamingDataWidthCo_U0_dout,
        if_empty_n => start_for_StreamingDataWidthCo_U0_empty_n,
        if_read => StreamingDataWidthCo_U0_ap_ready);

    start_for_Conv1DBbfk_U : component start_for_Conv1DBbfk
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DBuffer_new_U0_din,
        if_full_n => start_for_Conv1DBuffer_new_U0_full_n,
        if_write => StreamingDataWidthCo_U0_start_write,
        if_dout => start_for_Conv1DBuffer_new_U0_dout,
        if_empty_n => start_for_Conv1DBuffer_new_U0_empty_n,
        if_read => Conv1DBuffer_new_U0_ap_ready);

    start_for_Conv1DMbgk_U : component start_for_Conv1DMbgk
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DMac_new_U0_din,
        if_full_n => start_for_Conv1DMac_new_U0_full_n,
        if_write => Conv1DBuffer_new_U0_start_write,
        if_dout => start_for_Conv1DMac_new_U0_dout,
        if_empty_n => start_for_Conv1DMac_new_U0_empty_n,
        if_read => Conv1DMac_new_U0_ap_ready);

    start_for_Relu1D_U0_U : component start_for_Relu1D_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Relu1D_U0_din,
        if_full_n => start_for_Relu1D_U0_full_n,
        if_write => Conv1DMac_new_U0_start_write,
        if_dout => start_for_Relu1D_U0_dout,
        if_empty_n => start_for_Relu1D_U0_empty_n,
        if_read => Relu1D_U0_ap_ready);

    start_for_Streamibhl_U : component start_for_Streamibhl
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingDataWidthCo_2_U0_din,
        if_full_n => start_for_StreamingDataWidthCo_2_U0_full_n,
        if_write => Relu1D_U0_start_write,
        if_dout => start_for_StreamingDataWidthCo_2_U0_dout,
        if_empty_n => start_for_StreamingDataWidthCo_2_U0_empty_n,
        if_read => StreamingDataWidthCo_2_U0_ap_ready);

    start_for_Streamibil_U : component start_for_Streamibil
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingMaxPool_Pre_U0_din,
        if_full_n => start_for_StreamingMaxPool_Pre_U0_full_n,
        if_write => StreamingDataWidthCo_2_U0_start_write,
        if_dout => start_for_StreamingMaxPool_Pre_U0_dout,
        if_empty_n => start_for_StreamingMaxPool_Pre_U0_empty_n,
        if_read => StreamingMaxPool_Pre_U0_ap_ready);

    start_for_Conv1DBbjl_U : component start_for_Conv1DBbjl
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DBuffer_new414_U0_din,
        if_full_n => start_for_Conv1DBuffer_new414_U0_full_n,
        if_write => StreamingMaxPool_Pre_U0_start_write,
        if_dout => start_for_Conv1DBuffer_new414_U0_dout,
        if_empty_n => start_for_Conv1DBuffer_new414_U0_empty_n,
        if_read => Conv1DBuffer_new414_U0_ap_ready);

    start_for_Conv1DMbkl_U : component start_for_Conv1DMbkl
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DMac_new415_U0_din,
        if_full_n => start_for_Conv1DMac_new415_U0_full_n,
        if_write => Conv1DBuffer_new414_U0_start_write,
        if_dout => start_for_Conv1DMac_new415_U0_dout,
        if_empty_n => start_for_Conv1DMac_new415_U0_empty_n,
        if_read => Conv1DMac_new415_U0_ap_ready);

    start_for_Relu1D4bll_U : component start_for_Relu1D4bll
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Relu1D416_U0_din,
        if_full_n => start_for_Relu1D416_U0_full_n,
        if_write => Conv1DMac_new415_U0_start_write,
        if_dout => start_for_Relu1D416_U0_dout,
        if_empty_n => start_for_Relu1D416_U0_empty_n,
        if_read => Relu1D416_U0_ap_ready);

    start_for_Streamibml_U : component start_for_Streamibml
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingDataWidthCo_3_U0_din,
        if_full_n => start_for_StreamingDataWidthCo_3_U0_full_n,
        if_write => Relu1D416_U0_start_write,
        if_dout => start_for_StreamingDataWidthCo_3_U0_dout,
        if_empty_n => start_for_StreamingDataWidthCo_3_U0_empty_n,
        if_read => StreamingDataWidthCo_3_U0_ap_ready);

    start_for_Conv1DBbnm_U : component start_for_Conv1DBbnm
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DBuffer_new_1_U0_din,
        if_full_n => start_for_Conv1DBuffer_new_1_U0_full_n,
        if_write => StreamingDataWidthCo_3_U0_start_write,
        if_dout => start_for_Conv1DBuffer_new_1_U0_dout,
        if_empty_n => start_for_Conv1DBuffer_new_1_U0_empty_n,
        if_read => Conv1DBuffer_new_1_U0_ap_ready);

    start_for_Conv1DMbom_U : component start_for_Conv1DMbom
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Conv1DMac_new_1_U0_din,
        if_full_n => start_for_Conv1DMac_new_1_U0_full_n,
        if_write => Conv1DBuffer_new_1_U0_start_write,
        if_dout => start_for_Conv1DMac_new_1_U0_dout,
        if_empty_n => start_for_Conv1DMac_new_1_U0_empty_n,
        if_read => Conv1DMac_new_1_U0_ap_ready);

    start_for_Relu1D_bpm_U : component start_for_Relu1D_bpm
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Relu1D_1_U0_din,
        if_full_n => start_for_Relu1D_1_U0_full_n,
        if_write => Conv1DMac_new_1_U0_start_write,
        if_dout => start_for_Relu1D_1_U0_dout,
        if_empty_n => start_for_Relu1D_1_U0_empty_n,
        if_read => Relu1D_1_U0_ap_ready);

    start_for_Streamibqm_U : component start_for_Streamibqm
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingDataWidthCo_5_U0_din,
        if_full_n => start_for_StreamingDataWidthCo_5_U0_full_n,
        if_write => Relu1D_1_U0_start_write,
        if_dout => start_for_StreamingDataWidthCo_5_U0_dout,
        if_empty_n => start_for_StreamingDataWidthCo_5_U0_empty_n,
        if_read => StreamingDataWidthCo_5_U0_ap_ready);

    start_for_ResizeSbrm_U : component start_for_ResizeSbrm
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_ResizeStream_U0_din,
        if_full_n => start_for_ResizeStream_U0_full_n,
        if_write => StreamingDataWidthCo_5_U0_start_write,
        if_dout => start_for_ResizeStream_U0_dout,
        if_empty_n => start_for_ResizeStream_U0_empty_n,
        if_read => ResizeStream_U0_ap_ready);




    CloneStreamOnce_U0_ap_continue <= ap_const_logic_1;
    CloneStreamOnce_U0_ap_start <= start_for_CloneStreamOnce_U0_empty_n;
    CloneStream_U0_ap_continue <= ap_const_logic_1;
    CloneStream_U0_ap_start <= start_for_CloneStream_U0_empty_n;
    CloneStream_U0_start_full_n <= (start_for_Conv1DBuffer_new_2_U0_full_n and start_for_CloneStreamOnce_U0_full_n);
    Conv1DBuffer_new406_U0_ap_continue <= ap_const_logic_1;
    Conv1DBuffer_new406_U0_ap_start <= start_for_Conv1DBuffer_new406_U0_empty_n;
    Conv1DBuffer_new410_U0_ap_continue <= ap_const_logic_1;
    Conv1DBuffer_new410_U0_ap_start <= start_for_Conv1DBuffer_new410_U0_empty_n;
    Conv1DBuffer_new414_U0_ap_continue <= ap_const_logic_1;
    Conv1DBuffer_new414_U0_ap_start <= start_for_Conv1DBuffer_new414_U0_empty_n;
    Conv1DBuffer_new_1_U0_ap_continue <= ap_const_logic_1;
    Conv1DBuffer_new_1_U0_ap_start <= start_for_Conv1DBuffer_new_1_U0_empty_n;
    Conv1DBuffer_new_2_U0_ap_continue <= ap_const_logic_1;
    Conv1DBuffer_new_2_U0_ap_start <= start_for_Conv1DBuffer_new_2_U0_empty_n;
    Conv1DBuffer_new_U0_ap_continue <= ap_const_logic_1;
    Conv1DBuffer_new_U0_ap_start <= start_for_Conv1DBuffer_new_U0_empty_n;
    Conv1DMac_new407_U0_ap_continue <= ap_const_logic_1;
    Conv1DMac_new407_U0_ap_start <= start_for_Conv1DMac_new407_U0_empty_n;
    Conv1DMac_new411_U0_ap_continue <= ap_const_logic_1;
    Conv1DMac_new411_U0_ap_start <= start_for_Conv1DMac_new411_U0_empty_n;
    Conv1DMac_new415_U0_ap_continue <= ap_const_logic_1;
    Conv1DMac_new415_U0_ap_start <= start_for_Conv1DMac_new415_U0_empty_n;
    Conv1DMac_new_1_U0_ap_continue <= ap_const_logic_1;
    Conv1DMac_new_1_U0_ap_start <= start_for_Conv1DMac_new_1_U0_empty_n;
    Conv1DMac_new_2_U0_ap_continue <= ap_const_logic_1;
    Conv1DMac_new_2_U0_ap_start <= start_for_Conv1DMac_new_2_U0_empty_n;
    Conv1DMac_new_U0_ap_continue <= ap_const_logic_1;
    Conv1DMac_new_U0_ap_start <= start_for_Conv1DMac_new_U0_empty_n;
    Mem2Stream_U0_ap_continue <= ap_const_logic_1;
    Mem2Stream_U0_ap_start <= ap_start;
    Relu1D408_U0_ap_continue <= ap_const_logic_1;
    Relu1D408_U0_ap_start <= start_for_Relu1D408_U0_empty_n;
    Relu1D412_U0_ap_continue <= ap_const_logic_1;
    Relu1D412_U0_ap_start <= start_for_Relu1D412_U0_empty_n;
    Relu1D416_U0_ap_continue <= ap_const_logic_1;
    Relu1D416_U0_ap_start <= start_for_Relu1D416_U0_empty_n;
    Relu1D_1_U0_ap_continue <= ap_const_logic_1;
    Relu1D_1_U0_ap_start <= start_for_Relu1D_1_U0_empty_n;
    Relu1D_2_U0_ap_continue <= ap_const_logic_1;
    Relu1D_2_U0_ap_start <= start_for_Relu1D_2_U0_empty_n;
    Relu1D_U0_ap_continue <= ap_const_logic_1;
    Relu1D_U0_ap_start <= start_for_Relu1D_U0_empty_n;
    ResizeStream_1_U0_ap_continue <= ap_const_logic_1;
    ResizeStream_1_U0_ap_start <= start_for_ResizeStream_1_U0_empty_n;
    ResizeStream_U0_ap_continue <= ap_const_logic_1;
    ResizeStream_U0_ap_start <= start_for_ResizeStream_U0_empty_n;
    ResizeStream_U0_start_full_n <= ap_const_logic_1;
    ResizeStream_U0_start_write <= ap_const_logic_0;
    StreamingDataWidthCo_1_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthCo_1_U0_ap_start <= start_for_StreamingDataWidthCo_1_U0_empty_n;
    StreamingDataWidthCo_2_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthCo_2_U0_ap_start <= start_for_StreamingDataWidthCo_2_U0_empty_n;
    StreamingDataWidthCo_3_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthCo_3_U0_ap_start <= start_for_StreamingDataWidthCo_3_U0_empty_n;
    StreamingDataWidthCo_4_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthCo_4_U0_ap_start <= start_for_StreamingDataWidthCo_4_U0_empty_n;
    StreamingDataWidthCo_4_U0_start_full_n <= ap_const_logic_1;
    StreamingDataWidthCo_4_U0_start_write <= ap_const_logic_0;
    StreamingDataWidthCo_5_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthCo_5_U0_ap_start <= start_for_StreamingDataWidthCo_5_U0_empty_n;
    StreamingDataWidthCo_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthCo_U0_ap_start <= start_for_StreamingDataWidthCo_U0_empty_n;
    StreamingMaxPool_Pre_U0_ap_continue <= ap_const_logic_1;
    StreamingMaxPool_Pre_U0_ap_start <= start_for_StreamingMaxPool_Pre_U0_empty_n;
    ap_done <= ResizeStream_U0_ap_done;
    ap_idle <= (grouperPE_U0_ap_idle and StreamingMaxPool_Pre_U0_ap_idle and StreamingDataWidthCo_U0_ap_idle and StreamingDataWidthCo_5_U0_ap_idle and StreamingDataWidthCo_4_U0_ap_idle and StreamingDataWidthCo_3_U0_ap_idle and StreamingDataWidthCo_2_U0_ap_idle and StreamingDataWidthCo_1_U0_ap_idle and ResizeStream_U0_ap_idle and ResizeStream_1_U0_ap_idle and Relu1D_U0_ap_idle and Relu1D_2_U0_ap_idle and Relu1D_1_U0_ap_idle and Relu1D416_U0_ap_idle and Relu1D412_U0_ap_idle and Relu1D408_U0_ap_idle and Mem2Stream_U0_ap_idle and Conv1DMac_new_U0_ap_idle and Conv1DMac_new_2_U0_ap_idle and Conv1DMac_new_1_U0_ap_idle and Conv1DMac_new415_U0_ap_idle and Conv1DMac_new411_U0_ap_idle and Conv1DMac_new407_U0_ap_idle and Conv1DBuffer_new_U0_ap_idle and Conv1DBuffer_new_2_U0_ap_idle and Conv1DBuffer_new_1_U0_ap_idle and Conv1DBuffer_new414_U0_ap_idle and Conv1DBuffer_new410_U0_ap_idle and Conv1DBuffer_new406_U0_ap_idle and CloneStream_U0_ap_idle and CloneStreamOnce_U0_ap_idle);
    ap_ready <= Mem2Stream_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= ResizeStream_U0_ap_done;
    ap_sync_ready <= Mem2Stream_U0_ap_ready;
    grouperPE_U0_ap_continue <= ap_const_logic_1;
    grouperPE_U0_ap_start <= start_for_grouperPE_U0_empty_n;
    s1_out_V_V_TDATA <= ResizeStream_U0_out_V_V_TDATA;
    s1_out_V_V_TVALID <= ResizeStream_U0_out_V_V_TVALID;
    start_for_CloneStreamOnce_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_CloneStream_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DBuffer_new406_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DBuffer_new410_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DBuffer_new414_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DBuffer_new_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DBuffer_new_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DBuffer_new_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DMac_new407_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DMac_new411_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DMac_new415_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DMac_new_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DMac_new_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Conv1DMac_new_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Relu1D408_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Relu1D412_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Relu1D416_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Relu1D_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Relu1D_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Relu1D_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_ResizeStream_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_ResizeStream_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingDataWidthCo_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingDataWidthCo_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingDataWidthCo_3_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingDataWidthCo_4_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingDataWidthCo_5_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingDataWidthCo_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingMaxPool_Pre_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_grouperPE_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
