-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Conv1DMac_new407_Aem_rom is 
    generic(
             DWIDTH     : integer := 8; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 1024
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Conv1DMac_new407_Aem_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "11111010", 1 => "00000000", 2 => "11110010", 3 => "00000101", 
    4 to 5=> "00000000", 6 => "11111010", 7 => "00000000", 8 => "11111110", 
    9 to 10=> "00000000", 11 => "11111001", 12 => "00000111", 13 to 17=> "00000000", 
    18 => "00010001", 19 => "00000000", 20 => "11111010", 21 => "00000000", 
    22 => "11111010", 23 to 24=> "00000000", 25 => "00000001", 26 to 28=> "00000000", 
    29 => "11110010", 30 => "11111111", 31 => "00000000", 32 => "11111010", 
    33 => "00000000", 34 => "11111000", 35 => "00000101", 36 to 37=> "00000000", 
    38 => "11111010", 39 => "00000000", 40 => "11111110", 41 to 42=> "00000000", 
    43 => "11111100", 44 => "00000110", 45 to 49=> "00000000", 50 => "00001011", 
    51 => "00000000", 52 => "11111010", 53 => "00000000", 54 => "11111010", 
    55 to 56=> "00000000", 57 => "00000010", 58 to 60=> "00000000", 61 => "11111000", 
    62 => "11111110", 63 => "00000000", 64 => "11111000", 65 => "00000000", 
    66 => "11101010", 67 => "00001000", 68 to 69=> "00000000", 70 => "11111001", 
    71 => "00000000", 72 => "00001011", 73 to 74=> "00000000", 75 => "00000101", 
    76 => "00001001", 77 to 81=> "00000000", 82 => "00010100", 83 => "00000000", 
    84 => "11111000", 85 => "00000000", 86 => "11110111", 87 to 88=> "00000000", 
    89 => "11110100", 90 to 92=> "00000000", 93 => "11101101", 94 => "00001101", 
    95 => "00000000", 96 => "11111000", 97 => "00000000", 98 => "11101011", 
    99 => "00001001", 100 to 101=> "00000000", 102 => "11110111", 103 => "00000000", 
    104 => "00000001", 105 to 106=> "00000000", 107 => "11111101", 108 => "00001010", 
    109 to 113=> "00000000", 114 => "00010101", 115 => "00000000", 116 => "11111000", 
    117 => "00000000", 118 => "11110110", 119 to 120=> "00000000", 121 => "11111110", 
    122 to 124=> "00000000", 125 => "11101101", 126 => "00000011", 127 to 191=> "00000000", 
    192 => "00000111", 193 => "00000000", 194 => "10111011", 195 => "11101110", 
    196 to 197=> "00000000", 198 => "00010001", 199 => "00000000", 200 => "00010011", 
    201 to 202=> "00000000", 203 => "01000100", 204 => "11110101", 205 to 209=> "00000000", 
    210 => "00100101", 211 => "00000000", 212 => "00001010", 213 => "00000000", 
    214 => "00000111", 215 to 216=> "00000000", 217 => "11010100", 218 to 220=> "00000000", 
    221 => "11010001", 222 => "00110110", 223 => "00000000", 224 => "11110001", 
    225 => "00000000", 226 => "01001111", 227 => "00010011", 228 to 229=> "00000000", 
    230 => "11110010", 231 => "00000000", 232 => "11101111", 233 to 234=> "00000000", 
    235 => "10100011", 236 => "00010110", 237 to 241=> "00000000", 242 => "11011110", 
    243 => "00000000", 244 => "11101011", 245 => "00000000", 246 => "11101111", 
    247 to 248=> "00000000", 249 => "00011110", 250 to 252=> "00000000", 253 => "00110010", 
    254 => "11010011", 255 => "00000000", 256 => "00001001", 257 to 258=> "00000000", 
    259 => "11111000", 260 to 261=> "00000000", 262 => "00001001", 263 => "00000000", 
    264 => "11111111", 265 to 267=> "00000000", 268 => "11111000", 269 to 275=> "00000000", 
    276 => "00001001", 277 => "00000000", 278 => "00001001", 279 to 280=> "00000000", 
    281 => "00000001", 282 to 284=> "00000000", 285 => "00000001", 286 => "11111111", 
    287 => "00000000", 288 => "00001010", 289 => "00000000", 290 => "11111110", 
    291 => "11110110", 292 to 293=> "00000000", 294 => "00001010", 295 => "00000000", 
    296 => "11111111", 297 to 298=> "00000000", 299 => "11111110", 300 => "11110110", 
    301 to 305=> "00000000", 306 => "00000010", 307 => "00000000", 308 => "00001010", 
    309 => "00000000", 310 => "00001010", 311 to 312=> "00000000", 313 => "00000001", 
    314 to 316=> "00000000", 317 => "11111110", 318 to 383=> "00000000", 384 => "00000001", 
    385 => "00000000", 386 => "10001100", 387 => "00000110", 388 to 389=> "00000000", 
    390 => "00000001", 391 => "00000000", 392 => "00010111", 393 to 394=> "00000000", 
    395 => "11110100", 396 => "11111010", 397 to 401=> "00000000", 402 => "10010011", 
    403 => "00000000", 404 => "11111111", 405 => "00000000", 406 => "11111110", 
    407 to 408=> "00000000", 409 => "11010000", 410 to 412=> "00000000", 413 => "01111110", 
    414 => "00100110", 415 => "00000000", 416 => "00001010", 417 => "00000000", 
    418 => "01111010", 419 => "11111000", 420 to 421=> "00000000", 422 => "00000101", 
    423 => "00000000", 424 => "11110000", 425 to 426=> "00000000", 427 => "00010000", 
    428 => "11101111", 429 to 433=> "00000000", 434 => "01100110", 435 => "00000000", 
    436 => "00001101", 437 => "00000000", 438 => "00001010", 439 to 440=> "00000000", 
    441 => "00100100", 442 to 444=> "00000000", 445 => "10010011", 446 => "11100100", 
    447 to 511=> "00000000", 512 => "10010110", 513 => "00000000", 514 => "11101011", 
    515 => "01011101", 516 to 517=> "00000000", 518 => "10100001", 519 => "00000000", 
    520 => "00000101", 521 to 522=> "00000000", 523 => "11110110", 524 => "01101000", 
    525 to 529=> "00000000", 530 => "00001100", 531 => "00000000", 532 => "10011011", 
    533 => "00000000", 534 => "10011110", 535 to 536=> "00000000", 537 => "11111110", 
    538 to 540=> "00000000", 541 => "11101100", 542 => "11111111", 543 => "00000000", 
    544 => "01101101", 545 => "00000000", 546 => "11111110", 547 => "10011000", 
    548 to 549=> "00000000", 550 => "01100110", 551 => "00000000", 552 => "00000101", 
    553 to 554=> "00000000", 555 => "11111010", 556 => "10011000", 557 to 561=> "00000000", 
    562 => "00000110", 563 => "00000000", 564 => "01101101", 565 => "00000000", 
    566 => "01100100", 567 to 568=> "00000000", 569 => "11111100", 570 to 572=> "00000000", 
    573 => "00001101", 574 => "11111011", 575 to 639=> "00000000", 640 => "00001010", 
    641 => "00000000", 642 => "00101000", 643 to 645=> "00000000", 646 => "00001101", 
    647 => "00000000", 648 => "11110000", 649 to 650=> "00000000", 651 => "00101111", 
    652 => "11111010", 653 to 657=> "00000000", 658 => "11111000", 659 => "00000000", 
    660 => "00000111", 661 => "00000000", 662 => "00001010", 663 to 664=> "00000000", 
    665 => "00001101", 666 to 668=> "00000000", 669 => "00010010", 670 => "11101011", 
    671 => "00000000", 672 => "11110111", 673 => "00000000", 674 => "11100001", 
    675 => "00001010", 676 to 677=> "00000000", 678 => "11111010", 679 => "00000000", 
    680 => "00000001", 681 to 682=> "00000000", 683 => "11010011", 684 => "00000110", 
    685 to 689=> "00000000", 690 => "00000010", 691 => "00000000", 692 => "11111000", 
    693 => "00000000", 694 => "11111000", 695 to 696=> "00000000", 697 => "00000110", 
    698 to 700=> "00000000", 701 => "11110011", 702 => "11111100", 703 to 767=> "00000000", 
    768 => "11111001", 769 to 770=> "00000000", 771 => "00001000", 772 to 773=> "00000000", 
    774 => "11111000", 775 => "00000000", 776 => "11111111", 777 to 778=> "00000000", 
    779 => "11111111", 780 => "00000111", 781 to 787=> "00000000", 788 => "11111001", 
    789 => "00000000", 790 => "11111000", 791 to 792=> "00000000", 793 => "00000001", 
    794 to 796=> "00000000", 797 => "00000001", 798 => "11111111", 799 => "00000000", 
    800 => "11111000", 801 => "00000000", 802 => "00000001", 803 => "00001001", 
    804 to 805=> "00000000", 806 => "11110111", 807 to 811=> "00000000", 812 => "00001000", 
    813 to 817=> "00000000", 818 => "11111111", 819 => "00000000", 820 => "11111000", 
    821 => "00000000", 822 => "11110111", 823 to 828=> "00000000", 829 => "00000001", 
    830 to 839=> "00000000", 840 => "11111111", 841 to 842=> "00000000", 843 => "11111111", 
    844 to 853=> "00000000", 854 => "11111111", 855 to 856=> "00000000", 857 => "00000001", 
    858 to 861=> "00000000", 862 => "11111111", 863 to 871=> "00000000", 872 => "11111111", 
    873 to 874=> "00000000", 875 => "11111111", 876 to 888=> "00000000", 889 => "00000001", 
    890 to 893=> "00000000", 894 => "11111111", 895 => "00000000", 896 => "00100100", 
    897 => "00000000", 898 => "00011000", 899 => "11011110", 900 to 901=> "00000000", 
    902 => "00100100", 903 => "00000000", 904 => "00111001", 905 to 906=> "00000000", 
    907 => "11010011", 908 => "11100011", 909 to 913=> "00000000", 914 => "00000110", 
    915 => "00000000", 916 => "00011111", 917 => "00000000", 918 => "00100100", 
    919 to 920=> "00000000", 921 => "11011111", 922 to 924=> "00000000", 925 => "11111010", 
    926 => "00011100", 927 => "00000000", 928 => "11101001", 929 => "00000000", 
    930 => "00001010", 931 => "00001111", 932 to 933=> "00000000", 934 => "11101011", 
    935 => "00000000", 936 => "11000110", 937 to 938=> "00000000", 939 => "00110001", 
    940 => "00011000", 941 to 945=> "00000000", 946 => "11101000", 947 => "00000000", 
    948 => "11101001", 949 => "00000000", 950 => "11101000", 951 to 952=> "00000000", 
    953 => "00110001", 954 to 956=> "00000000", 957 => "00010110", 958 => "11011000", 
    959 => "00000000", 960 => "11111110", 961 => "00000000", 962 => "11111111", 
    963 => "00000010", 964 to 965=> "00000000", 966 => "11111110", 967 => "00000000", 
    968 => "00010110", 969 to 970=> "00000000", 971 => "00001111", 972 to 977=> "00000000", 
    978 => "11111111", 979 => "00000000", 980 => "11111110", 981 => "00000000", 
    982 => "11111110", 983 to 984=> "00000000", 985 => "11101100", 986 to 989=> "00000000", 
    990 => "00010100", 991 => "00000000", 992 => "11111101", 993 to 994=> "00000000", 
    995 => "00000011", 996 to 997=> "00000000", 998 => "11111101", 999 => "00000000", 
    1000 => "00011001", 1001 to 1002=> "00000000", 1003 => "00010001", 1004 => "00000010", 
    1005 to 1009=> "00000000", 1010 => "11111111", 1011 => "00000000", 1012 => "11111101", 
    1013 => "00000000", 1014 => "11111101", 1015 to 1016=> "00000000", 1017 => "11101001", 
    1018 to 1020=> "00000000", 1021 => "00000001", 1022 => "00010111", 1023 => "00000000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity Conv1DMac_new407_Aem is
    generic (
        DataWidth : INTEGER := 8;
        AddressRange : INTEGER := 1024;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Conv1DMac_new407_Aem is
    component Conv1DMac_new407_Aem_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Conv1DMac_new407_Aem_rom_U :  component Conv1DMac_new407_Aem_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


