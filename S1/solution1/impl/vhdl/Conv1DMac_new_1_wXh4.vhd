-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Conv1DMac_new_1_wXh4_rom is 
    generic(
             DWIDTH     : integer := 5; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 1024
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Conv1DMac_new_1_wXh4_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 3=> "00000", 4 => "00101", 5 => "00100", 6 => "00000", 7 => "00001", 
    8 to 10=> "00000", 11 => "00001", 12 => "00000", 13 => "00101", 14 => "00010", 
    15 to 16=> "00000", 17 => "00100", 18 => "00011", 19 => "00010", 20 => "01000", 
    21 => "11101", 22 to 25=> "00000", 26 => "00011", 27 => "11111", 28 => "00000", 
    29 => "00111", 30 => "00110", 31 => "11100", 32 => "00100", 33 => "00001", 
    34 => "00000", 35 => "01000", 36 => "00000", 37 => "00101", 38 => "00100", 
    39 to 40=> "11101", 41 => "11010", 42 => "00000", 43 => "00001", 44 => "00011", 
    45 => "00101", 46 => "01000", 47 => "11100", 48 to 49=> "00000", 50 => "11011", 
    51 => "00001", 52 => "11100", 53 => "00000", 54 => "00100", 55 => "01000", 
    56 => "00101", 57 to 58=> "11111", 59 to 67=> "00000", 68 to 69=> "00010", 70 => "00000", 
    71 => "00001", 72 to 76=> "00000", 77 => "00010", 78 => "00001", 79 to 80=> "00000", 
    81 to 82=> "00010", 83 => "00001", 84 => "00100", 85 => "11111", 86 to 89=> "00000", 
    90 => "00010", 91 to 92=> "00000", 93 to 94=> "00011", 95 => "11110", 96 => "00010", 
    97 => "00001", 98 => "00000", 99 => "00100", 100 => "00000", 101 to 102=> "00010", 
    103 to 104=> "11111", 105 => "11101", 106 to 107=> "00000", 108 => "00001", 109 => "00010", 
    110 => "00100", 111 => "11110", 112 to 113=> "00000", 114 => "11110", 115 => "00001", 
    116 => "11111", 117 => "00000", 118 => "00010", 119 => "00100", 120 => "00010", 
    121 to 195=> "00000", 196 => "11110", 197 => "11111", 198 => "00000", 199 => "01010", 
    200 to 202=> "00000", 203 => "00001", 204 => "00000", 205 => "00111", 206 => "00011", 
    207 => "00000", 208 => "11111", 209 => "11011", 210 => "00001", 211 => "11110", 
    212 => "00010", 213 => "00001", 214 => "00000", 215 => "11111", 216 to 217=> "00000", 
    218 => "00110", 219 => "11101", 220 => "00011", 221 => "00010", 222 => "11110", 
    223 => "00011", 224 => "11011", 225 => "11110", 226 to 227=> "00000", 228 => "11110", 
    229 => "00101", 230 => "00000", 231 => "00011", 232 => "00100", 233 => "11011", 
    234 => "00000", 235 => "10111", 236 => "00000", 237 => "00101", 238 => "00010", 
    239 to 241=> "00000", 242 => "00001", 243 to 244=> "00100", 245 => "00000", 246 => "11110", 
    247 => "00010", 248 => "00011", 249 => "00100", 250 => "00111", 251 to 259=> "00000", 
    260 => "00010", 261 => "11110", 262 => "00000", 263 => "11111", 264 to 266=> "00000", 
    267 => "00100", 268 => "00000", 269 => "00001", 270 => "11001", 271 => "00000", 
    272 => "00111", 273 => "11001", 274 => "11111", 275 => "11110", 276 => "00010", 
    277 => "11111", 278 => "00000", 279 => "11111", 280 to 281=> "00000", 282 => "00010", 
    283 to 285=> "11111", 286 => "00010", 287 => "11010", 288 => "11101", 289 => "00110", 
    290 => "00111", 291 => "00000", 292 => "11110", 293 => "11101", 294 => "11100", 
    295 => "00100", 296 => "11110", 297 => "11100", 298 => "00000", 299 => "00010", 
    300 => "00001", 301 => "00000", 302 => "00010", 303 to 305=> "00000", 306 => "00100", 
    307 => "11110", 308 => "00100", 309 => "00000", 310 => "00101", 311 => "00010", 
    312 => "00000", 313 => "00011", 314 => "11110", 315 to 316=> "00000", 317 => "00011", 
    318 to 515=> "00000", 516 to 517=> "11101", 518 => "00000", 519 => "01110", 520 to 522=> "00000", 
    523 => "00010", 524 => "00000", 525 => "01010", 526 => "00101", 527 => "00000", 
    528 => "11110", 529 => "11000", 530 => "00001", 531 => "11101", 532 to 533=> "00010", 
    534 => "00000", 535 => "11111", 536 to 537=> "00000", 538 => "01001", 539 => "11110", 
    540 to 541=> "00011", 542 => "11101", 543 => "00101", 544 => "11010", 545 => "11101", 
    546 to 547=> "00000", 548 => "11100", 549 => "01000", 550 => "11111", 551 => "00011", 
    552 => "00111", 553 => "11001", 554 => "00000", 555 => "10011", 556 => "00000", 
    557 => "00111", 558 => "00010", 559 => "00001", 560 to 561=> "00000", 562 => "00001", 
    563 => "00111", 564 => "00110", 565 => "00000", 566 => "11101", 567 => "00010", 
    568 => "00100", 569 => "00101", 570 => "01010", 571 to 572=> "00000", 573 => "11111", 
    574 to 707=> "00000", 708 => "00001", 709 => "11111", 710 to 714=> "00000", 715 => "00010", 
    716 => "00000", 717 => "00001", 718 => "11100", 719 => "00000", 720 => "00100", 
    721 => "11101", 722 to 723=> "11111", 724 => "00001", 725 => "11111", 726 to 729=> "00000", 
    730 => "00001", 731 to 733=> "11111", 734 => "00001", 735 => "11100", 736 => "11110", 
    737 => "00011", 738 => "00100", 739 => "00000", 740 => "11111", 741 to 742=> "11110", 
    743 => "00010", 744 => "11111", 745 => "11110", 746 => "00000", 747 => "00001", 
    748 to 749=> "00000", 750 => "00001", 751 to 753=> "00000", 754 => "00010", 755 => "11111", 
    756 => "00010", 757 => "00000", 758 => "00011", 759 => "00001", 760 => "00000", 
    761 => "00010", 762 => "11110", 763 to 764=> "00000", 765 => "00010", 766 to 771=> "00000", 
    772 => "11111", 773 to 774=> "00000", 775 => "00111", 776 to 778=> "00000", 779 => "00001", 
    780 => "00000", 781 => "00101", 782 => "00010", 783 => "00000", 784 => "11111", 
    785 => "11100", 786 => "00000", 787 => "11111", 788 => "00001", 789 => "00010", 
    790 to 793=> "00000", 794 => "00100", 795 => "11110", 796 => "00001", 797 => "00010", 
    798 => "11111", 799 => "00011", 800 => "11101", 801 to 802=> "11111", 803 => "00000", 
    804 => "11110", 805 => "00011", 806 => "11111", 807 => "00010", 808 => "00100", 
    809 => "11101", 810 => "00000", 811 => "11011", 812 => "00001", 813 => "00100", 
    814 to 815=> "00001", 816 to 817=> "00000", 818 => "00001", 819 to 820=> "00011", 821 => "00000", 
    822 => "11111", 823 => "00001", 824 => "00011", 825 => "00010", 826 => "00100", 
    827 to 899=> "00000", 900 => "00101", 901 => "00010", 902 => "00000", 903 => "00001", 
    904 to 906=> "00000", 907 => "00001", 908 => "00000", 909 => "00100", 910 => "00010", 
    911 to 912=> "00000", 913 to 914=> "00011", 915 => "00001", 916 => "00111", 917 => "11100", 
    918 => "00000", 919 => "00001", 920 to 921=> "00000", 922 => "00010", 923 => "00001", 
    924 => "00000", 925 to 926=> "00101", 927 => "11100", 928 => "00101", 929 => "00001", 
    930 => "00000", 931 => "01001", 932 => "00010", 933 => "00101", 934 => "00011", 
    935 => "11011", 936 => "11110", 937 => "11010", 938 => "00000", 939 => "00001", 
    940 => "00010", 941 => "00101", 942 => "00111", 943 => "11100", 944 to 945=> "00000", 
    946 => "11011", 947 => "00001", 948 => "11100", 949 => "00000", 950 => "00011", 
    951 => "00111", 952 => "00101", 953 to 954=> "11111", 955 to 963=> "00000", 964 => "01001", 
    965 => "10110", 966 => "00000", 967 => "11100", 968 to 970=> "00000", 971 => "11010", 
    972 => "00000", 973 => "00010", 974 => "00100", 975 => "00000", 976 => "00011", 
    977 => "00111", 978 => "01101", 979 => "11111", 980 => "00110", 981 => "10010", 
    982 => "00000", 983 => "11011", 984 to 985=> "00000", 986 => "00010", 987 => "00100", 
    988 => "01001", 989 => "11111", 990 => "00101", 991 => "10101", 992 => "11110", 
    993 => "00000", 994 => "01011", 995 => "00101", 996 => "00100", 997 => "01011", 
    998 => "00000", 999 => "11000", 1000 => "10111", 1001 to 1002=> "00000", 1003 => "10111", 
    1004 => "11110", 1005 => "00000", 1006 => "00111", 1007 => "11100", 1008 to 1009=> "00000", 
    1010 => "11011", 1011 => "11111", 1012 => "00011", 1013 => "00000", 1014 => "00110", 
    1015 => "00111", 1016 to 1017=> "00000", 1018 => "11110", 1019 to 1020=> "00000", 1021 => "00100", 
    1022 to 1023=> "00000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity Conv1DMac_new_1_wXh4 is
    generic (
        DataWidth : INTEGER := 5;
        AddressRange : INTEGER := 1024;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Conv1DMac_new_1_wXh4 is
    component Conv1DMac_new_1_wXh4_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Conv1DMac_new_1_wXh4_rom_U :  component Conv1DMac_new_1_wXh4_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


