-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Conv1DMac_new415_Shg_rom is 
    generic(
             DWIDTH     : integer := 8; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 1024
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Conv1DMac_new415_Shg_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 191=> "00000000", 192 => "00101010", 193 => "00001111", 194 => "11100110", 
    195 => "00000101", 196 => "11110001", 197 => "00000000", 198 => "00010111", 
    199 => "00101110", 200 => "11110001", 201 => "11101111", 202 => "11111011", 
    203 => "00011111", 204 => "11110110", 205 => "00000000", 206 => "11100001", 
    207 => "00011000", 208 => "00010100", 209 => "00011110", 210 => "10100011", 
    211 => "11111011", 212 => "00010000", 213 => "00000011", 214 => "11110000", 
    215 => "00010100", 216 => "00001000", 217 => "00011110", 218 => "11111000", 
    219 => "11100110", 220 => "00011011", 221 => "00001000", 222 => "00101010", 
    223 => "00101111", 224 => "00011001", 225 => "00100000", 226 => "00100001", 
    227 => "00001010", 228 => "11000100", 229 => "11011001", 230 => "00000000", 
    231 => "11111100", 232 => "00100111", 233 => "00010110", 234 => "11101110", 
    235 => "00000000", 236 => "00011010", 237 => "00010111", 238 => "00000001", 
    239 => "11110011", 240 => "00000011", 241 => "00010111", 242 => "00000011", 
    243 => "00001111", 244 => "00010110", 245 => "00000000", 246 => "00000100", 
    247 => "10101111", 248 => "11101110", 249 => "00001000", 250 => "00000110", 
    251 => "00101001", 252 => "00001100", 253 => "00001101", 254 => "00011001", 
    255 => "11111010", 256 => "11111101", 257 => "00000110", 258 => "00001110", 
    259 => "00001100", 260 => "11110101", 261 => "00000000", 262 to 263=> "11111111", 
    264 => "11101111", 265 => "11101001", 266 => "11110100", 267 => "11101001", 
    268 => "11111110", 269 => "00000000", 270 => "00001001", 271 => "00000000", 
    272 to 273=> "00000001", 274 => "00000010", 275 => "11111011", 276 => "11111000", 
    277 => "11110000", 278 => "00000010", 279 => "00001110", 280 => "11111100", 
    281 => "11111010", 282 => "00000110", 283 => "00001110", 284 => "11111101", 
    285 => "00011001", 286 => "11111010", 287 => "00001001", 288 => "00100011", 
    289 => "11111010", 290 => "11111001", 291 => "11111100", 292 => "00010111", 
    293 => "11111110", 294 => "00000000", 295 => "11111110", 296 => "00010010", 
    297 => "11111000", 298 => "00001000", 299 => "00001111", 300 => "11111111", 
    301 => "00000101", 302 => "11110100", 303 => "11011011", 304 => "00000110", 
    305 => "00001100", 306 => "11100101", 307 => "00000010", 308 => "11111001", 
    309 => "00000000", 310 => "00000101", 311 => "00001100", 312 to 313=> "00001000", 
    314 => "11111111", 315 => "11111100", 316 => "11111101", 317 => "11111111", 
    318 => "11110011", 319 => "00001011", 320 to 383=> "00000000", 384 => "00000011", 
    385 => "00000101", 386 => "00000111", 387 => "11111101", 388 to 389=> "00000000", 
    390 => "00000010", 391 => "00000101", 392 => "11111010", 393 => "11110110", 
    394 => "00001010", 395 to 396=> "11111101", 397 to 398=> "00000000", 399 => "00000101", 
    400 => "11111001", 401 => "11111100", 402 => "00000101", 403 => "11110101", 
    404 => "00000001", 405 => "00000110", 406 => "11111100", 407 => "00000111", 
    408 => "00001001", 409 => "11111001", 410 => "00000010", 411 => "11111010", 
    412 => "11111000", 413 => "00000111", 414 => "00001000", 415 => "11111110", 
    416 => "00001000", 417 => "11111011", 418 => "00000111", 419 => "11111001", 
    420 => "11111000", 421 => "00000001", 422 => "00000000", 423 => "00001011", 
    424 => "00001000", 425 => "11110111", 426 to 427=> "00000010", 428 => "11111100", 
    429 to 430=> "00001001", 431 => "00000010", 432 => "00001001", 433 => "00000010", 
    434 => "00000001", 435 => "00000000", 436 => "00001000", 437 => "00000000", 
    438 => "00001001", 439 => "00000000", 440 => "00000001", 441 => "00001000", 
    442 => "11111111", 443 => "00000010", 444 => "11111001", 445 => "00000010", 
    446 => "00001010", 447 => "11111101", 448 to 449=> "11111010", 450 => "11110110", 
    451 => "00000011", 452 => "00001101", 453 => "00000000", 454 => "11111110", 
    455 to 456=> "11111101", 457 => "00001010", 458 => "00001100", 459 => "11111111", 
    460 => "00000101", 461 => "00000000", 462 => "00001101", 463 => "00001000", 
    464 => "00000110", 465 => "11111011", 466 => "11111101", 467 => "00000001", 
    468 => "11111010", 469 => "11111101", 470 => "11111110", 471 => "00000101", 
    472 => "00001101", 473 => "00000010", 474 => "11111010", 475 => "00001101", 
    476 => "00001010", 477 => "00000110", 478 => "00000001", 479 => "11111100", 
    480 => "11111110", 481 => "00000000", 482 => "11111001", 483 => "00000101", 
    484 => "00001100", 485 => "00000001", 486 => "00000000", 487 => "00001110", 
    488 => "11111111", 489 => "11110110", 490 => "11111100", 491 => "11111011", 
    492 => "11111111", 493 => "11111011", 494 => "00010011", 495 => "00000111", 
    496 => "00001100", 497 => "11111111", 498 => "00000001", 499 => "00000000", 
    500 => "00001111", 501 => "00000000", 502 => "00001111", 503 to 504=> "11111111", 
    505 => "11111110", 506 => "00000111", 507 => "11111010", 508 => "00000111", 
    509 => "11111101", 510 => "00000010", 511 => "00001010", 512 => "00000001", 
    513 => "11111101", 514 => "11111111", 515 => "11111010", 516 => "11101101", 
    517 => "00000000", 518 => "00011100", 519 => "11111001", 520 => "11111011", 
    521 => "00011010", 522 => "00000010", 523 => "11101110", 524 => "00000010", 
    525 => "00000000", 526 => "00001001", 527 => "00011100", 528 => "11111010", 
    529 => "11110110", 530 => "00011011", 531 => "11111010", 532 => "00000101", 
    533 => "11101100", 534 => "00010001", 535 => "11111001", 536 => "00001101", 
    537 => "11101000", 538 => "00001110", 539 => "00001101", 540 => "00000111", 
    541 => "11111010", 542 => "00001001", 543 => "11110010", 544 => "00000001", 
    545 => "11101111", 546 => "11111110", 547 => "00011010", 548 => "00000100", 
    549 => "00011010", 550 => "00000000", 551 => "00000010", 552 => "00010010", 
    553 => "00000011", 554 => "00001100", 555 => "11110010", 556 => "11101011", 
    557 => "00000011", 558 => "00001110", 559 => "00001001", 560 => "00000010", 
    561 => "00010100", 562 => "00000010", 563 => "11111001", 564 => "00001001", 
    565 => "00000000", 566 => "00000010", 567 => "00011001", 568 => "00000101", 
    569 => "00001100", 570 => "11110100", 571 to 572=> "11110111", 573 => "00001001", 
    574 => "11111101", 575 => "00011001", 576 => "11110110", 577 => "00000000", 
    578 => "11111101", 579 => "00000000", 580 => "11111001", 581 => "00000000", 
    582 => "11111101", 583 => "00000011", 584 => "11111101", 585 => "11101011", 
    586 => "00001000", 587 => "00000110", 588 => "11100100", 589 => "00000000", 
    590 => "11101001", 591 => "00000101", 592 => "00001100", 593 => "11111011", 
    594 => "11100000", 595 => "00001010", 596 => "00000001", 597 => "11100001", 
    598 => "11011111", 599 to 600=> "00000101", 601 => "11111001", 602 => "11111110", 
    603 => "11110101", 604 => "00000000", 605 => "00001000", 606 => "00101000", 
    607 => "00000011", 608 => "00000001", 609 => "00000000", 610 => "00001011", 
    611 => "11110000", 612 => "11110001", 613 => "11100101", 614 => "00000000", 
    615 => "00001010", 616 => "00001011", 617 => "00000111", 618 => "11101110", 
    619 => "11110100", 620 => "11110101", 621 => "00000000", 622 => "00000010", 
    623 => "11101100", 624 => "00000001", 625 => "11111011", 626 => "11100100", 
    627 => "00010010", 628 => "00001011", 629 => "00000000", 630 => "00000110", 
    631 => "11011100", 632 => "00000010", 633 => "00000100", 634 => "00010000", 
    635 => "11110010", 636 => "00000101", 637 => "11100110", 638 => "00000001", 
    639 => "11110110", 640 to 703=> "00000000", 704 => "11111100", 705 => "11111101", 
    706 => "00000010", 707 => "00000000", 708 => "00000111", 709 to 710=> "00000000", 
    711 => "00000001", 712 => "11111100", 713 => "11111101", 714 => "00001001", 
    715 => "11111111", 716 to 717=> "00000000", 718 => "00000111", 719 => "00000110", 
    720 => "00000010", 721 => "11111001", 722 => "11111110", 723 => "11111100", 
    724 => "11111011", 725 => "11111111", 726 => "11111101", 727 => "00001000", 
    728 => "00001011", 729 => "11111110", 730 => "11111100", 731 => "00000110", 
    732 => "00000011", 733 => "00001111", 734 => "00000001", 735 => "11111111", 
    736 => "00000111", 737 to 738=> "11111110", 739 => "11111101", 740 => "00000101", 
    741 => "11111110", 742 => "00000000", 743 => "00001110", 744 => "00000101", 
    745 => "11110100", 746 => "00000000", 747 => "00000011", 748 => "11111111", 
    749 => "00000000", 750 => "00001101", 751 => "11111011", 752 => "00001101", 
    753 => "00000000", 754 => "11111101", 755 => "00000010", 756 => "00001010", 
    757 => "00000000", 758 => "00010000", 759 => "11111110", 760 => "00000010", 
    761 => "00000001", 762 => "00000110", 763 => "11111101", 764 to 765=> "11111110", 
    766 => "00000001", 767 => "00000111", 768 => "00011001", 769 => "00101011", 
    770 => "11110000", 771 => "11110110", 772 => "00011101", 773 => "00000000", 
    774 => "00011100", 775 => "11111011", 776 => "00011010", 777 => "11110111", 
    778 => "11111010", 779 => "11011000", 780 => "11111000", 781 => "00000000", 
    782 => "11101001", 783 => "11110111", 784 => "11101110", 785 => "11010001", 
    786 => "11111010", 787 => "00011010", 788 => "01000000", 789 => "00001111", 
    790 => "11110000", 791 => "11011011", 792 => "00000011", 793 => "00010101", 
    794 => "11101001", 795 => "11001110", 796 => "00001000", 797 => "11101100", 
    798 => "00001010", 799 => "11011100", 800 => "11111000", 801 => "00110010", 
    802 => "00011110", 803 => "00001001", 804 => "11110000", 805 => "11111111", 
    806 => "00000000", 807 => "11110001", 808 => "11001000", 809 to 810=> "00011000", 
    811 => "00010101", 812 => "11111110", 813 => "00011111", 814 => "11110001", 
    815 => "11111100", 816 => "11110100", 817 => "11010011", 818 => "00011101", 
    819 => "11001111", 820 => "11110010", 821 => "00000000", 822 => "11110000", 
    823 => "00001001", 824 => "00000010", 825 => "11101110", 826 => "11111110", 
    827 => "11011011", 828 => "00011000", 829 => "00100110", 830 => "00100100", 
    831 => "11111111", 832 => "11111010", 833 => "00000010", 834 => "11111001", 
    835 => "00000100", 836 => "00001000", 837 => "00000000", 838 => "00001100", 
    839 => "00000000", 840 => "11111001", 841 => "00001111", 842 => "00001011", 
    843 => "11101100", 844 => "00000101", 845 => "00000000", 846 => "00010101", 
    847 => "00001111", 848 => "11111001", 849 => "11111000", 850 => "00000010", 
    851 => "11111101", 852 => "00000101", 853 => "11111010", 854 => "11111100", 
    855 => "00000001", 856 => "00010000", 857 => "11110101", 858 => "00000010", 
    859 => "00001110", 860 => "00001101", 861 => "00001011", 862 => "00001010", 
    863 => "11110010", 864 => "00000100", 865 => "11111001", 866 => "11111111", 
    867 => "00001110", 868 => "00010001", 869 => "00001100", 870 => "00000000", 
    871 => "00001111", 872 => "00000100", 873 => "11110111", 874 => "11111010", 
    875 => "11111100", 876 => "11111001", 877 => "00000100", 878 => "00010111", 
    879 => "00000101", 880 => "00001110", 881 => "00001100", 882 => "00000101", 
    883 => "11111110", 884 => "00010010", 885 => "00000000", 886 => "00010011", 
    887 => "11111110", 888 => "00001000", 889 => "00000011", 890 => "00000110", 
    891 => "11110110", 892 => "00000000", 893 => "11110110", 894 => "00000111", 
    895 => "00010111", 896 => "00001111", 897 => "11111000", 898 => "00110010", 
    899 => "00001011", 900 => "11010010", 901 => "00000000", 902 => "00000101", 
    903 => "00001011", 904 => "00100001", 905 => "11100110", 906 => "00001101", 
    907 => "11101000", 908 => "10111110", 909 => "00000000", 910 => "11111101", 
    911 => "11101101", 912 => "11100011", 913 => "11100100", 914 => "11101010", 
    915 => "00000001", 916 => "00011101", 917 => "00011001", 918 => "11111001", 
    919 => "11110100", 920 => "00010101", 921 => "11111010", 922 => "00001101", 
    923 => "10111111", 924 => "11110010", 925 => "11111010", 926 => "00010100", 
    927 => "11101110", 928 => "00001111", 929 => "11111010", 930 => "00011100", 
    931 => "00010011", 932 => "11111000", 933 => "11010011", 934 => "00000000", 
    935 => "00001010", 936 => "11101111", 937 => "11110000", 938 => "00011011", 
    939 => "11111101", 940 => "11110000", 941 to 942=> "00000100", 943 => "00010101", 
    944 => "00001001", 945 => "11010110", 946 => "00010010", 947 => "11010000", 
    948 => "00000001", 949 => "00000000", 950 => "00000011", 951 => "00001011", 
    952 => "00000101", 953 => "11110000", 954 => "11111010", 955 => "00100101", 
    956 => "00000100", 957 => "00100010", 958 => "11111000", 959 => "11111001", 
    960 to 1023=> "00000000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity Conv1DMac_new415_Shg is
    generic (
        DataWidth : INTEGER := 8;
        AddressRange : INTEGER := 1024;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Conv1DMac_new415_Shg is
    component Conv1DMac_new415_Shg_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Conv1DMac_new415_Shg_rom_U :  component Conv1DMac_new415_Shg_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


