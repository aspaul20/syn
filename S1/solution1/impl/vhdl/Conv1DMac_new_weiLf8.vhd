-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Conv1DMac_new_weiLf8_rom is 
    generic(
             DWIDTH     : integer := 8; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 1024
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Conv1DMac_new_weiLf8_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "11111000", 1 => "11111111", 2 => "00001000", 3 => "00000110", 
    4 => "00000000", 5 => "00000001", 6 => "11111010", 7 to 8=> "00000111", 
    9 => "11110000", 10 => "00000000", 11 => "00000010", 12 => "11111001", 
    13 => "11111101", 14 => "00001100", 15 => "00010100", 16 => "11111000", 
    17 => "11111110", 18 => "11111101", 19 => "11111100", 20 => "11111110", 
    21 => "00000011", 22 => "11111101", 23 => "00001111", 24 => "11110100", 
    25 => "11111000", 26 => "00001001", 27 to 28=> "11111011", 29 => "11100011", 
    30 => "11110101", 31 => "11111110", 32 => "00000111", 33 => "11110110", 
    34 => "00001110", 35 => "00000111", 36 => "11111011", 37 => "11111110", 
    38 => "00000111", 39 => "11111011", 40 => "11110101", 41 => "11111001", 
    42 => "00000011", 43 => "00000000", 44 => "11111111", 45 => "00010001", 
    46 => "00000000", 47 => "00001110", 48 => "11111011", 49 => "00001101", 
    50 to 51=> "00000000", 52 => "11111110", 53 => "00000001", 54 => "11111010", 
    55 => "00000000", 56 => "11111110", 57 => "00011110", 58 => "00001100", 
    59 => "11111000", 60 => "11101001", 61 => "00000001", 62 => "00000101", 
    63 => "11101111", 64 to 127=> "00000000", 128 => "11111110", 129 => "11110010", 
    130 to 131=> "11110100", 132 => "00000000", 133 => "11011100", 134 => "00000011", 
    135 => "11101110", 136 => "11110010", 137 => "00010010", 138 => "00000000", 
    139 => "11111100", 140 => "00000100", 141 => "00001011", 142 => "11101110", 
    143 => "11011011", 144 => "00000000", 145 => "11110100", 146 => "11111100", 
    147 => "11101010", 148 => "00000011", 149 => "11110000", 150 => "11111100", 
    151 => "11101101", 152 => "00010001", 153 => "11101000", 154 => "11101110", 
    155 => "00000101", 156 => "00000111", 157 => "11110101", 158 => "00000111", 
    159 => "11101011", 160 => "11101111", 161 => "11110100", 162 => "11101010", 
    163 => "11111101", 164 to 165=> "11110110", 166 => "11100111", 167 => "11101111", 
    168 => "11111010", 169 => "11110111", 170 => "11111001", 171 => "00000000", 
    172 => "11001100", 173 => "00000001", 174 => "00000000", 175 => "11111101", 
    176 => "11110101", 177 => "11111101", 178 => "00000000", 179 => "11111010", 
    180 => "11111011", 181 => "00000011", 182 => "11110001", 183 => "00000000", 
    184 => "00000001", 185 => "00001000", 186 => "11110101", 187 => "11111110", 
    188 => "00001110", 189 => "11110011", 190 => "11010110", 191 => "11110010", 
    192 to 255=> "00000000", 256 => "11111011", 257 => "11110010", 258 => "11111110", 
    259 => "00000100", 260 => "00000000", 261 => "11110010", 262 => "11111110", 
    263 => "11110000", 264 => "11111001", 265 => "00000111", 266 => "00000000", 
    267 => "11110101", 268 => "11111011", 269 => "11111100", 270 => "00000010", 
    271 => "11111100", 272 => "11111011", 273 => "11101011", 274 => "11100100", 
    275 => "11101000", 276 => "11111101", 277 to 278=> "11111001", 279 => "11101101", 
    280 => "00010011", 281 => "00001010", 282 => "00000111", 283 => "11101100", 
    284 => "00000100", 285 => "00010001", 286 => "11110101", 287 => "00001010", 
    288 => "11111001", 289 => "11111011", 290 => "11101010", 291 => "11111001", 
    292 => "00000111", 293 => "11111000", 294 => "11110100", 295 => "00011000", 
    296 => "11101000", 297 => "00001111", 298 => "11110101", 299 => "00000000", 
    300 => "11111010", 301 => "11110101", 302 => "00000000", 303 => "11111011", 
    304 => "11111100", 305 to 306=> "00000000", 307 => "11110110", 308 => "00010000", 
    309 => "00000110", 310 => "11111101", 311 => "00000000", 312 => "11111010", 
    313 => "11111001", 314 => "11110110", 315 => "11111010", 316 => "00000010", 
    317 => "11110010", 318 => "11110111", 319 => "11111010", 320 => "00000011", 
    321 => "00010010", 322 => "11110001", 323 => "11111001", 324 => "00000000", 
    325 => "00001000", 326 => "00000000", 327 => "11111110", 328 => "00000100", 
    329 => "11110001", 330 => "00000000", 331 => "00000011", 332 => "11110011", 
    333 => "11110101", 334 => "11111111", 335 => "11111110", 336 => "00000010", 
    337 => "00010010", 338 => "00011010", 339 => "00000011", 340 => "00000000", 
    341 => "00001100", 342 => "00000101", 343 => "11111001", 344 => "11110010", 
    345 => "11111110", 346 => "11110101", 347 => "00001010", 348 => "11111111", 
    349 => "00000001", 350 => "11111010", 351 => "11111110", 352 => "00001110", 
    353 => "00001101", 354 => "00000100", 355 => "11111111", 356 => "11110010", 
    357 => "00010010", 358 => "00001111", 359 => "11111000", 360 => "00010100", 
    361 => "11111011", 362 => "00000100", 363 => "00000000", 364 => "11110001", 
    365 => "11111000", 366 => "00000000", 367 => "11110010", 368 => "00001011", 
    369 => "11111100", 370 => "00000000", 371 => "00000110", 372 => "11110100", 
    373 => "11110010", 374 => "00001101", 375 => "00000000", 376 => "00000001", 
    377 => "11111100", 378 => "00000100", 379 => "00000010", 380 => "11111111", 
    381 => "00000001", 382 to 383=> "00001011", 384 => "11111101", 385 => "00000010", 
    386 => "11100010", 387 => "11111010", 388 => "00000000", 389 => "11111001", 
    390 => "11111101", 391 => "00000011", 392 => "00001010", 393 => "00000010", 
    394 => "00000000", 395 => "00000100", 396 => "00000001", 397 => "00001100", 
    398 => "00001000", 399 => "00010001", 400 => "11111101", 401 => "11111111", 
    402 => "11110000", 403 => "11111011", 404 => "00000001", 405 => "00001011", 
    406 => "00000010", 407 => "11101100", 408 => "11111111", 409 => "00000010", 
    410 => "11111010", 411 => "11111110", 412 => "00001000", 413 => "01010011", 
    414 => "11111011", 415 => "11001001", 416 => "11101101", 417 => "11111110", 
    418 => "11100110", 419 => "11010011", 420 => "11110110", 421 => "11111011", 
    422 => "11111111", 423 => "11101011", 424 => "11101100", 425 => "11111101", 
    426 => "11101101", 427 => "00000000", 428 => "00001010", 429 => "11110100", 
    430 => "00000000", 431 => "11101111", 432 => "11110001", 433 => "00001001", 
    434 => "00000000", 435 => "11111111", 436 => "11111101", 437 => "00000110", 
    438 => "11100110", 439 => "00000000", 440 => "00000010", 441 => "00001011", 
    442 => "11111111", 443 => "11111110", 444 => "11101001", 445 => "11100101", 
    446 => "11101011", 447 => "11110101", 448 => "00001010", 449 => "00000001", 
    450 => "11110111", 451 => "11111010", 452 => "00000000", 453 => "11110010", 
    454 => "00000101", 455 => "11110110", 456 => "00000101", 457 => "00000010", 
    458 => "00000000", 459 => "00001100", 460 to 461=> "00000110", 462 => "00000000", 
    463 => "11110011", 464 => "00001011", 465 => "11111110", 466 => "00000000", 
    467 => "00001011", 468 => "00000111", 469 => "00001101", 470 => "00001100", 
    471 => "00000111", 472 => "11111101", 473 => "11111011", 474 => "11110110", 
    475 => "00001100", 476 => "11110111", 477 => "11100110", 478 => "00001011", 
    479 => "11111101", 480 => "11110100", 481 => "11111110", 482 => "00000111", 
    483 => "00000110", 484 => "11110110", 485 => "00001000", 486 => "00011010", 
    487 => "11110111", 488 => "11110010", 489 => "11111000", 490 => "00000010", 
    491 => "00000000", 492 to 493=> "11111011", 494 => "00000000", 495 => "11101111", 
    496 => "00001000", 497 => "11111100", 498 => "00000000", 499 => "00000100", 
    500 => "11111010", 501 => "00000001", 502 => "11111101", 503 => "00000000", 
    504 => "00001011", 505 => "11110101", 506 => "11110111", 507 => "00001100", 
    508 => "11101101", 509 => "11111100", 510 => "00010100", 511 => "11110110", 
    512 => "11111101", 513 => "11100100", 514 => "11110110", 515 => "11111010", 
    516 => "00000000", 517 => "11110101", 518 => "11111111", 519 => "11111000", 
    520 => "11111111", 521 => "11101111", 522 to 523=> "00000000", 524 => "11110010", 
    525 => "11110101", 526 => "11110011", 527 => "11101110", 528 => "11111101", 
    529 => "11110100", 530 => "00011010", 531 => "11101011", 532 => "00000010", 
    533 => "11111100", 534 => "11111110", 535 => "00000111", 536 => "11011111", 
    537 => "11100101", 538 => "00000001", 539 => "00000100", 540 => "11111101", 
    541 => "11101011", 542 => "00000111", 543 => "11111000", 544 => "00001011", 
    545 => "11111000", 546 => "00000011", 547 => "00001110", 548 => "00000110", 
    549 => "11111010", 550 => "00000110", 551 => "11110010", 552 => "00001010", 
    553 => "00000001", 554 => "00000010", 555 => "00000000", 556 => "11110000", 
    557 => "00001001", 558 => "00000000", 559 => "11111101", 560 => "00001001", 
    561 => "00000011", 562 => "00000000", 563 => "11110001", 564 to 565=> "11111110", 
    566 => "11110011", 567 => "00000000", 568 => "00000001", 569 => "00001101", 
    570 => "00001010", 571 => "11111101", 572 => "00001000", 573 => "11110111", 
    574 => "00000001", 575 => "11110001", 576 => "11111110", 577 => "00011001", 
    578 => "11110101", 579 => "11111101", 580 => "00000000", 581 => "00010000", 
    582 => "00000000", 583 => "11110001", 584 => "00001000", 585 => "11110110", 
    586 => "00000000", 587 => "00000010", 588 => "11111111", 589 => "00000001", 
    590 => "11111110", 591 => "00011000", 592 => "11111110", 593 => "00000010", 
    594 => "11101010", 595 => "11111010", 596 => "00000011", 597 => "11101100", 
    598 => "00000000", 599 => "11110101", 600 => "11110011", 601 => "11101110", 
    602 => "00010011", 603 => "00000100", 604 => "00000000", 605 => "00000111", 
    606 => "11111110", 607 => "11101011", 608 => "00001100", 609 => "11111101", 
    610 => "11111110", 611 => "00010001", 612 => "00000000", 613 => "11110001", 
    614 => "11101001", 615 => "11110100", 616 => "11101101", 617 => "11110001", 
    618 => "11101101", 619 => "00000000", 620 => "11110001", 621 => "11111111", 
    622 => "00000000", 623 => "11111101", 624 => "11110111", 625 => "00001010", 
    626 => "00000000", 627 => "11111100", 628 => "11101000", 629 => "11111111", 
    630 => "11101111", 631 => "00000000", 632 => "00000010", 633 => "00010101", 
    634 => "00000100", 635 => "11111101", 636 => "11110010", 637 => "11111000", 
    638 => "11101100", 639 => "00000011", 640 => "11110010", 641 => "11101011", 
    642 => "11111100", 643 => "00000110", 644 => "00000000", 645 => "11111111", 
    646 => "11110111", 647 => "11110011", 648 => "00000011", 649 => "11100100", 
    650 => "00000000", 651 => "11101101", 652 => "11111010", 653 => "11111110", 
    654 => "11111000", 655 => "11101111", 656 => "11110001", 657 => "11111111", 
    658 => "00000100", 659 => "11111000", 660 => "11110100", 661 => "11111100", 
    662 => "11110100", 663 => "11110111", 664 => "11111100", 665 => "00001101", 
    666 => "11100110", 667 => "00000010", 668 => "00000000", 669 => "00110100", 
    670 => "11111010", 671 => "11101001", 672 => "11111110", 673 => "00000110", 
    674 => "11110001", 675 => "11101010", 676 => "11111110", 677 => "11110101", 
    678 => "00000001", 679 => "00000100", 680 => "11101110", 681 => "00001101", 
    682 => "11111001", 683 => "00000000", 684 => "11111010", 685 => "11111110", 
    686 => "00000000", 687 => "00000010", 688 => "11111010", 689 => "11110000", 
    690 => "00000000", 691 => "11111110", 692 => "11101101", 693 => "11111111", 
    694 => "11111110", 695 => "00000000", 696 => "11110001", 697 => "00010100", 
    698 => "11111100", 699 => "11110001", 700 => "11101111", 701 => "00000011", 
    702 => "11111111", 703 => "00000010", 704 => "11111101", 705 => "11100010", 
    706 => "00001000", 707 => "11101110", 708 => "00000000", 709 => "11101100", 
    710 => "11111110", 711 => "11011110", 712 => "11110010", 713 => "00000110", 
    714 => "00000000", 715 => "00000001", 716 => "00000000", 717 => "00000001", 
    718 => "00000011", 719 => "00001001", 720 => "11111110", 721 => "11111011", 
    722 => "11101010", 723 => "00001100", 724 => "11111111", 725 => "11111101", 
    726 => "11111110", 727 => "00001010", 728 => "00100110", 729 => "00010010", 
    730 => "11110011", 731 => "00000001", 732 => "11111100", 733 => "11101110", 
    734 => "00000001", 735 => "11111001", 736 => "11111110", 737 => "11110101", 
    738 => "00001000", 739 => "11111110", 740 => "00001001", 741 => "11111010", 
    742 => "00000101", 743 => "11110110", 744 => "11111101", 745 => "11111001", 
    746 => "00001100", 747 => "00000000", 748 => "11111111", 749 => "11111110", 
    750 => "00000000", 751 => "00000001", 752 => "11100110", 753 => "00000001", 
    754 => "00000000", 755 => "11111110", 756 => "00001011", 757 => "00000100", 
    758 => "11111110", 759 => "00000000", 760 => "11111111", 761 => "00000000", 
    762 => "11111000", 763 => "11111110", 764 => "11111011", 765 => "00000001", 
    766 => "11110110", 767 => "11110011", 768 => "11111110", 769 => "11100001", 
    770 => "11111001", 771 => "00000010", 772 => "00000000", 773 => "11111000", 
    774 => "11111111", 775 => "00000010", 776 => "11110100", 777 => "11111011", 
    778 => "00000000", 779 => "11111111", 780 => "00000011", 781 => "00000001", 
    782 => "11111000", 783 => "11100100", 784 => "11111110", 785 => "00001000", 
    786 => "00100010", 787 => "11101110", 788 => "00000000", 789 => "00000101", 
    790 => "11111101", 791 => "11110111", 792 => "11011101", 793 => "11110111", 
    794 => "11111001", 795 => "11111010", 796 => "11111111", 797 => "00000011", 
    798 => "00000010", 799 => "00000100", 800 => "11110101", 801 => "00000001", 
    802 => "11111000", 803 => "11101100", 804 to 805=> "00000011", 806 => "00000000", 
    807 => "11111111", 808 => "00000101", 809 => "11110110", 810 => "11111110", 
    811 => "00000000", 812 => "11100010", 813 => "00000100", 814 => "00000000", 
    815 => "11111101", 816 => "00001101", 817 => "11110110", 818 => "00000000", 
    819 => "00001011", 820 => "11110101", 821 => "00000110", 822 => "00001001", 
    823 => "00000000", 824 => "11111110", 825 => "00000110", 826 => "00000000", 
    827 => "11111110", 828 => "11111100", 829 => "11111101", 830 => "11111111", 
    831 => "00001001", 832 to 895=> "00000000", 896 => "00000101", 897 => "00000001", 
    898 => "11100100", 899 => "11111111", 900 => "00000000", 901 => "11101100", 
    902 => "00000011", 903 to 904=> "11111111", 905 => "00010111", 906 => "00000000", 
    907 => "00000001", 908 => "00001001", 909 => "00010011", 910 => "00000010", 
    911 => "00000111", 912 => "00000110", 913 => "11101011", 914 => "11111111", 
    915 => "00000011", 916 => "00000001", 917 => "00000010", 918 => "00000011", 
    919 => "11110000", 920 => "00001101", 921 => "00000100", 922 => "11111001", 
    923 => "00001110", 924 => "00000000", 925 => "00001101", 926 => "00000101", 
    927 => "11111000", 928 => "11110100", 929 => "11101101", 930 => "11110111", 
    931 => "11101011", 932 => "00000000", 933 => "00001100", 934 => "00000001", 
    935 => "00011010", 936 => "00000000", 937 => "00010010", 938 => "11101101", 
    939 => "00000000", 940 => "00011000", 941 => "11110110", 942 => "00000000", 
    943 => "11111011", 944 => "00001001", 945 => "00000010", 946 => "00000000", 
    947 => "11101111", 948 => "11111111", 949 => "11101100", 950 => "11100001", 
    951 => "00000000", 952 => "00000011", 953 => "11111111", 954 => "11110001", 
    955 => "00000110", 956 => "00010111", 957 => "11111101", 958 => "00000001", 
    959 => "11110010", 960 => "00000011", 961 => "11111010", 962 => "00000101", 
    963 => "00000111", 964 => "00000000", 965 to 966=> "00000001", 967 => "11111001", 
    968 => "00000100", 969 => "00000010", 970 => "00000000", 971 => "00000010", 
    972 => "00000011", 973 to 974=> "00000110", 975 => "11010000", 976 => "00000011", 
    977 => "11111010", 978 => "11111011", 979 => "00000101", 980 => "00000001", 
    981 => "00000000", 982 => "00000100", 983 => "00000000", 984 => "00011100", 
    985 => "11111110", 986 => "11111000", 987 => "00001000", 988 => "00001011", 
    989 => "11111110", 990 => "11101011", 991 => "11110101", 992 => "11111000", 
    993 => "11110111", 994 => "00001010", 995 => "11101000", 996 => "11100110", 
    997 => "00000110", 998 => "11111001", 999 => "11111010", 1000 => "11101110", 
    1001 => "00001111", 1002 => "00001000", 1003 => "00000000", 1004 => "00001110", 
    1005 => "11111011", 1006 => "00000000", 1007 => "00001100", 1008 => "11111101", 
    1009 => "11100111", 1010 to 1011=> "00000000", 1012 => "11110011", 1013 => "00011111", 
    1014 => "11111111", 1015 => "00000000", 1016 => "00000010", 1017 => "11111110", 
    1018 => "11110010", 1019 => "00000100", 1020 => "00011110", 1021 => "11111100", 
    1022 => "00001000", 1023 => "11111010" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity Conv1DMac_new_weiLf8 is
    generic (
        DataWidth : INTEGER := 8;
        AddressRange : INTEGER := 1024;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Conv1DMac_new_weiLf8 is
    component Conv1DMac_new_weiLf8_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Conv1DMac_new_weiLf8_rom_U :  component Conv1DMac_new_weiLf8_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


