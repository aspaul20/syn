-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Conv1DMac_new415_QgW_rom is 
    generic(
             DWIDTH     : integer := 8; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 1024
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Conv1DMac_new415_QgW_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 to 63=> "00000000", 64 => "11111000", 65 => "11111101", 66 => "11111111", 
    67 => "00001100", 68 => "00001101", 69 => "00000000", 70 => "00001000", 
    71 => "00000000", 72 => "11110110", 73 => "00000101", 74 => "00001010", 
    75 to 76=> "00001000", 77 => "00000000", 78 => "00001000", 79 => "00001100", 
    80 => "00001011", 81 => "00000011", 82 => "00000001", 83 => "00000010", 
    84 => "00001000", 85 => "11111110", 86 => "11110110", 87 => "00001100", 
    88 => "00001101", 89 => "00001010", 90 => "11111001", 91 => "00010001", 
    92 => "00010000", 93 => "00000111", 94 => "11111101", 95 => "11111111", 
    96 => "00000000", 97 => "11111001", 98 => "11111010", 99 => "00000100", 
    100 => "00001011", 101 => "00000010", 102 => "00000000", 103 => "00001101", 
    104 => "00001000", 105 => "11111011", 106 => "11111100", 107 => "11111001", 
    108 => "11111100", 109 => "11111001", 110 => "00010000", 111 => "11111110", 
    112 => "00001100", 113 => "00001001", 114 => "11111000", 115 => "00000111", 
    116 => "00010001", 117 => "00000000", 118 => "00001101", 119 => "00000101", 
    120 => "00000100", 121 => "00000011", 122 => "00000001", 123 => "11110010", 
    124 => "00001010", 125 => "00000000", 126 => "11111101", 127 => "00001100", 
    128 to 256=> "00000000", 257 => "00000101", 258 => "00000011", 259 => "00000110", 
    260 => "11110011", 261 => "00000000", 262 => "00010100", 263 => "00000000", 
    264 => "11111011", 265 => "00001111", 266 => "00000010", 267 => "11100010", 
    268 to 269=> "00000000", 270 to 271=> "00001111", 272 => "11110000", 273 => "11111001", 
    274 => "00001100", 275 => "11111010", 276 => "00001100", 277 => "11110100", 
    278 => "00000001", 279 => "11111011", 280 => "00001001", 281 => "11101011", 
    282 => "00001101", 283 to 284=> "00001010", 285 => "00000110", 286 => "00000111", 
    287 => "11110000", 288 => "00000111", 289 => "11111000", 290 => "00000001", 
    291 => "00010011", 292 => "00001101", 293 => "00010110", 294 => "00000000", 
    295 => "00000110", 296 => "00001001", 297 => "11111111", 298 => "00000000", 
    299 => "00000001", 300 => "11110101", 301 => "00000111", 302 => "00001101", 
    303 => "00000000", 304 => "00000110", 305 => "00010010", 306 => "00000101", 
    307 => "11111101", 308 => "00001010", 309 => "00000000", 310 => "00001001", 
    311 => "00000011", 312 => "00001100", 313 => "00000101", 314 => "11111101", 
    315 => "11111001", 316 => "11111010", 317 => "11110111", 318 => "00000101", 
    319 => "00011011", 320 => "11111100", 321 => "11111101", 322 => "00000001", 
    323 => "00000000", 324 => "00000111", 325 to 326=> "00000000", 327 => "00000001", 
    328 => "11111100", 329 => "11111111", 330 => "00001010", 331 => "11111111", 
    332 => "00000001", 333 => "00000000", 334 => "00000111", 335 => "00000110", 
    336 => "00000010", 337 => "11111010", 338 => "11111111", 339 to 340=> "11111100", 
    341 => "00000000", 342 => "11111101", 343 => "00001000", 344 => "00001100", 
    345 => "11111110", 346 => "11111100", 347 => "00000110", 348 => "00000010", 
    349 => "00001101", 350 => "00000001", 351 => "11111111", 352 => "00000110", 
    353 to 355=> "11111110", 356 => "00000100", 357 => "11111111", 358 => "00000000", 
    359 => "00001110", 360 => "00000100", 361 => "11110100", 362 => "00000000", 
    363 => "00000001", 364 => "11111111", 365 => "00000000", 366 => "00001110", 
    367 => "11111110", 368 => "00001101", 369 => "11111111", 370 => "11111110", 
    371 => "00000010", 372 => "00001011", 373 => "00000000", 374 => "00010000", 
    375 => "11111111", 376 => "00000010", 377 => "00000001", 378 => "00000101", 
    379 => "11111101", 380 => "00000000", 381 => "11111110", 382 => "00000010", 
    383 => "00000110", 384 to 447=> "00000000", 448 => "11110101", 449 => "00000101", 
    450 => "11000110", 451 => "00001110", 452 => "11011010", 453 => "00000000", 
    454 => "11010100", 455 => "11111110", 456 => "00101111", 457 => "00000101", 
    458 => "00001011", 459 => "00010000", 460 => "11001011", 461 => "00000000", 
    462 => "00101000", 463 => "11101110", 464 => "00001000", 465 => "00010000", 
    466 => "11101100", 467 => "00000010", 468 => "11110111", 469 => "00011111", 
    470 => "00010010", 471 => "00000101", 472 => "11110001", 473 => "11111111", 
    474 => "11010111", 475 => "10110111", 476 => "11110010", 477 => "11110011", 
    478 => "00011011", 479 => "11101101", 480 => "11110101", 481 => "00101010", 
    482 => "00010111", 483 => "00011101", 484 => "11110001", 485 => "11001001", 
    486 => "00000000", 487 => "11111100", 488 => "11111010", 489 => "00001011", 
    490 => "11100001", 491 => "11000001", 492 => "11001011", 493 => "00101100", 
    494 => "11111110", 495 => "00011010", 496 => "00000010", 497 => "00111000", 
    498 => "00010101", 499 => "00010001", 500 => "00000101", 501 => "00000000", 
    502 => "11110011", 503 => "00100110", 504 => "00000110", 505 => "00011000", 
    506 => "00010010", 507 => "11100100", 508 => "00110000", 509 => "00001111", 
    510 => "00001000", 511 => "00000101", 512 => "11011000", 513 => "00010100", 
    514 => "00100001", 515 => "11110001", 516 => "00100000", 517 => "00000000", 
    518 => "00001101", 519 => "11011110", 520 => "11110111", 521 => "00000000", 
    522 => "00011000", 523 => "01000011", 524 => "00111001", 525 => "00000000", 
    526 => "11101011", 527 => "11111110", 528 => "11111011", 529 => "01000001", 
    530 => "11111000", 531 => "00001001", 532 => "00100100", 533 => "00010111", 
    534 => "11100101", 535 => "00100010", 536 => "00010101", 537 => "00101000", 
    538 => "11010101", 539 => "11110110", 540 => "00011111", 541 => "00000110", 
    542 => "11100111", 543 => "00010101", 544 => "11011011", 545 => "11101101", 
    546 => "11010000", 547 => "11111001", 548 => "00000100", 549 => "00001101", 
    550 => "00000000", 551 => "00001011", 552 => "11000000", 553 => "00001101", 
    554 => "11101111", 555 => "11110110", 556 => "11101110", 557 => "01111000", 
    558 => "00001101", 559 => "11101111", 560 => "00000111", 561 => "11010001", 
    562 => "10100000", 563 => "11100110", 564 => "00010101", 565 => "00000000", 
    566 => "00001010", 567 => "00010101", 568 => "01011010", 569 => "00101101", 
    570 => "11111110", 571 => "10111000", 572 => "11111010", 573 => "00000101", 
    574 => "00011101", 575 => "00011000", 576 => "11011001", 577 => "11111100", 
    578 => "00110100", 579 => "00100100", 580 => "11100100", 581 => "00000000", 
    582 => "11101110", 583 => "11100101", 584 => "00010000", 585 => "00100000", 
    586 => "00010011", 587 => "11111100", 588 => "11110101", 589 => "00000000", 
    590 => "11101001", 591 => "00010100", 592 => "11110111", 593 => "00000110", 
    594 => "01001101", 595 => "11110110", 596 => "11111000", 597 => "00000111", 
    598 => "00001111", 599 => "11111100", 600 => "11110000", 601 => "11101000", 
    602 => "11110111", 603 => "00100100", 604 => "11111101", 605 => "11110111", 
    606 => "00001010", 607 => "11010010", 608 => "11011011", 609 => "11000011", 
    610 => "00001110", 611 => "00111100", 612 => "00000001", 613 => "11110010", 
    614 to 615=> "00000000", 616 => "00100000", 617 => "00000110", 618 => "10010101", 
    619 => "11100000", 620 => "00011100", 621 => "11111101", 622 => "00000011", 
    623 => "00000001", 624 => "00011000", 625 => "11000011", 626 => "11101111", 
    627 => "11111000", 628 => "11111100", 629 => "00000000", 630 => "11111011", 
    631 => "00011101", 632 => "00110001", 633 => "00100111", 634 => "11011111", 
    635 => "10011001", 636 => "00010111", 637 => "01011101", 638 => "00010110", 
    639 => "11100010", 640 => "11101111", 641 => "00001010", 642 => "00011110", 
    643 => "00000111", 644 => "11011011", 645 => "00000000", 646 => "00000101", 
    647 => "11011011", 648 => "00001000", 649 => "11101010", 650 => "11101100", 
    651 => "11001001", 652 => "11000110", 653 => "00000000", 654 => "00011101", 
    655 => "11010100", 656 => "11101110", 657 => "11010110", 658 => "11111011", 
    659 => "11110000", 660 => "00001011", 661 => "11011001", 662 => "11111101", 
    663 => "00001000", 664 => "00010101", 665 => "11101000", 666 => "00000011", 
    667 => "00001010", 668 => "11100010", 669 => "11111011", 670 => "11010101", 
    671 => "11111001", 672 => "00000100", 673 => "11100001", 674 => "00001010", 
    675 => "11111010", 676 => "00001100", 677 => "00011011", 678 => "00000000", 
    679 => "11110101", 680 => "00000100", 681 => "11111100", 682 => "11100001", 
    683 => "00001111", 684 => "11010111", 685 => "00011010", 686 => "11101000", 
    687 => "11101001", 688 => "11111011", 689 => "11010000", 690 => "00001100", 
    691 => "11000110", 692 => "11101011", 693 => "00000000", 694 => "11110000", 
    695 to 696=> "00010101", 697 => "11101010", 698 => "11101100", 699 => "11111011", 
    700 to 701=> "11101000", 702 => "11110001", 703 => "00010110", 704 => "11111001", 
    705 => "11111000", 706 => "11101001", 707 => "00000100", 708 => "00001011", 
    709 => "00000000", 710 => "11101110", 711 => "11111100", 712 => "00000000", 
    713 => "00001100", 714 => "00010101", 715 => "00000001", 716 => "00000101", 
    717 => "00000000", 718 => "00010010", 719 => "00000111", 720 => "00000101", 
    721 => "11111111", 722 => "11110111", 723 => "11111111", 724 => "11101100", 
    725 => "00000011", 726 => "11111101", 727 => "00000100", 728 => "00001110", 
    729 => "00000001", 730 => "11111011", 731 => "00001000", 732 => "00000110", 
    733 => "11111100", 734 => "00000010", 735 to 736=> "11111001", 737 => "11111111", 
    738 => "11111011", 739 => "00000101", 740 => "00001010", 741 => "00000010", 
    742 => "00000000", 743 => "00001111", 744 => "11111010", 745 => "11110101", 
    746 => "11111000", 747 => "11110001", 748 => "11111000", 749 => "11111011", 
    750 to 751=> "00011010", 752 => "00001001", 753 => "11111110", 754 => "00001000", 
    755 => "11111100", 756 => "00010100", 757 => "00000000", 758 => "00001100", 
    759 => "11111011", 760 => "11111100", 761 => "00000001", 762 => "00000100", 
    763 => "11111010", 764 => "00001101", 765 => "11110010", 766 => "00000111", 
    767 => "00000001", 768 to 831=> "00000000", 832 => "00101001", 833 to 834=> "00001101", 
    835 => "00110101", 836 => "00011010", 837 => "00000000", 838 => "00111010", 
    839 => "00010110", 840 => "10100101", 841 => "11101100", 842 => "11111111", 
    843 => "11001001", 844 => "01011100", 845 => "00000000", 846 => "11010001", 
    847 => "00001111", 848 => "11101011", 849 => "11000100", 850 => "00000011", 
    851 => "00110111", 852 => "11110010", 853 => "00010101", 854 => "11110111", 
    855 => "11111101", 856 => "00000011", 857 => "11101110", 858 => "00001101", 
    859 => "11111010", 860 => "11111111", 861 => "11011011", 862 => "11001001", 
    863 => "10111100", 864 => "00110100", 865 => "10100101", 866 => "01010000", 
    867 => "11101010", 868 => "00101110", 869 => "00011111", 870 => "00000000", 
    871 => "11110100", 872 => "00111010", 873 => "00111011", 874 => "11101000", 
    875 => "10111111", 876 => "11001100", 877 => "00011110", 878 => "11110011", 
    879 => "11100101", 880 => "11100100", 881 => "00111101", 882 => "00001111", 
    883 => "11101101", 884 => "00001111", 885 => "00000000", 886 => "11011010", 
    887 => "00100100", 888 to 889=> "00001001", 890 => "10110101", 891 => "11000101", 
    892 => "11100011", 893 => "11001000", 894 => "00001001", 895 => "00001101", 
    896 => "11111110", 897 => "11111101", 898 => "11111011", 899 => "11111111", 
    900 => "00001000", 901 => "00000000", 902 => "11111000", 903 => "00000100", 
    904 => "11111011", 905 => "11111101", 906 => "00010001", 907 => "00000100", 
    908 => "00000010", 909 => "00000000", 910 => "00000110", 911 => "00000101", 
    912 => "00000000", 913 => "11111010", 914 => "11111101", 915 => "11111010", 
    916 => "11111000", 917 => "00000110", 918 => "11111110", 919 => "00000111", 
    920 => "00001100", 921 => "00000010", 922 => "11111101", 923 => "00000000", 
    924 => "11111110", 925 => "00000011", 926 => "00000010", 927 => "11111110", 
    928 => "11111111", 929 => "11111101", 930 => "00000000", 931 => "11111011", 
    932 to 933=> "11111111", 934 => "00000000", 935 => "00010000", 936 => "00000001", 
    937 => "11110100", 938 => "00000001", 939 to 940=> "11111010", 941 => "00000000", 
    942 => "00010010", 943 => "00001101", 944 => "00001011", 945 => "11111101", 
    946 => "00000101", 947 => "11111101", 948 => "00001111", 949 => "00000000", 
    950 => "00001100", 951 => "11111111", 952 => "11111110", 953 to 954=> "00000001", 
    955 => "00000000", 956 => "00000101", 957 => "11111111", 958 => "00001000", 
    959 => "11111101", 960 to 1023=> "00000000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity Conv1DMac_new415_QgW is
    generic (
        DataWidth : INTEGER := 8;
        AddressRange : INTEGER := 1024;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Conv1DMac_new415_QgW is
    component Conv1DMac_new415_QgW_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Conv1DMac_new415_QgW_rom_U :  component Conv1DMac_new415_QgW_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


