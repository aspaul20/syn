// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Conv1DBuffer_new414.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Conv1DBuffer_new414::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Conv1DBuffer_new414::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> Conv1DBuffer_new414::ap_ST_fsm_state1 = "1";
const sc_lv<5> Conv1DBuffer_new414::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<5> Conv1DBuffer_new414::ap_ST_fsm_state4 = "100";
const sc_lv<5> Conv1DBuffer_new414::ap_ST_fsm_pp1_stage0 = "1000";
const sc_lv<5> Conv1DBuffer_new414::ap_ST_fsm_state7 = "10000";
const bool Conv1DBuffer_new414::ap_const_boolean_1 = true;
const sc_lv<32> Conv1DBuffer_new414::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Conv1DBuffer_new414::ap_const_lv32_1 = "1";
const bool Conv1DBuffer_new414::ap_const_boolean_0 = false;
const sc_lv<1> Conv1DBuffer_new414::ap_const_lv1_0 = "0";
const sc_lv<32> Conv1DBuffer_new414::ap_const_lv32_3 = "11";
const sc_lv<1> Conv1DBuffer_new414::ap_const_lv1_1 = "1";
const sc_lv<32> Conv1DBuffer_new414::ap_const_lv32_2 = "10";
const sc_lv<7> Conv1DBuffer_new414::ap_const_lv7_0 = "0000000";
const sc_lv<19> Conv1DBuffer_new414::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<9> Conv1DBuffer_new414::ap_const_lv9_0 = "000000000";
const sc_lv<12> Conv1DBuffer_new414::ap_const_lv12_0 = "000000000000";
const sc_lv<5> Conv1DBuffer_new414::ap_const_lv5_0 = "00000";
const sc_lv<7> Conv1DBuffer_new414::ap_const_lv7_40 = "1000000";
const sc_lv<7> Conv1DBuffer_new414::ap_const_lv7_1 = "1";
const sc_lv<9> Conv1DBuffer_new414::ap_const_lv9_FF = "11111111";
const sc_lv<5> Conv1DBuffer_new414::ap_const_lv5_F = "1111";
const sc_lv<19> Conv1DBuffer_new414::ap_const_lv19_40000 = "1000000000000000000";
const sc_lv<19> Conv1DBuffer_new414::ap_const_lv19_1 = "1";
const sc_lv<9> Conv1DBuffer_new414::ap_const_lv9_1 = "1";
const sc_lv<12> Conv1DBuffer_new414::ap_const_lv12_400 = "10000000000";
const sc_lv<5> Conv1DBuffer_new414::ap_const_lv5_1 = "1";
const sc_lv<12> Conv1DBuffer_new414::ap_const_lv12_1 = "1";
const sc_lv<32> Conv1DBuffer_new414::ap_const_lv32_4 = "100";

Conv1DBuffer_new414::Conv1DBuffer_new414(sc_module_name name) : sc_module(name), mVcdFile(0) {
    inputBuf_0_V_U = new Conv1DBuffer_new4yd2("inputBuf_0_V_U");
    inputBuf_0_V_U->clk(ap_clk);
    inputBuf_0_V_U->reset(ap_rst);
    inputBuf_0_V_U->address0(inputBuf_0_V_address0);
    inputBuf_0_V_U->ce0(inputBuf_0_V_ce0);
    inputBuf_0_V_U->we0(inputBuf_0_V_we0);
    inputBuf_0_V_U->d0(in_V_V_dout);
    inputBuf_0_V_U->q0(inputBuf_0_V_q0);
    inputBuf_0_V_U->address1(inputBuf_0_V_addr_1_reg_424);
    inputBuf_0_V_U->ce1(inputBuf_0_V_ce1);
    inputBuf_0_V_U->we1(inputBuf_0_V_we1);
    inputBuf_0_V_U->d1(in_V_V_dout);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_392 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_392 );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( or_cond_mid2_reg_415 );
    sensitive << ( exitcond_flatten9_reg_401 );

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( or_cond_mid2_reg_415 );
    sensitive << ( exitcond_flatten9_reg_401 );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( or_cond_mid2_reg_415 );
    sensitive << ( exitcond_flatten9_reg_401 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( tmp_reg_392 );

    SC_METHOD(thread_ap_block_state5_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state6_pp1_stage0_iter1);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( or_cond_mid2_reg_415 );
    sensitive << ( exitcond_flatten9_reg_401 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( tmp_fu_206_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state5);
    sensitive << ( exitcond_flatten9_fu_241_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_phi_mux_ptr_simd_phi_fu_143_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_reg_392 );
    sensitive << ( ptr_simd_reg_139 );
    sensitive << ( ptr_simd_1_reg_396 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_exitcond_flatten9_fu_241_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( indvar_flatten9_reg_151 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_259_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( indvar_flatten_reg_173 );
    sensitive << ( exitcond_flatten9_fu_241_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_in_V_V_blk_n);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_reg_392 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( or_cond_mid2_reg_415 );

    SC_METHOD(thread_in_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_392 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( or_cond_mid2_reg_415 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_indvar_flatten_next9_fu_247_p2);
    sensitive << ( indvar_flatten9_reg_151 );

    SC_METHOD(thread_indvar_flatten_next_fu_384_p3);
    sensitive << ( exitcond_flatten_fu_259_p2 );
    sensitive << ( indvar_flatten_op_fu_378_p2 );

    SC_METHOD(thread_indvar_flatten_op_fu_378_p2);
    sensitive << ( indvar_flatten_reg_173 );

    SC_METHOD(thread_inputBuf_0_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_s_fu_218_p1 );
    sensitive << ( tmp_130_fu_367_p1 );

    SC_METHOD(thread_inputBuf_0_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_inputBuf_0_V_ce1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_inputBuf_0_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_392 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_inputBuf_0_V_we1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( or_cond_mid2_reg_415 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_nm_3_fu_319_p2);
    sensitive << ( nm_mid_fu_265_p3 );

    SC_METHOD(thread_nm_mid2_fu_359_p3);
    sensitive << ( nm_mid_fu_265_p3 );
    sensitive << ( tmp_129_mid_fu_305_p2 );
    sensitive << ( nm_3_fu_319_p2 );

    SC_METHOD(thread_nm_mid_fu_265_p3);
    sensitive << ( nm_reg_184 );
    sensitive << ( exitcond_flatten_fu_259_p2 );

    SC_METHOD(thread_not_exitcond_flatten_fu_287_p2);
    sensitive << ( exitcond_flatten_fu_259_p2 );

    SC_METHOD(thread_ofm_iter_fu_253_p2);
    sensitive << ( op1_assign_reg_162 );

    SC_METHOD(thread_op1_assign_mid2_fu_311_p3);
    sensitive << ( op1_assign_reg_162 );
    sensitive << ( exitcond_flatten_fu_259_p2 );
    sensitive << ( ofm_iter_fu_253_p2 );

    SC_METHOD(thread_or_cond_fu_235_p2);
    sensitive << ( tmp_126_fu_223_p2 );
    sensitive << ( tmp_128_fu_229_p2 );

    SC_METHOD(thread_or_cond_mid1_fu_345_p2);
    sensitive << ( tmp_126_mid2_fu_279_p3 );
    sensitive << ( tmp_128_mid1_fu_339_p2 );

    SC_METHOD(thread_or_cond_mid2_fu_351_p3);
    sensitive << ( tmp_129_mid_fu_305_p2 );
    sensitive << ( or_cond_mid1_fu_345_p2 );
    sensitive << ( or_cond_mid_fu_293_p2 );

    SC_METHOD(thread_or_cond_mid_fu_293_p2);
    sensitive << ( or_cond_fu_235_p2 );
    sensitive << ( not_exitcond_flatten_fu_287_p2 );

    SC_METHOD(thread_out_V_V_blk_n);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_flatten9_reg_401 );

    SC_METHOD(thread_out_V_V_din);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_flatten9_reg_401 );
    sensitive << ( inputBuf_0_V_q0 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_out_V_V_write);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_flatten9_reg_401 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_ptr_simd4_mid2_fu_331_p3);
    sensitive << ( ptr_simd4_reg_195 );
    sensitive << ( tmp_363_fu_325_p2 );

    SC_METHOD(thread_ptr_simd_1_fu_212_p2);
    sensitive << ( ap_phi_mux_ptr_simd_phi_fu_143_p4 );

    SC_METHOD(thread_ptr_simd_2_fu_372_p2);
    sensitive << ( ptr_simd4_mid2_fu_331_p3 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_126_fu_223_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( op1_assign_reg_162 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_tmp_126_mid1_fu_273_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( exitcond_flatten9_fu_241_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ofm_iter_fu_253_p2 );

    SC_METHOD(thread_tmp_126_mid2_fu_279_p3);
    sensitive << ( tmp_126_fu_223_p2 );
    sensitive << ( exitcond_flatten_fu_259_p2 );
    sensitive << ( tmp_126_mid1_fu_273_p2 );

    SC_METHOD(thread_tmp_128_fu_229_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( nm_reg_184 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_tmp_128_mid1_fu_339_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( exitcond_flatten9_fu_241_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( nm_3_fu_319_p2 );

    SC_METHOD(thread_tmp_129_mid_fu_305_p2);
    sensitive << ( not_exitcond_flatten_fu_287_p2 );
    sensitive << ( tmp_362_fu_299_p2 );

    SC_METHOD(thread_tmp_130_fu_367_p1);
    sensitive << ( ptr_simd4_mid2_fu_331_p3 );

    SC_METHOD(thread_tmp_362_fu_299_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ptr_simd4_reg_195 );
    sensitive << ( exitcond_flatten9_fu_241_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_tmp_363_fu_325_p2);
    sensitive << ( exitcond_flatten_fu_259_p2 );
    sensitive << ( tmp_129_mid_fu_305_p2 );

    SC_METHOD(thread_tmp_fu_206_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_ptr_simd_phi_fu_143_p4 );

    SC_METHOD(thread_tmp_s_fu_218_p1);
    sensitive << ( ptr_simd_reg_139 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_fu_206_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten9_fu_241_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Conv1DBuffer_new414_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_V_V_dout, "(port)in_V_V_dout");
    sc_trace(mVcdFile, in_V_V_empty_n, "(port)in_V_V_empty_n");
    sc_trace(mVcdFile, in_V_V_read, "(port)in_V_V_read");
    sc_trace(mVcdFile, out_V_V_din, "(port)out_V_V_din");
    sc_trace(mVcdFile, out_V_V_full_n, "(port)out_V_V_full_n");
    sc_trace(mVcdFile, out_V_V_write, "(port)out_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, in_V_V_blk_n, "in_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_reg_392, "tmp_reg_392");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, or_cond_mid2_reg_415, "or_cond_mid2_reg_415");
    sc_trace(mVcdFile, out_V_V_blk_n, "out_V_V_blk_n");
    sc_trace(mVcdFile, exitcond_flatten9_reg_401, "exitcond_flatten9_reg_401");
    sc_trace(mVcdFile, ptr_simd_reg_139, "ptr_simd_reg_139");
    sc_trace(mVcdFile, indvar_flatten9_reg_151, "indvar_flatten9_reg_151");
    sc_trace(mVcdFile, op1_assign_reg_162, "op1_assign_reg_162");
    sc_trace(mVcdFile, indvar_flatten_reg_173, "indvar_flatten_reg_173");
    sc_trace(mVcdFile, nm_reg_184, "nm_reg_184");
    sc_trace(mVcdFile, ptr_simd4_reg_195, "ptr_simd4_reg_195");
    sc_trace(mVcdFile, tmp_fu_206_p2, "tmp_fu_206_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ptr_simd_1_fu_212_p2, "ptr_simd_1_fu_212_p2");
    sc_trace(mVcdFile, ptr_simd_1_reg_396, "ptr_simd_1_reg_396");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond_flatten9_fu_241_p2, "exitcond_flatten9_fu_241_p2");
    sc_trace(mVcdFile, ap_block_state5_pp1_stage0_iter0, "ap_block_state5_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp1_stage0_iter1, "ap_block_state6_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_next9_fu_247_p2, "indvar_flatten_next9_fu_247_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, op1_assign_mid2_fu_311_p3, "op1_assign_mid2_fu_311_p3");
    sc_trace(mVcdFile, or_cond_mid2_fu_351_p3, "or_cond_mid2_fu_351_p3");
    sc_trace(mVcdFile, nm_mid2_fu_359_p3, "nm_mid2_fu_359_p3");
    sc_trace(mVcdFile, inputBuf_0_V_addr_1_reg_424, "inputBuf_0_V_addr_1_reg_424");
    sc_trace(mVcdFile, ptr_simd_2_fu_372_p2, "ptr_simd_2_fu_372_p2");
    sc_trace(mVcdFile, indvar_flatten_next_fu_384_p3, "indvar_flatten_next_fu_384_p3");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state5, "ap_condition_pp1_exit_iter0_state5");
    sc_trace(mVcdFile, inputBuf_0_V_address0, "inputBuf_0_V_address0");
    sc_trace(mVcdFile, inputBuf_0_V_ce0, "inputBuf_0_V_ce0");
    sc_trace(mVcdFile, inputBuf_0_V_we0, "inputBuf_0_V_we0");
    sc_trace(mVcdFile, inputBuf_0_V_q0, "inputBuf_0_V_q0");
    sc_trace(mVcdFile, inputBuf_0_V_ce1, "inputBuf_0_V_ce1");
    sc_trace(mVcdFile, inputBuf_0_V_we1, "inputBuf_0_V_we1");
    sc_trace(mVcdFile, ap_phi_mux_ptr_simd_phi_fu_143_p4, "ap_phi_mux_ptr_simd_phi_fu_143_p4");
    sc_trace(mVcdFile, tmp_s_fu_218_p1, "tmp_s_fu_218_p1");
    sc_trace(mVcdFile, tmp_130_fu_367_p1, "tmp_130_fu_367_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, tmp_126_fu_223_p2, "tmp_126_fu_223_p2");
    sc_trace(mVcdFile, tmp_128_fu_229_p2, "tmp_128_fu_229_p2");
    sc_trace(mVcdFile, exitcond_flatten_fu_259_p2, "exitcond_flatten_fu_259_p2");
    sc_trace(mVcdFile, ofm_iter_fu_253_p2, "ofm_iter_fu_253_p2");
    sc_trace(mVcdFile, tmp_126_mid1_fu_273_p2, "tmp_126_mid1_fu_273_p2");
    sc_trace(mVcdFile, or_cond_fu_235_p2, "or_cond_fu_235_p2");
    sc_trace(mVcdFile, not_exitcond_flatten_fu_287_p2, "not_exitcond_flatten_fu_287_p2");
    sc_trace(mVcdFile, tmp_362_fu_299_p2, "tmp_362_fu_299_p2");
    sc_trace(mVcdFile, nm_mid_fu_265_p3, "nm_mid_fu_265_p3");
    sc_trace(mVcdFile, tmp_129_mid_fu_305_p2, "tmp_129_mid_fu_305_p2");
    sc_trace(mVcdFile, tmp_363_fu_325_p2, "tmp_363_fu_325_p2");
    sc_trace(mVcdFile, nm_3_fu_319_p2, "nm_3_fu_319_p2");
    sc_trace(mVcdFile, tmp_126_mid2_fu_279_p3, "tmp_126_mid2_fu_279_p3");
    sc_trace(mVcdFile, tmp_128_mid1_fu_339_p2, "tmp_128_mid1_fu_339_p2");
    sc_trace(mVcdFile, or_cond_mid1_fu_345_p2, "or_cond_mid1_fu_345_p2");
    sc_trace(mVcdFile, or_cond_mid_fu_293_p2, "or_cond_mid_fu_293_p2");
    sc_trace(mVcdFile, ptr_simd4_mid2_fu_331_p3, "ptr_simd4_mid2_fu_331_p3");
    sc_trace(mVcdFile, indvar_flatten_op_fu_378_p2, "indvar_flatten_op_fu_378_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
}

Conv1DBuffer_new414::~Conv1DBuffer_new414() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete inputBuf_0_V_U;
}

void Conv1DBuffer_new414::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state5.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state5.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state5.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        indvar_flatten9_reg_151 = ap_const_lv19_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten9_fu_241_p2.read()))) {
        indvar_flatten9_reg_151 = indvar_flatten_next9_fu_247_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        indvar_flatten_reg_173 = ap_const_lv12_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten9_fu_241_p2.read()))) {
        indvar_flatten_reg_173 = indvar_flatten_next_fu_384_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        nm_reg_184 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten9_fu_241_p2.read()))) {
        nm_reg_184 = nm_mid2_fu_359_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        op1_assign_reg_162 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten9_fu_241_p2.read()))) {
        op1_assign_reg_162 = op1_assign_mid2_fu_311_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ptr_simd4_reg_195 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten9_fu_241_p2.read()))) {
        ptr_simd4_reg_195 = ptr_simd_2_fu_372_p2.read();
    }
    if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ptr_simd_reg_139 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(tmp_reg_392.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ptr_simd_reg_139 = ptr_simd_1_reg_396.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten9_reg_401 = exitcond_flatten9_fu_241_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten9_fu_241_p2.read()))) {
        inputBuf_0_V_addr_1_reg_424 =  (sc_lv<6>) (tmp_130_fu_367_p1.read());
        or_cond_mid2_reg_415 = or_cond_mid2_fu_351_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        ptr_simd_1_reg_396 = ptr_simd_1_fu_212_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_reg_392 = tmp_fu_206_p2.read();
    }
}

void Conv1DBuffer_new414::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Conv1DBuffer_new414::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[3];
}

void Conv1DBuffer_new414::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Conv1DBuffer_new414::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void Conv1DBuffer_new414::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[4];
}

void Conv1DBuffer_new414::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Conv1DBuffer_new414::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(tmp_reg_392.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()));
}

void Conv1DBuffer_new414::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(tmp_reg_392.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()));
}

void Conv1DBuffer_new414::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Conv1DBuffer_new414::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten9_reg_401.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(or_cond_mid2_reg_415.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()))));
}

void Conv1DBuffer_new414::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten9_reg_401.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(or_cond_mid2_reg_415.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()))));
}

void Conv1DBuffer_new414::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten9_reg_401.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(or_cond_mid2_reg_415.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()))));
}

void Conv1DBuffer_new414::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Conv1DBuffer_new414::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Conv1DBuffer_new414::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(tmp_reg_392.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()));
}

void Conv1DBuffer_new414::thread_ap_block_state5_pp1_stage0_iter0() {
    ap_block_state5_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Conv1DBuffer_new414::thread_ap_block_state6_pp1_stage0_iter1() {
    ap_block_state6_pp1_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten9_reg_401.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())) || (esl_seteq<1,1,1>(or_cond_mid2_reg_415.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())));
}

void Conv1DBuffer_new414::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(tmp_fu_206_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Conv1DBuffer_new414::thread_ap_condition_pp1_exit_iter0_state5() {
    if (esl_seteq<1,1,1>(exitcond_flatten9_fu_241_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state5 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state5 = ap_const_logic_0;
    }
}

void Conv1DBuffer_new414::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Conv1DBuffer_new414::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Conv1DBuffer_new414::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void Conv1DBuffer_new414::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Conv1DBuffer_new414::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Conv1DBuffer_new414::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void Conv1DBuffer_new414::thread_ap_phi_mux_ptr_simd_phi_fu_143_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_reg_392.read(), ap_const_lv1_0))) {
        ap_phi_mux_ptr_simd_phi_fu_143_p4 = ptr_simd_1_reg_396.read();
    } else {
        ap_phi_mux_ptr_simd_phi_fu_143_p4 = ptr_simd_reg_139.read();
    }
}

void Conv1DBuffer_new414::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void Conv1DBuffer_new414::thread_exitcond_flatten9_fu_241_p2() {
    exitcond_flatten9_fu_241_p2 = (!indvar_flatten9_reg_151.read().is_01() || !ap_const_lv19_40000.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten9_reg_151.read() == ap_const_lv19_40000);
}

void Conv1DBuffer_new414::thread_exitcond_flatten_fu_259_p2() {
    exitcond_flatten_fu_259_p2 = (!indvar_flatten_reg_173.read().is_01() || !ap_const_lv12_400.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_173.read() == ap_const_lv12_400);
}

void Conv1DBuffer_new414::thread_in_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_reg_392.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(or_cond_mid2_reg_415.read(), ap_const_lv1_1)))) {
        in_V_V_blk_n = in_V_V_empty_n.read();
    } else {
        in_V_V_blk_n = ap_const_logic_1;
    }
}

void Conv1DBuffer_new414::thread_in_V_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(tmp_reg_392.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(or_cond_mid2_reg_415.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        in_V_V_read = ap_const_logic_1;
    } else {
        in_V_V_read = ap_const_logic_0;
    }
}

void Conv1DBuffer_new414::thread_indvar_flatten_next9_fu_247_p2() {
    indvar_flatten_next9_fu_247_p2 = (!indvar_flatten9_reg_151.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(indvar_flatten9_reg_151.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void Conv1DBuffer_new414::thread_indvar_flatten_next_fu_384_p3() {
    indvar_flatten_next_fu_384_p3 = (!exitcond_flatten_fu_259_p2.read()[0].is_01())? sc_lv<12>(): ((exitcond_flatten_fu_259_p2.read()[0].to_bool())? ap_const_lv12_1: indvar_flatten_op_fu_378_p2.read());
}

void Conv1DBuffer_new414::thread_indvar_flatten_op_fu_378_p2() {
    indvar_flatten_op_fu_378_p2 = (!indvar_flatten_reg_173.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(indvar_flatten_reg_173.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void Conv1DBuffer_new414::thread_inputBuf_0_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1))) {
        inputBuf_0_V_address0 =  (sc_lv<6>) (tmp_130_fu_367_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        inputBuf_0_V_address0 =  (sc_lv<6>) (tmp_s_fu_218_p1.read());
    } else {
        inputBuf_0_V_address0 = "XXXXXX";
    }
}

void Conv1DBuffer_new414::thread_inputBuf_0_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        inputBuf_0_V_ce0 = ap_const_logic_1;
    } else {
        inputBuf_0_V_ce0 = ap_const_logic_0;
    }
}

void Conv1DBuffer_new414::thread_inputBuf_0_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        inputBuf_0_V_ce1 = ap_const_logic_1;
    } else {
        inputBuf_0_V_ce1 = ap_const_logic_0;
    }
}

void Conv1DBuffer_new414::thread_inputBuf_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_reg_392.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        inputBuf_0_V_we0 = ap_const_logic_1;
    } else {
        inputBuf_0_V_we0 = ap_const_logic_0;
    }
}

void Conv1DBuffer_new414::thread_inputBuf_0_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(or_cond_mid2_reg_415.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        inputBuf_0_V_we1 = ap_const_logic_1;
    } else {
        inputBuf_0_V_we1 = ap_const_logic_0;
    }
}

void Conv1DBuffer_new414::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void Conv1DBuffer_new414::thread_nm_3_fu_319_p2() {
    nm_3_fu_319_p2 = (!nm_mid_fu_265_p3.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(nm_mid_fu_265_p3.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void Conv1DBuffer_new414::thread_nm_mid2_fu_359_p3() {
    nm_mid2_fu_359_p3 = (!tmp_129_mid_fu_305_p2.read()[0].is_01())? sc_lv<5>(): ((tmp_129_mid_fu_305_p2.read()[0].to_bool())? nm_3_fu_319_p2.read(): nm_mid_fu_265_p3.read());
}

void Conv1DBuffer_new414::thread_nm_mid_fu_265_p3() {
    nm_mid_fu_265_p3 = (!exitcond_flatten_fu_259_p2.read()[0].is_01())? sc_lv<5>(): ((exitcond_flatten_fu_259_p2.read()[0].to_bool())? ap_const_lv5_0: nm_reg_184.read());
}

void Conv1DBuffer_new414::thread_not_exitcond_flatten_fu_287_p2() {
    not_exitcond_flatten_fu_287_p2 = (exitcond_flatten_fu_259_p2.read() ^ ap_const_lv1_1);
}

void Conv1DBuffer_new414::thread_ofm_iter_fu_253_p2() {
    ofm_iter_fu_253_p2 = (!op1_assign_reg_162.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(op1_assign_reg_162.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void Conv1DBuffer_new414::thread_op1_assign_mid2_fu_311_p3() {
    op1_assign_mid2_fu_311_p3 = (!exitcond_flatten_fu_259_p2.read()[0].is_01())? sc_lv<9>(): ((exitcond_flatten_fu_259_p2.read()[0].to_bool())? ofm_iter_fu_253_p2.read(): op1_assign_reg_162.read());
}

void Conv1DBuffer_new414::thread_or_cond_fu_235_p2() {
    or_cond_fu_235_p2 = (tmp_126_fu_223_p2.read() & tmp_128_fu_229_p2.read());
}

void Conv1DBuffer_new414::thread_or_cond_mid1_fu_345_p2() {
    or_cond_mid1_fu_345_p2 = (tmp_126_mid2_fu_279_p3.read() & tmp_128_mid1_fu_339_p2.read());
}

void Conv1DBuffer_new414::thread_or_cond_mid2_fu_351_p3() {
    or_cond_mid2_fu_351_p3 = (!tmp_129_mid_fu_305_p2.read()[0].is_01())? sc_lv<1>(): ((tmp_129_mid_fu_305_p2.read()[0].to_bool())? or_cond_mid1_fu_345_p2.read(): or_cond_mid_fu_293_p2.read());
}

void Conv1DBuffer_new414::thread_or_cond_mid_fu_293_p2() {
    or_cond_mid_fu_293_p2 = (or_cond_fu_235_p2.read() & not_exitcond_flatten_fu_287_p2.read());
}

void Conv1DBuffer_new414::thread_out_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten9_reg_401.read()))) {
        out_V_V_blk_n = out_V_V_full_n.read();
    } else {
        out_V_V_blk_n = ap_const_logic_1;
    }
}

void Conv1DBuffer_new414::thread_out_V_V_din() {
    out_V_V_din = inputBuf_0_V_q0.read();
}

void Conv1DBuffer_new414::thread_out_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten9_reg_401.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        out_V_V_write = ap_const_logic_1;
    } else {
        out_V_V_write = ap_const_logic_0;
    }
}

void Conv1DBuffer_new414::thread_ptr_simd4_mid2_fu_331_p3() {
    ptr_simd4_mid2_fu_331_p3 = (!tmp_363_fu_325_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_363_fu_325_p2.read()[0].to_bool())? ap_const_lv7_0: ptr_simd4_reg_195.read());
}

void Conv1DBuffer_new414::thread_ptr_simd_1_fu_212_p2() {
    ptr_simd_1_fu_212_p2 = (!ap_phi_mux_ptr_simd_phi_fu_143_p4.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(ap_phi_mux_ptr_simd_phi_fu_143_p4.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void Conv1DBuffer_new414::thread_ptr_simd_2_fu_372_p2() {
    ptr_simd_2_fu_372_p2 = (!ptr_simd4_mid2_fu_331_p3.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(ptr_simd4_mid2_fu_331_p3.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void Conv1DBuffer_new414::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void Conv1DBuffer_new414::thread_start_out() {
    start_out = real_start.read();
}

void Conv1DBuffer_new414::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void Conv1DBuffer_new414::thread_tmp_126_fu_223_p2() {
    tmp_126_fu_223_p2 = (!op1_assign_reg_162.read().is_01() || !ap_const_lv9_FF.is_01())? sc_lv<1>(): (sc_biguint<9>(op1_assign_reg_162.read()) < sc_biguint<9>(ap_const_lv9_FF));
}

void Conv1DBuffer_new414::thread_tmp_126_mid1_fu_273_p2() {
    tmp_126_mid1_fu_273_p2 = (!ofm_iter_fu_253_p2.read().is_01() || !ap_const_lv9_FF.is_01())? sc_lv<1>(): (sc_biguint<9>(ofm_iter_fu_253_p2.read()) < sc_biguint<9>(ap_const_lv9_FF));
}

void Conv1DBuffer_new414::thread_tmp_126_mid2_fu_279_p3() {
    tmp_126_mid2_fu_279_p3 = (!exitcond_flatten_fu_259_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_flatten_fu_259_p2.read()[0].to_bool())? tmp_126_mid1_fu_273_p2.read(): tmp_126_fu_223_p2.read());
}

void Conv1DBuffer_new414::thread_tmp_128_fu_229_p2() {
    tmp_128_fu_229_p2 = (!nm_reg_184.read().is_01() || !ap_const_lv5_F.is_01())? sc_lv<1>(): sc_lv<1>(nm_reg_184.read() == ap_const_lv5_F);
}

void Conv1DBuffer_new414::thread_tmp_128_mid1_fu_339_p2() {
    tmp_128_mid1_fu_339_p2 = (!nm_3_fu_319_p2.read().is_01() || !ap_const_lv5_F.is_01())? sc_lv<1>(): sc_lv<1>(nm_3_fu_319_p2.read() == ap_const_lv5_F);
}

void Conv1DBuffer_new414::thread_tmp_129_mid_fu_305_p2() {
    tmp_129_mid_fu_305_p2 = (tmp_362_fu_299_p2.read() & not_exitcond_flatten_fu_287_p2.read());
}

void Conv1DBuffer_new414::thread_tmp_130_fu_367_p1() {
    tmp_130_fu_367_p1 = esl_zext<64,7>(ptr_simd4_mid2_fu_331_p3.read());
}

void Conv1DBuffer_new414::thread_tmp_362_fu_299_p2() {
    tmp_362_fu_299_p2 = (!ptr_simd4_reg_195.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(ptr_simd4_reg_195.read() == ap_const_lv7_40);
}

void Conv1DBuffer_new414::thread_tmp_363_fu_325_p2() {
    tmp_363_fu_325_p2 = (tmp_129_mid_fu_305_p2.read() | exitcond_flatten_fu_259_p2.read());
}

void Conv1DBuffer_new414::thread_tmp_fu_206_p2() {
    tmp_fu_206_p2 = (!ap_phi_mux_ptr_simd_phi_fu_143_p4.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_ptr_simd_phi_fu_143_p4.read() == ap_const_lv7_40);
}

void Conv1DBuffer_new414::thread_tmp_s_fu_218_p1() {
    tmp_s_fu_218_p1 = esl_zext<64,7>(ptr_simd_reg_139.read());
}

void Conv1DBuffer_new414::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(tmp_fu_206_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(tmp_fu_206_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 8 : 
            if (!(esl_seteq<1,1,1>(exitcond_flatten9_fu_241_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(exitcond_flatten9_fu_241_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

}

