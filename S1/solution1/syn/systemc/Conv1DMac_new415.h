// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv1DMac_new415_HH_
#define _Conv1DMac_new415_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "computeS1_mux_164DeQ_x_x_x.h"
#include "Conv1DMac_new415_QgW.h"
#include "Conv1DMac_new415_Rg6.h"
#include "Conv1DMac_new415_Shg.h"
#include "Conv1DMac_new415_Thq.h"

namespace ap_rtl {

struct Conv1DMac_new415 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_signal< sc_lv<8> > ap_var_for_const0;
    sc_signal< sc_lv<8> > ap_var_for_const1;
    sc_signal< sc_lv<8> > ap_var_for_const2;
    sc_signal< sc_lv<8> > ap_var_for_const3;
    sc_signal< sc_lv<8> > ap_var_for_const4;
    sc_signal< sc_lv<8> > ap_var_for_const5;
    sc_signal< sc_lv<8> > ap_var_for_const6;
    sc_signal< sc_lv<8> > ap_var_for_const7;
    sc_signal< sc_lv<8> > ap_var_for_const8;
    sc_signal< sc_lv<8> > ap_var_for_const9;
    sc_signal< sc_lv<8> > ap_var_for_const10;
    sc_signal< sc_lv<8> > ap_var_for_const11;
    sc_signal< sc_lv<8> > ap_var_for_const12;
    sc_signal< sc_lv<8> > ap_var_for_const13;
    sc_signal< sc_lv<8> > ap_var_for_const14;
    sc_signal< sc_lv<8> > ap_var_for_const15;
    sc_signal< sc_lv<8> > ap_var_for_const16;
    sc_signal< sc_lv<8> > ap_var_for_const17;
    sc_signal< sc_lv<8> > ap_var_for_const18;
    sc_signal< sc_lv<8> > ap_var_for_const19;
    sc_signal< sc_lv<8> > ap_var_for_const20;
    sc_signal< sc_lv<8> > ap_var_for_const21;
    sc_signal< sc_lv<8> > ap_var_for_const22;
    sc_signal< sc_lv<8> > ap_var_for_const23;
    sc_signal< sc_lv<8> > ap_var_for_const24;
    sc_signal< sc_lv<8> > ap_var_for_const25;
    sc_signal< sc_lv<8> > ap_var_for_const26;
    sc_signal< sc_lv<8> > ap_var_for_const27;
    sc_signal< sc_lv<8> > ap_var_for_const28;
    sc_signal< sc_lv<8> > ap_var_for_const29;
    sc_signal< sc_lv<8> > ap_var_for_const30;
    sc_signal< sc_lv<8> > ap_var_for_const31;
    sc_signal< sc_lv<8> > ap_var_for_const32;
    sc_signal< sc_lv<8> > ap_var_for_const33;
    sc_signal< sc_lv<8> > ap_var_for_const34;
    sc_signal< sc_lv<8> > ap_var_for_const35;
    sc_signal< sc_lv<8> > ap_var_for_const36;


    // Module declarations
    Conv1DMac_new415(sc_module_name name);
    SC_HAS_PROCESS(Conv1DMac_new415);

    ~Conv1DMac_new415();

    sc_trace_file* mVcdFile;

    Conv1DMac_new415_QgW* weights4_m_weights_V_U;
    Conv1DMac_new415_Rg6* weights4_m_weights_V_1_U;
    Conv1DMac_new415_Shg* weights4_m_weights_V_2_U;
    Conv1DMac_new415_Thq* weights4_m_weights_V_3_U;
    computeS1_mux_164DeQ_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_x_x_x_U107;
    computeS1_mux_164DeQ_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_x_x_x_U108;
    computeS1_mux_164DeQ_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_x_x_x_U109;
    computeS1_mux_164DeQ_x_x_x<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_x_x_x_U110;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<10> > weights4_m_weights_V_address0;
    sc_signal< sc_logic > weights4_m_weights_V_ce0;
    sc_signal< sc_lv<8> > weights4_m_weights_V_q0;
    sc_signal< sc_lv<10> > weights4_m_weights_V_1_address0;
    sc_signal< sc_logic > weights4_m_weights_V_1_ce0;
    sc_signal< sc_lv<8> > weights4_m_weights_V_1_q0;
    sc_signal< sc_lv<10> > weights4_m_weights_V_2_address0;
    sc_signal< sc_logic > weights4_m_weights_V_2_ce0;
    sc_signal< sc_lv<8> > weights4_m_weights_V_2_q0;
    sc_signal< sc_lv<10> > weights4_m_weights_V_3_address0;
    sc_signal< sc_logic > weights4_m_weights_V_3_ce0;
    sc_signal< sc_lv<8> > weights4_m_weights_V_3_q0;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten3_reg_1124;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<1> > tmp_62_reg_1151;
    sc_signal< sc_lv<1> > tmp_62_reg_1151_pp0_iter2_reg;
    sc_signal< sc_lv<19> > indvar_flatten3_reg_281;
    sc_signal< sc_lv<12> > indvar_flatten_reg_292;
    sc_signal< sc_lv<5> > nm_reg_303;
    sc_signal< sc_lv<7> > sf_reg_314;
    sc_signal< sc_lv<1> > exitcond_flatten3_fu_357_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten3_reg_1124_pp0_iter1_reg;
    sc_signal< sc_lv<19> > indvar_flatten_next3_fu_363_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<4> > nm_t_mid2_fu_457_p3;
    sc_signal< sc_lv<4> > nm_t_mid2_reg_1133;
    sc_signal< sc_lv<4> > nm_t_mid2_reg_1133_pp0_iter1_reg;
    sc_signal< sc_lv<4> > nm_t_mid2_reg_1133_pp0_iter2_reg;
    sc_signal< sc_lv<5> > nm_mid2_fu_465_p3;
    sc_signal< sc_lv<10> > tmp_42_fu_477_p2;
    sc_signal< sc_lv<10> > tmp_42_reg_1146;
    sc_signal< sc_lv<1> > tmp_62_fu_483_p2;
    sc_signal< sc_lv<1> > tmp_62_reg_1151_pp0_iter1_reg;
    sc_signal< sc_lv<7> > sf_1_fu_489_p2;
    sc_signal< sc_lv<12> > indvar_flatten_next_fu_501_p3;
    sc_signal< sc_lv<8> > tmp_V_reg_1165;
    sc_signal< sc_lv<8> > p_Val2_s_139_reg_1190;
    sc_signal< sc_lv<1> > qb_assign_2_fu_589_p2;
    sc_signal< sc_lv<1> > qb_assign_2_reg_1195;
    sc_signal< sc_lv<8> > p_Val2_81_1_reg_1200;
    sc_signal< sc_lv<1> > qb_assign_2_1_fu_665_p2;
    sc_signal< sc_lv<1> > qb_assign_2_1_reg_1205;
    sc_signal< sc_lv<8> > p_Val2_81_2_reg_1210;
    sc_signal< sc_lv<1> > qb_assign_2_2_fu_741_p2;
    sc_signal< sc_lv<1> > qb_assign_2_2_reg_1215;
    sc_signal< sc_lv<8> > p_Val2_81_3_reg_1220;
    sc_signal< sc_lv<1> > qb_assign_2_3_fu_817_p2;
    sc_signal< sc_lv<1> > qb_assign_2_3_reg_1225;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<64> > tmp_43_fu_509_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > macRegisters_0_V_1_fu_200;
    sc_signal< sc_lv<8> > macRegisters_0_V_fu_844_p2;
    sc_signal< sc_lv<8> > macRegisters_1_V_1_fu_204;
    sc_signal< sc_lv<8> > macRegisters_1_V_fu_858_p2;
    sc_signal< sc_lv<8> > macRegisters_2_V_1_fu_208;
    sc_signal< sc_lv<8> > macRegisters_2_V_fu_872_p2;
    sc_signal< sc_lv<8> > macRegisters_3_V_1_fu_212;
    sc_signal< sc_lv<8> > macRegisters_3_V_fu_886_p2;
    sc_signal< sc_lv<4> > tmp_fu_345_p1;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_369_p2;
    sc_signal< sc_lv<10> > tmp_s_fu_349_p3;
    sc_signal< sc_lv<1> > tmp_353_fu_405_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_399_p2;
    sc_signal< sc_lv<5> > nm_mid_fu_375_p3;
    sc_signal< sc_lv<1> > tmp_91_mid_fu_411_p2;
    sc_signal< sc_lv<1> > tmp_354_fu_423_p2;
    sc_signal< sc_lv<5> > nm_1_fu_417_p2;
    sc_signal< sc_lv<4> > tmp_594_fu_437_p1;
    sc_signal< sc_lv<10> > tmp_90_mid1_fu_441_p3;
    sc_signal< sc_lv<10> > tmp_90_mid_fu_383_p3;
    sc_signal< sc_lv<4> > nm_t_mid_fu_391_p3;
    sc_signal< sc_lv<7> > sf_mid2_fu_429_p3;
    sc_signal< sc_lv<10> > sf_cast1_fu_473_p1;
    sc_signal< sc_lv<10> > tmp_90_mid2_fu_449_p3;
    sc_signal< sc_lv<12> > indvar_flatten_op_fu_495_p2;
    sc_signal< sc_lv<8> > p_Val2_s_fu_523_p0;
    sc_signal< sc_lv<16> > p_s_fu_516_p1;
    sc_signal< sc_lv<8> > p_Val2_s_fu_523_p1;
    sc_signal< sc_lv<16> > p_Val2_s_fu_523_p2;
    sc_signal< sc_lv<1> > tmp_597_fu_555_p1;
    sc_signal< sc_lv<1> > tmp_595_fu_529_p3;
    sc_signal< sc_lv<5> > tmp_46_fu_565_p4;
    sc_signal< sc_lv<1> > tmp_45_fu_559_p2;
    sc_signal< sc_lv<6> > tmp_47_fu_575_p3;
    sc_signal< sc_lv<1> > tmp_48_fu_583_p2;
    sc_signal< sc_lv<1> > tmp_596_fu_547_p3;
    sc_signal< sc_lv<8> > p_Val2_1_fu_599_p0;
    sc_signal< sc_lv<8> > p_Val2_1_fu_599_p1;
    sc_signal< sc_lv<16> > p_Val2_1_fu_599_p2;
    sc_signal< sc_lv<1> > tmp_600_fu_631_p1;
    sc_signal< sc_lv<1> > tmp_598_fu_605_p3;
    sc_signal< sc_lv<5> > tmp_52_fu_641_p4;
    sc_signal< sc_lv<1> > tmp_51_fu_635_p2;
    sc_signal< sc_lv<6> > tmp_53_fu_651_p3;
    sc_signal< sc_lv<1> > tmp_227_1_fu_659_p2;
    sc_signal< sc_lv<1> > tmp_599_fu_623_p3;
    sc_signal< sc_lv<8> > p_Val2_2_fu_675_p0;
    sc_signal< sc_lv<8> > p_Val2_2_fu_675_p1;
    sc_signal< sc_lv<16> > p_Val2_2_fu_675_p2;
    sc_signal< sc_lv<1> > tmp_603_fu_707_p1;
    sc_signal< sc_lv<1> > tmp_601_fu_681_p3;
    sc_signal< sc_lv<5> > tmp_56_fu_717_p4;
    sc_signal< sc_lv<1> > tmp_55_fu_711_p2;
    sc_signal< sc_lv<6> > tmp_57_fu_727_p3;
    sc_signal< sc_lv<1> > tmp_227_2_fu_735_p2;
    sc_signal< sc_lv<1> > tmp_602_fu_699_p3;
    sc_signal< sc_lv<8> > p_Val2_3_fu_751_p0;
    sc_signal< sc_lv<8> > p_Val2_3_fu_751_p1;
    sc_signal< sc_lv<16> > p_Val2_3_fu_751_p2;
    sc_signal< sc_lv<1> > tmp_606_fu_783_p1;
    sc_signal< sc_lv<1> > tmp_604_fu_757_p3;
    sc_signal< sc_lv<5> > tmp_60_fu_793_p4;
    sc_signal< sc_lv<1> > tmp_59_fu_787_p2;
    sc_signal< sc_lv<6> > tmp_61_fu_803_p3;
    sc_signal< sc_lv<1> > tmp_227_3_fu_811_p2;
    sc_signal< sc_lv<1> > tmp_605_fu_775_p3;
    sc_signal< sc_lv<8> > tmp_49_fu_835_p1;
    sc_signal< sc_lv<8> > tmp1_fu_838_p2;
    sc_signal< sc_lv<8> > tmp_228_1_fu_849_p1;
    sc_signal< sc_lv<8> > tmp2_fu_852_p2;
    sc_signal< sc_lv<8> > tmp_228_2_fu_863_p1;
    sc_signal< sc_lv<8> > tmp3_fu_866_p2;
    sc_signal< sc_lv<8> > tmp_228_3_fu_877_p1;
    sc_signal< sc_lv<8> > tmp4_fu_880_p2;
    sc_signal< sc_lv<8> > tmp_63_fu_911_p18;
    sc_signal< sc_lv<8> > tmp_64_fu_954_p18;
    sc_signal< sc_lv<8> > tmp_65_fu_997_p18;
    sc_signal< sc_lv<8> > tmp_66_fu_1040_p18;
    sc_signal< sc_lv<8> > p_Val2_22_3_fu_1077_p2;
    sc_signal< sc_lv<8> > p_Val2_22_2_fu_1034_p2;
    sc_signal< sc_lv<8> > p_Val2_22_1_fu_991_p2;
    sc_signal< sc_lv<8> > p_Val2_4_fu_948_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<19> ap_const_lv19_40000;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<12> ap_const_lv12_400;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<7> ap_const_lv7_3F;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_DC;
    static const sc_lv<8> ap_const_lv8_F3;
    static const sc_lv<8> ap_const_lv8_8;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_EC;
    static const sc_lv<8> ap_const_lv8_8E;
    static const sc_lv<8> ap_const_lv8_11;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<8> ap_const_lv8_BC;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<8> ap_const_lv8_EB;
    static const sc_lv<8> ap_const_lv8_F;
    static const sc_lv<8> ap_const_lv8_27;
    static const sc_lv<8> ap_const_lv8_D6;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<8> ap_const_lv8_DB;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_B5;
    static const sc_lv<8> ap_const_lv8_ED;
    static const sc_lv<8> ap_const_lv8_60;
    static const sc_lv<8> ap_const_lv8_B;
    static const sc_lv<8> ap_const_lv8_FB;
    static const sc_lv<8> ap_const_lv8_EE;
    static const sc_lv<8> ap_const_lv8_1D;
    static const sc_lv<8> ap_const_lv8_C;
    static const sc_lv<8> ap_const_lv8_43;
    static const sc_lv<8> ap_const_lv8_1A;
    static const sc_lv<8> ap_const_lv8_22;
    static const sc_lv<8> ap_const_lv8_F8;
    static const sc_lv<8> ap_const_lv8_B3;
    static const sc_lv<8> ap_const_lv8_C7;
    static const sc_lv<8> ap_const_lv8_6E;
    static const sc_lv<8> ap_const_lv8_21;
    static const sc_lv<8> ap_const_lv8_30;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const11();
    void thread_ap_var_for_const12();
    void thread_ap_var_for_const13();
    void thread_ap_var_for_const14();
    void thread_ap_var_for_const15();
    void thread_ap_var_for_const16();
    void thread_ap_var_for_const17();
    void thread_ap_var_for_const18();
    void thread_ap_var_for_const19();
    void thread_ap_var_for_const20();
    void thread_ap_var_for_const21();
    void thread_ap_var_for_const22();
    void thread_ap_var_for_const23();
    void thread_ap_var_for_const24();
    void thread_ap_var_for_const25();
    void thread_ap_var_for_const26();
    void thread_ap_var_for_const27();
    void thread_ap_var_for_const28();
    void thread_ap_var_for_const29();
    void thread_ap_var_for_const30();
    void thread_ap_var_for_const31();
    void thread_ap_var_for_const32();
    void thread_ap_var_for_const33();
    void thread_ap_var_for_const34();
    void thread_ap_var_for_const35();
    void thread_ap_var_for_const36();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten3_fu_357_p2();
    void thread_exitcond_flatten_fu_369_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_indvar_flatten_next3_fu_363_p2();
    void thread_indvar_flatten_next_fu_501_p3();
    void thread_indvar_flatten_op_fu_495_p2();
    void thread_internal_ap_ready();
    void thread_macRegisters_0_V_fu_844_p2();
    void thread_macRegisters_1_V_fu_858_p2();
    void thread_macRegisters_2_V_fu_872_p2();
    void thread_macRegisters_3_V_fu_886_p2();
    void thread_nm_1_fu_417_p2();
    void thread_nm_mid2_fu_465_p3();
    void thread_nm_mid_fu_375_p3();
    void thread_nm_t_mid2_fu_457_p3();
    void thread_nm_t_mid_fu_391_p3();
    void thread_not_exitcond_flatten_fu_399_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_Val2_1_fu_599_p0();
    void thread_p_Val2_1_fu_599_p1();
    void thread_p_Val2_1_fu_599_p2();
    void thread_p_Val2_22_1_fu_991_p2();
    void thread_p_Val2_22_2_fu_1034_p2();
    void thread_p_Val2_22_3_fu_1077_p2();
    void thread_p_Val2_2_fu_675_p0();
    void thread_p_Val2_2_fu_675_p1();
    void thread_p_Val2_2_fu_675_p2();
    void thread_p_Val2_3_fu_751_p0();
    void thread_p_Val2_3_fu_751_p1();
    void thread_p_Val2_3_fu_751_p2();
    void thread_p_Val2_4_fu_948_p2();
    void thread_p_Val2_s_fu_523_p0();
    void thread_p_Val2_s_fu_523_p1();
    void thread_p_Val2_s_fu_523_p2();
    void thread_p_s_fu_516_p1();
    void thread_qb_assign_2_1_fu_665_p2();
    void thread_qb_assign_2_2_fu_741_p2();
    void thread_qb_assign_2_3_fu_817_p2();
    void thread_qb_assign_2_fu_589_p2();
    void thread_real_start();
    void thread_sf_1_fu_489_p2();
    void thread_sf_cast1_fu_473_p1();
    void thread_sf_mid2_fu_429_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_fu_838_p2();
    void thread_tmp2_fu_852_p2();
    void thread_tmp3_fu_866_p2();
    void thread_tmp4_fu_880_p2();
    void thread_tmp_227_1_fu_659_p2();
    void thread_tmp_227_2_fu_735_p2();
    void thread_tmp_227_3_fu_811_p2();
    void thread_tmp_228_1_fu_849_p1();
    void thread_tmp_228_2_fu_863_p1();
    void thread_tmp_228_3_fu_877_p1();
    void thread_tmp_353_fu_405_p2();
    void thread_tmp_354_fu_423_p2();
    void thread_tmp_42_fu_477_p2();
    void thread_tmp_43_fu_509_p1();
    void thread_tmp_45_fu_559_p2();
    void thread_tmp_46_fu_565_p4();
    void thread_tmp_47_fu_575_p3();
    void thread_tmp_48_fu_583_p2();
    void thread_tmp_49_fu_835_p1();
    void thread_tmp_51_fu_635_p2();
    void thread_tmp_52_fu_641_p4();
    void thread_tmp_53_fu_651_p3();
    void thread_tmp_55_fu_711_p2();
    void thread_tmp_56_fu_717_p4();
    void thread_tmp_57_fu_727_p3();
    void thread_tmp_594_fu_437_p1();
    void thread_tmp_595_fu_529_p3();
    void thread_tmp_596_fu_547_p3();
    void thread_tmp_597_fu_555_p1();
    void thread_tmp_598_fu_605_p3();
    void thread_tmp_599_fu_623_p3();
    void thread_tmp_59_fu_787_p2();
    void thread_tmp_600_fu_631_p1();
    void thread_tmp_601_fu_681_p3();
    void thread_tmp_602_fu_699_p3();
    void thread_tmp_603_fu_707_p1();
    void thread_tmp_604_fu_757_p3();
    void thread_tmp_605_fu_775_p3();
    void thread_tmp_606_fu_783_p1();
    void thread_tmp_60_fu_793_p4();
    void thread_tmp_61_fu_803_p3();
    void thread_tmp_62_fu_483_p2();
    void thread_tmp_90_mid1_fu_441_p3();
    void thread_tmp_90_mid2_fu_449_p3();
    void thread_tmp_90_mid_fu_383_p3();
    void thread_tmp_91_mid_fu_411_p2();
    void thread_tmp_fu_345_p1();
    void thread_tmp_s_fu_349_p3();
    void thread_weights4_m_weights_V_1_address0();
    void thread_weights4_m_weights_V_1_ce0();
    void thread_weights4_m_weights_V_2_address0();
    void thread_weights4_m_weights_V_2_ce0();
    void thread_weights4_m_weights_V_3_address0();
    void thread_weights4_m_weights_V_3_ce0();
    void thread_weights4_m_weights_V_address0();
    void thread_weights4_m_weights_V_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
