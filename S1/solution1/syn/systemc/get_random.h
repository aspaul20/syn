// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _get_random_HH_
#define _get_random_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct get_random : public sc_module {
    // Port declarations 6
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > lfsr31_read;
    sc_in< sc_lv<32> > lfsr32_read;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;
    sc_out< sc_lv<32> > ap_return_2;


    // Module declarations
    get_random(sc_module_name name);
    SC_HAS_PROCESS(get_random);

    ~get_random();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > feedback_fu_42_p1;
    sc_signal< sc_lv<31> > tmp_2_i_cast_cast_ca_fu_56_p3;
    sc_signal< sc_lv<31> > tmp_i_cast_fu_46_p4;
    sc_signal< sc_lv<31> > lfsr32_val_fu_82_p2;
    sc_signal< sc_lv<1> > feedback_1_fu_92_p1;
    sc_signal< sc_lv<31> > tmp_2_i4_cast_cast_c_fu_106_p3;
    sc_signal< sc_lv<31> > tmp_i2_cast_fu_96_p4;
    sc_signal< sc_lv<31> > lfsr31_val_fu_132_p2;
    sc_signal< sc_lv<12> > p_cast_cast_fu_124_p3;
    sc_signal< sc_lv<12> > tmp_22_fu_114_p4;
    sc_signal< sc_lv<12> > tmp_s_fu_64_p4;
    sc_signal< sc_lv<12> > p_cast2_cast_fu_74_p3;
    sc_signal< sc_lv<12> > tmp1_fu_148_p2;
    sc_signal< sc_lv<12> > tmp_fu_142_p2;
    sc_signal< sc_lv<12> > tmp_cast_fu_154_p2;
    sc_signal< sc_lv<32> > tmp_cast_31_fu_160_p1;
    sc_signal< sc_lv<32> > lfsr_write_assign_i5_fu_138_p1;
    sc_signal< sc_lv<32> > lfsr_write_assign_i_s_fu_88_p1;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_A6;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<12> ap_const_lv12_A6;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<31> ap_const_lv31_69;
    static const sc_lv<12> ap_const_lv12_69;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_feedback_1_fu_92_p1();
    void thread_feedback_fu_42_p1();
    void thread_lfsr31_val_fu_132_p2();
    void thread_lfsr32_val_fu_82_p2();
    void thread_lfsr_write_assign_i5_fu_138_p1();
    void thread_lfsr_write_assign_i_s_fu_88_p1();
    void thread_p_cast2_cast_fu_74_p3();
    void thread_p_cast_cast_fu_124_p3();
    void thread_tmp1_fu_148_p2();
    void thread_tmp_22_fu_114_p4();
    void thread_tmp_2_i4_cast_cast_c_fu_106_p3();
    void thread_tmp_2_i_cast_cast_ca_fu_56_p3();
    void thread_tmp_cast_31_fu_160_p1();
    void thread_tmp_cast_fu_154_p2();
    void thread_tmp_fu_142_p2();
    void thread_tmp_i2_cast_fu_96_p4();
    void thread_tmp_i_cast_fu_46_p4();
    void thread_tmp_s_fu_64_p4();
};

}

using namespace ap_rtl;

#endif
