// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv1DMac_new407_HH_
#define _Conv1DMac_new407_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "computeS1_mux_164DeQ.h"
#include "Conv1DMac_new407_zec.h"
#include "Conv1DMac_new407_Aem.h"
#include "Conv1DMac_new407_Bew.h"
#include "Conv1DMac_new407_CeG.h"

namespace ap_rtl {

struct Conv1DMac_new407 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_signal< sc_lv<8> > ap_var_for_const0;
    sc_signal< sc_lv<8> > ap_var_for_const1;
    sc_signal< sc_lv<8> > ap_var_for_const2;
    sc_signal< sc_lv<8> > ap_var_for_const3;
    sc_signal< sc_lv<8> > ap_var_for_const4;
    sc_signal< sc_lv<8> > ap_var_for_const5;
    sc_signal< sc_lv<8> > ap_var_for_const6;
    sc_signal< sc_lv<8> > ap_var_for_const7;
    sc_signal< sc_lv<8> > ap_var_for_const8;
    sc_signal< sc_lv<8> > ap_var_for_const9;
    sc_signal< sc_lv<8> > ap_var_for_const10;
    sc_signal< sc_lv<8> > ap_var_for_const11;
    sc_signal< sc_lv<8> > ap_var_for_const12;
    sc_signal< sc_lv<8> > ap_var_for_const13;
    sc_signal< sc_lv<8> > ap_var_for_const14;
    sc_signal< sc_lv<8> > ap_var_for_const15;
    sc_signal< sc_lv<8> > ap_var_for_const16;
    sc_signal< sc_lv<8> > ap_var_for_const17;
    sc_signal< sc_lv<8> > ap_var_for_const18;
    sc_signal< sc_lv<8> > ap_var_for_const19;
    sc_signal< sc_lv<8> > ap_var_for_const20;
    sc_signal< sc_lv<8> > ap_var_for_const21;
    sc_signal< sc_lv<8> > ap_var_for_const22;
    sc_signal< sc_lv<8> > ap_var_for_const23;
    sc_signal< sc_lv<8> > ap_var_for_const24;
    sc_signal< sc_lv<8> > ap_var_for_const25;
    sc_signal< sc_lv<8> > ap_var_for_const26;
    sc_signal< sc_lv<8> > ap_var_for_const27;
    sc_signal< sc_lv<8> > ap_var_for_const28;


    // Module declarations
    Conv1DMac_new407(sc_module_name name);
    SC_HAS_PROCESS(Conv1DMac_new407);

    ~Conv1DMac_new407();

    sc_trace_file* mVcdFile;

    Conv1DMac_new407_zec* weights1_m_weights_V_U;
    Conv1DMac_new407_Aem* weights1_m_weights_V_1_U;
    Conv1DMac_new407_Bew* weights1_m_weights_V_2_U;
    Conv1DMac_new407_CeG* weights1_m_weights_V_3_U;
    computeS1_mux_164DeQ<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_U45;
    computeS1_mux_164DeQ<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_U46;
    computeS1_mux_164DeQ<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_U47;
    computeS1_mux_164DeQ<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* computeS1_mux_164DeQ_U48;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<10> > weights1_m_weights_V_address0;
    sc_signal< sc_logic > weights1_m_weights_V_ce0;
    sc_signal< sc_lv<8> > weights1_m_weights_V_q0;
    sc_signal< sc_lv<10> > weights1_m_weights_V_1_address0;
    sc_signal< sc_logic > weights1_m_weights_V_1_ce0;
    sc_signal< sc_lv<8> > weights1_m_weights_V_1_q0;
    sc_signal< sc_lv<10> > weights1_m_weights_V_2_address0;
    sc_signal< sc_logic > weights1_m_weights_V_2_ce0;
    sc_signal< sc_lv<8> > weights1_m_weights_V_2_q0;
    sc_signal< sc_lv<10> > weights1_m_weights_V_3_address0;
    sc_signal< sc_logic > weights1_m_weights_V_3_ce0;
    sc_signal< sc_lv<8> > weights1_m_weights_V_3_q0;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten5_reg_1108;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<1> > tmp_82_reg_1135;
    sc_signal< sc_lv<1> > tmp_82_reg_1135_pp0_iter2_reg;
    sc_signal< sc_lv<23> > indvar_flatten5_reg_265;
    sc_signal< sc_lv<12> > indvar_flatten_reg_276;
    sc_signal< sc_lv<5> > nm_reg_287;
    sc_signal< sc_lv<7> > sf_reg_298;
    sc_signal< sc_lv<1> > exitcond_flatten5_fu_341_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten5_reg_1108_pp0_iter1_reg;
    sc_signal< sc_lv<23> > indvar_flatten_next5_fu_347_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<4> > nm_t_mid2_fu_441_p3;
    sc_signal< sc_lv<4> > nm_t_mid2_reg_1117;
    sc_signal< sc_lv<4> > nm_t_mid2_reg_1117_pp0_iter1_reg;
    sc_signal< sc_lv<4> > nm_t_mid2_reg_1117_pp0_iter2_reg;
    sc_signal< sc_lv<5> > nm_mid2_fu_449_p3;
    sc_signal< sc_lv<10> > tmp_74_fu_461_p2;
    sc_signal< sc_lv<10> > tmp_74_reg_1130;
    sc_signal< sc_lv<1> > tmp_82_fu_467_p2;
    sc_signal< sc_lv<1> > tmp_82_reg_1135_pp0_iter1_reg;
    sc_signal< sc_lv<7> > sf_1_fu_473_p2;
    sc_signal< sc_lv<12> > indvar_flatten_next_fu_485_p3;
    sc_signal< sc_lv<8> > tmp_V_reg_1149;
    sc_signal< sc_lv<8> > p_Val2_s_141_reg_1174;
    sc_signal< sc_lv<1> > qb_assign_1_fu_573_p2;
    sc_signal< sc_lv<1> > qb_assign_1_reg_1179;
    sc_signal< sc_lv<8> > p_Val2_75_1_reg_1184;
    sc_signal< sc_lv<1> > qb_assign_1_1_fu_649_p2;
    sc_signal< sc_lv<1> > qb_assign_1_1_reg_1189;
    sc_signal< sc_lv<8> > p_Val2_75_2_reg_1194;
    sc_signal< sc_lv<1> > qb_assign_1_2_fu_725_p2;
    sc_signal< sc_lv<1> > qb_assign_1_2_reg_1199;
    sc_signal< sc_lv<8> > p_Val2_75_3_reg_1204;
    sc_signal< sc_lv<1> > qb_assign_1_3_fu_801_p2;
    sc_signal< sc_lv<1> > qb_assign_1_3_reg_1209;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<64> > tmp_75_fu_493_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > macRegisters_0_V_3_fu_184;
    sc_signal< sc_lv<8> > macRegisters_0_V_fu_828_p2;
    sc_signal< sc_lv<8> > macRegisters_1_V_3_fu_188;
    sc_signal< sc_lv<8> > macRegisters_1_V_fu_842_p2;
    sc_signal< sc_lv<8> > macRegisters_2_V_3_fu_192;
    sc_signal< sc_lv<8> > macRegisters_2_V_fu_856_p2;
    sc_signal< sc_lv<8> > macRegisters_3_V_3_fu_196;
    sc_signal< sc_lv<8> > macRegisters_3_V_fu_870_p2;
    sc_signal< sc_lv<4> > tmp_fu_329_p1;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_353_p2;
    sc_signal< sc_lv<10> > tmp_72_fu_333_p3;
    sc_signal< sc_lv<1> > tmp_54_fu_389_p2;
    sc_signal< sc_lv<1> > not_exitcond_flatten_fu_383_p2;
    sc_signal< sc_lv<5> > nm_mid_fu_359_p3;
    sc_signal< sc_lv<1> > tmp_73_mid_fu_395_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_407_p2;
    sc_signal< sc_lv<5> > nm_1_fu_401_p2;
    sc_signal< sc_lv<4> > tmp_620_fu_421_p1;
    sc_signal< sc_lv<10> > tmp_72_mid1_fu_425_p3;
    sc_signal< sc_lv<10> > tmp_72_mid_fu_367_p3;
    sc_signal< sc_lv<4> > nm_t_mid_fu_375_p3;
    sc_signal< sc_lv<7> > sf_mid2_fu_413_p3;
    sc_signal< sc_lv<10> > sf_cast1_fu_457_p1;
    sc_signal< sc_lv<10> > tmp_72_mid2_fu_433_p3;
    sc_signal< sc_lv<12> > indvar_flatten_op_fu_479_p2;
    sc_signal< sc_lv<8> > p_Val2_s_fu_507_p0;
    sc_signal< sc_lv<16> > p_s_fu_500_p1;
    sc_signal< sc_lv<8> > p_Val2_s_fu_507_p1;
    sc_signal< sc_lv<16> > p_Val2_s_fu_507_p2;
    sc_signal< sc_lv<1> > tmp_623_fu_539_p1;
    sc_signal< sc_lv<1> > tmp_621_fu_513_p3;
    sc_signal< sc_lv<5> > tmp_78_fu_549_p4;
    sc_signal< sc_lv<1> > tmp_77_fu_543_p2;
    sc_signal< sc_lv<6> > tmp_79_fu_559_p3;
    sc_signal< sc_lv<1> > tmp_80_fu_567_p2;
    sc_signal< sc_lv<1> > tmp_622_fu_531_p3;
    sc_signal< sc_lv<8> > p_Val2_1_fu_583_p0;
    sc_signal< sc_lv<8> > p_Val2_1_fu_583_p1;
    sc_signal< sc_lv<16> > p_Val2_1_fu_583_p2;
    sc_signal< sc_lv<1> > tmp_626_fu_615_p1;
    sc_signal< sc_lv<1> > tmp_624_fu_589_p3;
    sc_signal< sc_lv<5> > tmp_85_fu_625_p4;
    sc_signal< sc_lv<1> > tmp_84_fu_619_p2;
    sc_signal< sc_lv<6> > tmp_86_fu_635_p3;
    sc_signal< sc_lv<1> > tmp_203_1_fu_643_p2;
    sc_signal< sc_lv<1> > tmp_625_fu_607_p3;
    sc_signal< sc_lv<8> > p_Val2_2_fu_659_p0;
    sc_signal< sc_lv<8> > p_Val2_2_fu_659_p1;
    sc_signal< sc_lv<16> > p_Val2_2_fu_659_p2;
    sc_signal< sc_lv<1> > tmp_629_fu_691_p1;
    sc_signal< sc_lv<1> > tmp_627_fu_665_p3;
    sc_signal< sc_lv<5> > tmp_89_fu_701_p4;
    sc_signal< sc_lv<1> > tmp_88_fu_695_p2;
    sc_signal< sc_lv<6> > tmp_90_fu_711_p3;
    sc_signal< sc_lv<1> > tmp_203_2_fu_719_p2;
    sc_signal< sc_lv<1> > tmp_628_fu_683_p3;
    sc_signal< sc_lv<8> > p_Val2_3_fu_735_p0;
    sc_signal< sc_lv<8> > p_Val2_3_fu_735_p1;
    sc_signal< sc_lv<16> > p_Val2_3_fu_735_p2;
    sc_signal< sc_lv<1> > tmp_632_fu_767_p1;
    sc_signal< sc_lv<1> > tmp_630_fu_741_p3;
    sc_signal< sc_lv<5> > tmp_93_fu_777_p4;
    sc_signal< sc_lv<1> > tmp_92_fu_771_p2;
    sc_signal< sc_lv<6> > tmp_94_fu_787_p3;
    sc_signal< sc_lv<1> > tmp_203_3_fu_795_p2;
    sc_signal< sc_lv<1> > tmp_631_fu_759_p3;
    sc_signal< sc_lv<8> > tmp_81_fu_819_p1;
    sc_signal< sc_lv<8> > tmp1_fu_822_p2;
    sc_signal< sc_lv<8> > tmp_204_1_fu_833_p1;
    sc_signal< sc_lv<8> > tmp2_fu_836_p2;
    sc_signal< sc_lv<8> > tmp_204_2_fu_847_p1;
    sc_signal< sc_lv<8> > tmp3_fu_850_p2;
    sc_signal< sc_lv<8> > tmp_204_3_fu_861_p1;
    sc_signal< sc_lv<8> > tmp4_fu_864_p2;
    sc_signal< sc_lv<8> > tmp_95_fu_895_p18;
    sc_signal< sc_lv<8> > tmp_96_fu_938_p18;
    sc_signal< sc_lv<8> > tmp_97_fu_981_p18;
    sc_signal< sc_lv<8> > tmp_98_fu_1024_p18;
    sc_signal< sc_lv<8> > p_Val2_20_3_fu_1061_p2;
    sc_signal< sc_lv<8> > p_Val2_20_2_fu_1018_p2;
    sc_signal< sc_lv<8> > p_Val2_20_1_fu_975_p2;
    sc_signal< sc_lv<8> > p_Val2_7_fu_932_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<23> ap_const_lv23_400000;
    static const sc_lv<23> ap_const_lv23_1;
    static const sc_lv<12> ap_const_lv12_400;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<7> ap_const_lv7_3F;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_12;
    static const sc_lv<8> ap_const_lv8_28;
    static const sc_lv<8> ap_const_lv8_16;
    static const sc_lv<8> ap_const_lv8_C;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<8> ap_const_lv8_18;
    static const sc_lv<8> ap_const_lv8_1B;
    static const sc_lv<8> ap_const_lv8_F2;
    static const sc_lv<8> ap_const_lv8_15;
    static const sc_lv<8> ap_const_lv8_22;
    static const sc_lv<8> ap_const_lv8_25;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_A;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<8> ap_const_lv8_1E;
    static const sc_lv<8> ap_const_lv8_1D;
    static const sc_lv<8> ap_const_lv8_13;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_14;
    static const sc_lv<8> ap_const_lv8_6;
    static const sc_lv<8> ap_const_lv8_24;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<8> ap_const_lv8_F;
    static const sc_lv<8> ap_const_lv8_20;
    static const sc_lv<8> ap_const_lv8_11;
    static const sc_lv<8> ap_const_lv8_1A;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const11();
    void thread_ap_var_for_const12();
    void thread_ap_var_for_const13();
    void thread_ap_var_for_const14();
    void thread_ap_var_for_const15();
    void thread_ap_var_for_const16();
    void thread_ap_var_for_const17();
    void thread_ap_var_for_const18();
    void thread_ap_var_for_const19();
    void thread_ap_var_for_const20();
    void thread_ap_var_for_const21();
    void thread_ap_var_for_const22();
    void thread_ap_var_for_const23();
    void thread_ap_var_for_const24();
    void thread_ap_var_for_const25();
    void thread_ap_var_for_const26();
    void thread_ap_var_for_const27();
    void thread_ap_var_for_const28();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten5_fu_341_p2();
    void thread_exitcond_flatten_fu_353_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_indvar_flatten_next5_fu_347_p2();
    void thread_indvar_flatten_next_fu_485_p3();
    void thread_indvar_flatten_op_fu_479_p2();
    void thread_internal_ap_ready();
    void thread_macRegisters_0_V_fu_828_p2();
    void thread_macRegisters_1_V_fu_842_p2();
    void thread_macRegisters_2_V_fu_856_p2();
    void thread_macRegisters_3_V_fu_870_p2();
    void thread_nm_1_fu_401_p2();
    void thread_nm_mid2_fu_449_p3();
    void thread_nm_mid_fu_359_p3();
    void thread_nm_t_mid2_fu_441_p3();
    void thread_nm_t_mid_fu_375_p3();
    void thread_not_exitcond_flatten_fu_383_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_Val2_1_fu_583_p0();
    void thread_p_Val2_1_fu_583_p1();
    void thread_p_Val2_1_fu_583_p2();
    void thread_p_Val2_20_1_fu_975_p2();
    void thread_p_Val2_20_2_fu_1018_p2();
    void thread_p_Val2_20_3_fu_1061_p2();
    void thread_p_Val2_2_fu_659_p0();
    void thread_p_Val2_2_fu_659_p1();
    void thread_p_Val2_2_fu_659_p2();
    void thread_p_Val2_3_fu_735_p0();
    void thread_p_Val2_3_fu_735_p1();
    void thread_p_Val2_3_fu_735_p2();
    void thread_p_Val2_7_fu_932_p2();
    void thread_p_Val2_s_fu_507_p0();
    void thread_p_Val2_s_fu_507_p1();
    void thread_p_Val2_s_fu_507_p2();
    void thread_p_s_fu_500_p1();
    void thread_qb_assign_1_1_fu_649_p2();
    void thread_qb_assign_1_2_fu_725_p2();
    void thread_qb_assign_1_3_fu_801_p2();
    void thread_qb_assign_1_fu_573_p2();
    void thread_real_start();
    void thread_sf_1_fu_473_p2();
    void thread_sf_cast1_fu_457_p1();
    void thread_sf_mid2_fu_413_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_fu_822_p2();
    void thread_tmp2_fu_836_p2();
    void thread_tmp3_fu_850_p2();
    void thread_tmp4_fu_864_p2();
    void thread_tmp_203_1_fu_643_p2();
    void thread_tmp_203_2_fu_719_p2();
    void thread_tmp_203_3_fu_795_p2();
    void thread_tmp_204_1_fu_833_p1();
    void thread_tmp_204_2_fu_847_p1();
    void thread_tmp_204_3_fu_861_p1();
    void thread_tmp_54_fu_389_p2();
    void thread_tmp_620_fu_421_p1();
    void thread_tmp_621_fu_513_p3();
    void thread_tmp_622_fu_531_p3();
    void thread_tmp_623_fu_539_p1();
    void thread_tmp_624_fu_589_p3();
    void thread_tmp_625_fu_607_p3();
    void thread_tmp_626_fu_615_p1();
    void thread_tmp_627_fu_665_p3();
    void thread_tmp_628_fu_683_p3();
    void thread_tmp_629_fu_691_p1();
    void thread_tmp_630_fu_741_p3();
    void thread_tmp_631_fu_759_p3();
    void thread_tmp_632_fu_767_p1();
    void thread_tmp_72_fu_333_p3();
    void thread_tmp_72_mid1_fu_425_p3();
    void thread_tmp_72_mid2_fu_433_p3();
    void thread_tmp_72_mid_fu_367_p3();
    void thread_tmp_73_mid_fu_395_p2();
    void thread_tmp_74_fu_461_p2();
    void thread_tmp_75_fu_493_p1();
    void thread_tmp_77_fu_543_p2();
    void thread_tmp_78_fu_549_p4();
    void thread_tmp_79_fu_559_p3();
    void thread_tmp_80_fu_567_p2();
    void thread_tmp_81_fu_819_p1();
    void thread_tmp_82_fu_467_p2();
    void thread_tmp_84_fu_619_p2();
    void thread_tmp_85_fu_625_p4();
    void thread_tmp_86_fu_635_p3();
    void thread_tmp_88_fu_695_p2();
    void thread_tmp_89_fu_701_p4();
    void thread_tmp_90_fu_711_p3();
    void thread_tmp_92_fu_771_p2();
    void thread_tmp_93_fu_777_p4();
    void thread_tmp_94_fu_787_p3();
    void thread_tmp_fu_329_p1();
    void thread_tmp_s_fu_407_p2();
    void thread_weights1_m_weights_V_1_address0();
    void thread_weights1_m_weights_V_1_ce0();
    void thread_weights1_m_weights_V_2_address0();
    void thread_weights1_m_weights_V_2_ce0();
    void thread_weights1_m_weights_V_3_address0();
    void thread_weights1_m_weights_V_3_ce0();
    void thread_weights1_m_weights_V_address0();
    void thread_weights1_m_weights_V_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
