-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Conv1DMac_new_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_V_V_empty_n : IN STD_LOGIC;
    in_V_V_read : OUT STD_LOGIC;
    out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_V_V_full_n : IN STD_LOGIC;
    out_V_V_write : OUT STD_LOGIC );
end;


architecture behav of Conv1DMac_new_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv14_3000 : STD_LOGIC_VECTOR (13 downto 0) := "11000000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal weights0_m_weights_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal weights0_m_weights_V_ce0 : STD_LOGIC;
    signal weights0_m_weights_V_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal weights0_m_weights_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal weights0_m_weights_V_1_ce0 : STD_LOGIC;
    signal weights0_m_weights_V_1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal weights0_m_weights_V_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal weights0_m_weights_V_2_ce0 : STD_LOGIC;
    signal weights0_m_weights_V_2_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal weights0_m_weights_V_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal weights0_m_weights_V_3_ce0 : STD_LOGIC;
    signal weights0_m_weights_V_3_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten6_reg_1530 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal tmp_106_reg_1569 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_106_reg_1569_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten6_reg_225 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvar_flatten_reg_236 : STD_LOGIC_VECTOR (5 downto 0);
    signal nm_reg_247 : STD_LOGIC_VECTOR (3 downto 0);
    signal sf_reg_258 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_flatten6_fu_555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten6_reg_1530_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next6_fu_561_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal newSel57_cast_mid2_fu_829_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel57_cast_mid2_reg_1539 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel57_cast_mid2_reg_1539_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel57_cast_mid2_reg_1539_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel71_cast_mid2_fu_875_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel71_cast_mid2_reg_1544 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel71_cast_mid2_reg_1544_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel71_cast_mid2_reg_1544_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel85_cast_mid2_fu_939_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel85_cast_mid2_reg_1549 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel85_cast_mid2_reg_1549_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel85_cast_mid2_reg_1549_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel99_cast_mid2_fu_979_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel99_cast_mid2_reg_1554 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel99_cast_mid2_reg_1554_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel99_cast_mid2_reg_1554_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal nm_mid2_fu_987_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_fu_999_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_104_reg_1564 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_106_fu_1005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_106_reg_1569_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sf_2_fu_1011_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_next_fu_1023_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_V_reg_1583 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_115_reg_1608 : STD_LOGIC_VECTOR (6 downto 0);
    signal qb_assign_3_fu_1115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_3_reg_1613 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_123_reg_1618 : STD_LOGIC_VECTOR (6 downto 0);
    signal qb_assign_3_1_fu_1191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_3_1_reg_1623 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_reg_1628 : STD_LOGIC_VECTOR (6 downto 0);
    signal qb_assign_3_2_fu_1267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_3_2_reg_1633 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_135_reg_1638 : STD_LOGIC_VECTOR (6 downto 0);
    signal qb_assign_3_3_fu_1343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_3_3_reg_1643 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_105_fu_1034_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal macRegisters_0_V_4_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal macRegisters_0_V_fu_1385_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal macRegisters_1_V_4_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal macRegisters_1_V_fu_1403_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal macRegisters_2_V_4_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal macRegisters_2_V_fu_1421_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal macRegisters_3_V_4_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal macRegisters_3_V_fu_1439_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_293_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl_fu_297_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl_cast_fu_305_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal nm_cast1_fu_289_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_109_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_fu_345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_100_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_99_fu_315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_375_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel1_fu_383_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_111_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel2_fu_391_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel3_fu_399_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_cond_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel4_fu_407_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel5_fu_421_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel7_fu_437_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_113_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel8_fu_445_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel9_fu_459_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel11_fu_475_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel12_fu_483_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel13_fu_491_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel14_fu_499_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel15_fu_507_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel16_fu_515_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel18_fu_531_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel93_cast_cast_fu_539_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_flatten_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_309_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel6_fu_429_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel10_fu_467_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel17_fu_523_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_633_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel20_fu_613_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel19_fu_547_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_357_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nm_mid_fu_573_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_mid_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_358_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nm_2_fu_653_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_634_fu_677_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl_mid1_fu_681_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl_cast_mid1_fu_689_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal nm_cast1_mid1_fu_673_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_102_mid1_fu_693_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_102_mid_fu_581_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_292_mid1_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_291_mid1_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_290_mid1_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_289_mid1_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_288_mid1_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_287_mid1_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_286_mid1_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_293_mid1_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_mid1_fu_767_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel1_mid1_fu_775_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_294_mid1_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_295_mid1_fu_761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel2_mid1_fu_783_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel3_mid1_fu_791_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_cond_mid1_fu_807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel4_mid1_fu_799_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel5_mid1_fu_813_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel6_mid1_fu_821_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel57_cast_mid_fu_589_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel7_mid1_fu_837_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_308_mid1_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel8_mid1_fu_845_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel9_mid1_fu_859_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel10_mid1_fu_867_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel71_cast_mid_fu_597_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel11_mid1_fu_883_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel12_mid1_fu_891_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel13_mid1_fu_899_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel14_mid1_fu_907_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel15_mid1_fu_915_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel16_mid1_fu_923_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel17_mid1_fu_931_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel85_cast_mid_fu_605_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel18_mid1_fu_947_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel93_cast_mid1_c_fu_955_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel19_mid1_fu_963_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel20_mid1_fu_971_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal newSel99_cast_mid_fu_627_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sf_mid2_fu_665_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sf_cast_fu_995_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_102_mid2_fu_699_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_op_fu_1017_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_104_cast_fu_1031_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_142_fu_1049_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_s_142_fu_1049_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_08_cast_cast_fu_1042_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_s_142_fu_1049_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_637_fu_1081_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_635_fu_1055_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_119_fu_1091_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_118_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_fu_1101_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_121_fu_1109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_636_fu_1073_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_1125_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_1_fu_1125_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_fu_1125_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_640_fu_1157_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_638_fu_1131_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_127_fu_1167_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_126_fu_1161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_fu_1177_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_251_1_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_639_fu_1149_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_1201_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_2_fu_1201_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_fu_1201_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_643_fu_1233_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_641_fu_1207_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_fu_1243_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_132_fu_1237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_134_fu_1253_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_251_2_fu_1261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_642_fu_1225_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_3_fu_1277_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_3_fu_1277_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_3_fu_1277_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_646_fu_1309_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_644_fu_1283_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_139_fu_1319_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_138_fu_1313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_fu_1329_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_251_3_fu_1337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_645_fu_1301_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_fu_1376_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_116_fu_1373_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp43_fu_1379_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_252_1_fu_1394_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_124_fu_1391_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp44_fu_1397_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_252_2_fu_1412_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_130_fu_1409_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp45_fu_1415_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_252_3_fu_1430_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_136_fu_1427_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp46_fu_1433_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel57_cast_mid2_c_fu_1361_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel71_cast_mid2_c_fu_1364_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel85_cast_mid2_c_fu_1367_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel99_cast_mid2_c_fu_1370_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_24_3_fu_1483_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_24_2_fu_1477_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_24_1_fu_1471_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_1465_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component Conv1DMac_new_2_wcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component Conv1DMac_new_2_wdEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component Conv1DMac_new_2_weOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component Conv1DMac_new_2_wfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;



begin
    weights0_m_weights_V_U : component Conv1DMac_new_2_wcud
    generic map (
        DataWidth => 6,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weights0_m_weights_V_address0,
        ce0 => weights0_m_weights_V_ce0,
        q0 => weights0_m_weights_V_q0);

    weights0_m_weights_V_1_U : component Conv1DMac_new_2_wdEe
    generic map (
        DataWidth => 6,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weights0_m_weights_V_1_address0,
        ce0 => weights0_m_weights_V_1_ce0,
        q0 => weights0_m_weights_V_1_q0);

    weights0_m_weights_V_2_U : component Conv1DMac_new_2_weOg
    generic map (
        DataWidth => 6,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weights0_m_weights_V_2_address0,
        ce0 => weights0_m_weights_V_2_ce0,
        q0 => weights0_m_weights_V_2_q0);

    weights0_m_weights_V_3_U : component Conv1DMac_new_2_wfYi
    generic map (
        DataWidth => 6,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weights0_m_weights_V_3_address0,
        ce0 => weights0_m_weights_V_3_ce0,
        q0 => weights0_m_weights_V_3_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten6_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten6_fu_555_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten6_reg_225 <= indvar_flatten_next6_fu_561_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten6_reg_225 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten6_fu_555_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_236 <= indvar_flatten_next_fu_1023_p3;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_236 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    macRegisters_0_V_4_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_106_reg_1569_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                macRegisters_0_V_4_fu_144 <= macRegisters_0_V_fu_1385_p2;
            elsif ((((tmp_106_reg_1569_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                macRegisters_0_V_4_fu_144 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    macRegisters_1_V_4_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_106_reg_1569_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                macRegisters_1_V_4_fu_148 <= macRegisters_1_V_fu_1403_p2;
            elsif ((((tmp_106_reg_1569_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                macRegisters_1_V_4_fu_148 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    macRegisters_2_V_4_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_106_reg_1569_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                macRegisters_2_V_4_fu_152 <= macRegisters_2_V_fu_1421_p2;
            elsif ((((tmp_106_reg_1569_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                macRegisters_2_V_4_fu_152 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    macRegisters_3_V_4_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_106_reg_1569_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                macRegisters_3_V_4_fu_156 <= macRegisters_3_V_fu_1439_p2;
            elsif ((((tmp_106_reg_1569_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                macRegisters_3_V_4_fu_156 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    nm_reg_247_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten6_fu_555_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                nm_reg_247 <= nm_mid2_fu_987_p3;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                nm_reg_247 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    sf_reg_258_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten6_fu_555_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                sf_reg_258 <= sf_2_fu_1011_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                sf_reg_258 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_flatten6_reg_1530 <= exitcond_flatten6_fu_555_p2;
                exitcond_flatten6_reg_1530_pp0_iter1_reg <= exitcond_flatten6_reg_1530;
                    newSel57_cast_mid2_reg_1539_pp0_iter1_reg(1 downto 0) <= newSel57_cast_mid2_reg_1539(1 downto 0);    newSel57_cast_mid2_reg_1539_pp0_iter1_reg(5) <= newSel57_cast_mid2_reg_1539(5);
                    newSel71_cast_mid2_reg_1544_pp0_iter1_reg(1 downto 0) <= newSel71_cast_mid2_reg_1544(1 downto 0);    newSel71_cast_mid2_reg_1544_pp0_iter1_reg(5) <= newSel71_cast_mid2_reg_1544(5);
                    newSel85_cast_mid2_reg_1549_pp0_iter1_reg(2 downto 0) <= newSel85_cast_mid2_reg_1549(2 downto 0);    newSel85_cast_mid2_reg_1549_pp0_iter1_reg(5) <= newSel85_cast_mid2_reg_1549(5);
                newSel99_cast_mid2_reg_1554_pp0_iter1_reg <= newSel99_cast_mid2_reg_1554;
                tmp_106_reg_1569_pp0_iter1_reg <= tmp_106_reg_1569;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten6_fu_555_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    newSel57_cast_mid2_reg_1539(1 downto 0) <= newSel57_cast_mid2_fu_829_p3(1 downto 0);    newSel57_cast_mid2_reg_1539(5) <= newSel57_cast_mid2_fu_829_p3(5);
                    newSel71_cast_mid2_reg_1544(1 downto 0) <= newSel71_cast_mid2_fu_875_p3(1 downto 0);    newSel71_cast_mid2_reg_1544(5) <= newSel71_cast_mid2_fu_875_p3(5);
                    newSel85_cast_mid2_reg_1549(2 downto 0) <= newSel85_cast_mid2_fu_939_p3(2 downto 0);    newSel85_cast_mid2_reg_1549(5) <= newSel85_cast_mid2_fu_939_p3(5);
                newSel99_cast_mid2_reg_1554 <= newSel99_cast_mid2_fu_979_p3;
                tmp_104_reg_1564 <= tmp_104_fu_999_p2;
                tmp_106_reg_1569 <= tmp_106_fu_1005_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                    newSel57_cast_mid2_reg_1539_pp0_iter2_reg(1 downto 0) <= newSel57_cast_mid2_reg_1539_pp0_iter1_reg(1 downto 0);    newSel57_cast_mid2_reg_1539_pp0_iter2_reg(5) <= newSel57_cast_mid2_reg_1539_pp0_iter1_reg(5);
                    newSel71_cast_mid2_reg_1544_pp0_iter2_reg(1 downto 0) <= newSel71_cast_mid2_reg_1544_pp0_iter1_reg(1 downto 0);    newSel71_cast_mid2_reg_1544_pp0_iter2_reg(5) <= newSel71_cast_mid2_reg_1544_pp0_iter1_reg(5);
                    newSel85_cast_mid2_reg_1549_pp0_iter2_reg(2 downto 0) <= newSel85_cast_mid2_reg_1549_pp0_iter1_reg(2 downto 0);    newSel85_cast_mid2_reg_1549_pp0_iter2_reg(5) <= newSel85_cast_mid2_reg_1549_pp0_iter1_reg(5);
                newSel99_cast_mid2_reg_1554_pp0_iter2_reg <= newSel99_cast_mid2_reg_1554_pp0_iter1_reg;
                tmp_106_reg_1569_pp0_iter2_reg <= tmp_106_reg_1569_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten6_reg_1530_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                qb_assign_3_1_reg_1623 <= qb_assign_3_1_fu_1191_p2;
                qb_assign_3_2_reg_1633 <= qb_assign_3_2_fu_1267_p2;
                qb_assign_3_3_reg_1643 <= qb_assign_3_3_fu_1343_p2;
                qb_assign_3_reg_1613 <= qb_assign_3_fu_1115_p2;
                tmp_115_reg_1608 <= p_Val2_s_142_fu_1049_p2(13 downto 7);
                tmp_123_reg_1618 <= p_Val2_1_fu_1125_p2(13 downto 7);
                tmp_129_reg_1628 <= p_Val2_2_fu_1201_p2(13 downto 7);
                tmp_135_reg_1638 <= p_Val2_3_fu_1277_p2(13 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten6_reg_1530 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_reg_1583 <= in_V_V_dout;
            end if;
        end if;
    end process;
    newSel57_cast_mid2_reg_1539(4 downto 2) <= "000";
    newSel57_cast_mid2_reg_1539_pp0_iter1_reg(4 downto 2) <= "000";
    newSel57_cast_mid2_reg_1539_pp0_iter2_reg(4 downto 2) <= "000";
    newSel71_cast_mid2_reg_1544(4 downto 2) <= "000";
    newSel71_cast_mid2_reg_1544_pp0_iter1_reg(4 downto 2) <= "000";
    newSel71_cast_mid2_reg_1544_pp0_iter2_reg(4 downto 2) <= "000";
    newSel85_cast_mid2_reg_1549(4 downto 3) <= "00";
    newSel85_cast_mid2_reg_1549_pp0_iter1_reg(4 downto 3) <= "00";
    newSel85_cast_mid2_reg_1549_pp0_iter2_reg(4 downto 3) <= "00";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, exitcond_flatten6_fu_555_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond_flatten6_fu_555_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((exitcond_flatten6_fu_555_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, exitcond_flatten6_reg_1530, ap_enable_reg_pp0_iter3, tmp_106_reg_1569_pp0_iter2_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((tmp_106_reg_1569_pp0_iter2_reg = ap_const_lv1_1) and (out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((exitcond_flatten6_reg_1530 = ap_const_lv1_0) and (in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, exitcond_flatten6_reg_1530, ap_enable_reg_pp0_iter3, tmp_106_reg_1569_pp0_iter2_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((tmp_106_reg_1569_pp0_iter2_reg = ap_const_lv1_1) and (out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((exitcond_flatten6_reg_1530 = ap_const_lv1_0) and (in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter1, exitcond_flatten6_reg_1530, ap_enable_reg_pp0_iter3, tmp_106_reg_1569_pp0_iter2_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((tmp_106_reg_1569_pp0_iter2_reg = ap_const_lv1_1) and (out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((exitcond_flatten6_reg_1530 = ap_const_lv1_0) and (in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(in_V_V_empty_n, exitcond_flatten6_reg_1530)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((exitcond_flatten6_reg_1530 = ap_const_lv1_0) and (in_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter3_assign_proc : process(out_V_V_full_n, tmp_106_reg_1569_pp0_iter2_reg)
    begin
                ap_block_state5_pp0_stage0_iter3 <= ((tmp_106_reg_1569_pp0_iter2_reg = ap_const_lv1_1) and (out_V_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten6_fu_555_p2)
    begin
        if ((exitcond_flatten6_fu_555_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    exitcond_flatten6_fu_555_p2 <= "1" when (indvar_flatten6_reg_225 = ap_const_lv14_3000) else "0";
    exitcond_flatten_fu_567_p2 <= "1" when (indvar_flatten_reg_236 = ap_const_lv6_18) else "0";

    in_V_V_blk_n_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten6_reg_1530)
    begin
        if (((exitcond_flatten6_reg_1530 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_V_V_blk_n <= in_V_V_empty_n;
        else 
            in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten6_reg_1530, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten6_reg_1530 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_V_V_read <= ap_const_logic_1;
        else 
            in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next6_fu_561_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(indvar_flatten6_reg_225));
    indvar_flatten_next_fu_1023_p3 <= 
        ap_const_lv6_1 when (exitcond_flatten_fu_567_p2(0) = '1') else 
        indvar_flatten_op_fu_1017_p2;
    indvar_flatten_op_fu_1017_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_236) + unsigned(ap_const_lv6_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    macRegisters_0_V_fu_1385_p2 <= std_logic_vector(signed(tmp_116_fu_1373_p1) + signed(tmp43_fu_1379_p2));
    macRegisters_1_V_fu_1403_p2 <= std_logic_vector(signed(tmp_124_fu_1391_p1) + signed(tmp44_fu_1397_p2));
    macRegisters_2_V_fu_1421_p2 <= std_logic_vector(signed(tmp_130_fu_1409_p1) + signed(tmp45_fu_1415_p2));
    macRegisters_3_V_fu_1439_p2 <= std_logic_vector(signed(tmp_136_fu_1427_p1) + signed(tmp46_fu_1433_p2));
    newSel10_fu_467_p3 <= 
        newSel8_fu_445_p3 when (or_cond_fu_415_p2(0) = '1') else 
        newSel9_fu_459_p3;
    newSel10_mid1_fu_867_p3 <= 
        newSel8_mid1_fu_845_p3 when (or_cond_mid1_fu_807_p2(0) = '1') else 
        newSel9_mid1_fu_859_p3;
    newSel11_fu_475_p3 <= 
        ap_const_lv6_0 when (tmp_109_fu_351_p2(0) = '1') else 
        ap_const_lv6_24;
    newSel11_mid1_fu_883_p3 <= 
        ap_const_lv6_0 when (tmp_292_mid1_fu_743_p2(0) = '1') else 
        ap_const_lv6_24;
    newSel12_fu_483_p3 <= 
        ap_const_lv6_23 when (tmp_107_fu_339_p2(0) = '1') else 
        ap_const_lv6_0;
    newSel12_mid1_fu_891_p3 <= 
        ap_const_lv6_23 when (tmp_290_mid1_fu_731_p2(0) = '1') else 
        ap_const_lv6_0;
    newSel13_fu_491_p3 <= 
        ap_const_lv6_0 when (tmp_101_fu_327_p2(0) = '1') else 
        ap_const_lv6_25;
    newSel13_mid1_fu_899_p3 <= 
        ap_const_lv6_0 when (tmp_288_mid1_fu_719_p2(0) = '1') else 
        ap_const_lv6_25;
    newSel14_fu_499_p3 <= 
        ap_const_lv6_21 when (tmp_99_fu_315_p2(0) = '1') else 
        ap_const_lv6_20;
    newSel14_mid1_fu_907_p3 <= 
        ap_const_lv6_21 when (tmp_286_mid1_fu_707_p2(0) = '1') else 
        ap_const_lv6_20;
    newSel15_fu_507_p3 <= 
        newSel11_fu_475_p3 when (tmp_110_fu_357_p2(0) = '1') else 
        newSel12_fu_483_p3;
    newSel15_mid1_fu_915_p3 <= 
        newSel11_mid1_fu_883_p3 when (tmp_293_mid1_fu_749_p2(0) = '1') else 
        newSel12_mid1_fu_891_p3;
    newSel16_fu_515_p3 <= 
        newSel13_fu_491_p3 when (tmp_112_fu_369_p2(0) = '1') else 
        newSel14_fu_499_p3;
    newSel16_mid1_fu_923_p3 <= 
        newSel13_mid1_fu_899_p3 when (tmp_295_mid1_fu_761_p2(0) = '1') else 
        newSel14_mid1_fu_907_p3;
    newSel17_fu_523_p3 <= 
        newSel15_fu_507_p3 when (or_cond_fu_415_p2(0) = '1') else 
        newSel16_fu_515_p3;
    newSel17_mid1_fu_931_p3 <= 
        newSel15_mid1_fu_915_p3 when (or_cond_mid1_fu_807_p2(0) = '1') else 
        newSel16_mid1_fu_923_p3;
    newSel18_fu_531_p3 <= 
        ap_const_lv6_23 when (tmp_101_fu_327_p2(0) = '1') else 
        ap_const_lv6_0;
    newSel18_mid1_fu_947_p3 <= 
        ap_const_lv6_23 when (tmp_288_mid1_fu_719_p2(0) = '1') else 
        ap_const_lv6_0;
    newSel19_fu_547_p3 <= 
        newSel18_fu_531_p3 when (tmp_112_fu_369_p2(0) = '1') else 
        newSel93_cast_cast_fu_539_p3;
    newSel19_mid1_fu_963_p3 <= 
        newSel18_mid1_fu_947_p3 when (tmp_295_mid1_fu_761_p2(0) = '1') else 
        newSel93_cast_mid1_c_fu_955_p3;
    newSel1_fu_383_p3 <= 
        ap_const_lv6_0 when (tmp_107_fu_339_p2(0) = '1') else 
        ap_const_lv6_21;
    newSel1_mid1_fu_775_p3 <= 
        ap_const_lv6_0 when (tmp_290_mid1_fu_731_p2(0) = '1') else 
        ap_const_lv6_21;
    newSel20_fu_613_p3 <= 
        ap_const_lv6_1D when (exitcond_flatten_fu_567_p2(0) = '1') else 
        ap_const_lv6_0;
    newSel20_mid1_fu_971_p3 <= 
        ap_const_lv6_0 when (or_cond_mid1_fu_807_p2(0) = '1') else 
        newSel19_mid1_fu_963_p3;
    newSel2_fu_391_p3 <= 
        ap_const_lv6_20 when (tmp_101_fu_327_p2(0) = '1') else 
        ap_const_lv6_0;
    newSel2_mid1_fu_783_p3 <= 
        ap_const_lv6_20 when (tmp_288_mid1_fu_719_p2(0) = '1') else 
        ap_const_lv6_0;
    newSel3_fu_399_p3 <= 
        ap_const_lv6_23 when (tmp_99_fu_315_p2(0) = '1') else 
        ap_const_lv6_0;
    newSel3_mid1_fu_791_p3 <= 
        ap_const_lv6_23 when (tmp_286_mid1_fu_707_p2(0) = '1') else 
        ap_const_lv6_0;
    newSel4_fu_407_p3 <= 
        newSel_fu_375_p3 when (tmp_110_fu_357_p2(0) = '1') else 
        newSel1_fu_383_p3;
    newSel4_mid1_fu_799_p3 <= 
        newSel_mid1_fu_767_p3 when (tmp_293_mid1_fu_749_p2(0) = '1') else 
        newSel1_mid1_fu_775_p3;
    newSel57_cast_mid2_c_fu_1361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newSel57_cast_mid2_reg_1539_pp0_iter2_reg),8));
    newSel57_cast_mid2_fu_829_p3 <= 
        newSel6_mid1_fu_821_p3 when (tmp_103_mid_fu_647_p2(0) = '1') else 
        newSel57_cast_mid_fu_589_p3;
    newSel57_cast_mid_fu_589_p3 <= 
        ap_const_lv6_23 when (exitcond_flatten_fu_567_p2(0) = '1') else 
        newSel6_fu_429_p3;
    newSel5_fu_421_p3 <= 
        newSel2_fu_391_p3 when (tmp_112_fu_369_p2(0) = '1') else 
        newSel3_fu_399_p3;
    newSel5_mid1_fu_813_p3 <= 
        newSel2_mid1_fu_783_p3 when (tmp_295_mid1_fu_761_p2(0) = '1') else 
        newSel3_mid1_fu_791_p3;
    newSel6_fu_429_p3 <= 
        newSel4_fu_407_p3 when (or_cond_fu_415_p2(0) = '1') else 
        newSel5_fu_421_p3;
    newSel6_mid1_fu_821_p3 <= 
        newSel4_mid1_fu_799_p3 when (or_cond_mid1_fu_807_p2(0) = '1') else 
        newSel5_mid1_fu_813_p3;
    newSel71_cast_mid2_c_fu_1364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newSel71_cast_mid2_reg_1544_pp0_iter2_reg),8));
    newSel71_cast_mid2_fu_875_p3 <= 
        newSel10_mid1_fu_867_p3 when (tmp_103_mid_fu_647_p2(0) = '1') else 
        newSel71_cast_mid_fu_597_p3;
    newSel71_cast_mid_fu_597_p3 <= 
        ap_const_lv6_0 when (exitcond_flatten_fu_567_p2(0) = '1') else 
        newSel10_fu_467_p3;
    newSel7_fu_437_p3 <= 
        ap_const_lv6_23 when (tmp_109_fu_351_p2(0) = '1') else 
        ap_const_lv6_0;
    newSel7_mid1_fu_837_p3 <= 
        ap_const_lv6_23 when (tmp_292_mid1_fu_743_p2(0) = '1') else 
        ap_const_lv6_0;
    newSel85_cast_mid2_c_fu_1367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newSel85_cast_mid2_reg_1549_pp0_iter2_reg),8));
    newSel85_cast_mid2_fu_939_p3 <= 
        newSel17_mid1_fu_931_p3 when (tmp_103_mid_fu_647_p2(0) = '1') else 
        newSel85_cast_mid_fu_605_p3;
    newSel85_cast_mid_fu_605_p3 <= 
        ap_const_lv6_21 when (exitcond_flatten_fu_567_p2(0) = '1') else 
        newSel17_fu_523_p3;
    newSel8_fu_445_p3 <= 
        newSel7_fu_437_p3 when (tmp_110_fu_357_p2(0) = '1') else 
        ap_const_lv6_0;
    newSel8_mid1_fu_845_p3 <= 
        newSel7_mid1_fu_837_p3 when (tmp_293_mid1_fu_749_p2(0) = '1') else 
        ap_const_lv6_0;
    newSel93_cast_cast_fu_539_p3 <= 
        ap_const_lv6_1D when (tmp_99_fu_315_p2(0) = '1') else 
        ap_const_lv6_0;
    newSel93_cast_mid1_c_fu_955_p3 <= 
        ap_const_lv6_1D when (tmp_286_mid1_fu_707_p2(0) = '1') else 
        ap_const_lv6_0;
    newSel99_cast_mid2_c_fu_1370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newSel99_cast_mid2_reg_1554_pp0_iter2_reg),8));
    newSel99_cast_mid2_fu_979_p3 <= 
        newSel20_mid1_fu_971_p3 when (tmp_103_mid_fu_647_p2(0) = '1') else 
        newSel99_cast_mid_fu_627_p3;
    newSel99_cast_mid_fu_627_p3 <= 
        newSel20_fu_613_p3 when (tmp_633_fu_621_p2(0) = '1') else 
        newSel19_fu_547_p3;
    newSel9_fu_459_p3 <= 
        ap_const_lv6_0 when (tmp_113_fu_453_p2(0) = '1') else 
        ap_const_lv6_20;
    newSel9_mid1_fu_859_p3 <= 
        ap_const_lv6_0 when (tmp_308_mid1_fu_853_p2(0) = '1') else 
        ap_const_lv6_20;
    newSel_fu_375_p3 <= 
        ap_const_lv6_0 when (tmp_109_fu_351_p2(0) = '1') else 
        ap_const_lv6_23;
    newSel_mid1_fu_767_p3 <= 
        ap_const_lv6_0 when (tmp_292_mid1_fu_743_p2(0) = '1') else 
        ap_const_lv6_23;
    nm_2_fu_653_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(nm_mid_fu_573_p3));
    nm_cast1_fu_289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nm_reg_247),6));
    nm_cast1_mid1_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nm_2_fu_653_p2),6));
    nm_mid2_fu_987_p3 <= 
        nm_2_fu_653_p2 when (tmp_103_mid_fu_647_p2(0) = '1') else 
        nm_mid_fu_573_p3;
    nm_mid_fu_573_p3 <= 
        ap_const_lv4_0 when (exitcond_flatten_fu_567_p2(0) = '1') else 
        nm_reg_247;
    not_exitcond_flatten_fu_635_p2 <= (exitcond_flatten_fu_567_p2 xor ap_const_lv1_1);
    or_cond_fu_415_p2 <= (tmp_111_fu_363_p2 or tmp_110_fu_357_p2);
    or_cond_mid1_fu_807_p2 <= (tmp_294_mid1_fu_755_p2 or tmp_293_mid1_fu_749_p2);

    out_V_V_blk_n_assign_proc : process(out_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, tmp_106_reg_1569_pp0_iter2_reg)
    begin
        if (((tmp_106_reg_1569_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            out_V_V_blk_n <= out_V_V_full_n;
        else 
            out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_V_din <= (((p_Val2_24_3_fu_1483_p2 & p_Val2_24_2_fu_1477_p2) & p_Val2_24_1_fu_1471_p2) & p_Val2_s_fu_1465_p2);

    out_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, tmp_106_reg_1569_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_106_reg_1569_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            out_V_V_write <= ap_const_logic_1;
        else 
            out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

        p_08_cast_cast_fu_1042_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_reg_1583),14));

    p_Val2_1_fu_1125_p0 <= weights0_m_weights_V_1_q0;
    p_Val2_1_fu_1125_p1 <= p_08_cast_cast_fu_1042_p1(8 - 1 downto 0);
    p_Val2_1_fu_1125_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_1_fu_1125_p0) * signed(p_Val2_1_fu_1125_p1))), 14));
    p_Val2_24_1_fu_1471_p2 <= std_logic_vector(unsigned(newSel71_cast_mid2_c_fu_1364_p1) + unsigned(macRegisters_1_V_fu_1403_p2));
    p_Val2_24_2_fu_1477_p2 <= std_logic_vector(unsigned(newSel85_cast_mid2_c_fu_1367_p1) + unsigned(macRegisters_2_V_fu_1421_p2));
    p_Val2_24_3_fu_1483_p2 <= std_logic_vector(unsigned(newSel99_cast_mid2_c_fu_1370_p1) + unsigned(macRegisters_3_V_fu_1439_p2));
    p_Val2_2_fu_1201_p0 <= weights0_m_weights_V_2_q0;
    p_Val2_2_fu_1201_p1 <= p_08_cast_cast_fu_1042_p1(8 - 1 downto 0);
    p_Val2_2_fu_1201_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_2_fu_1201_p0) * signed(p_Val2_2_fu_1201_p1))), 14));
    p_Val2_3_fu_1277_p0 <= weights0_m_weights_V_3_q0;
    p_Val2_3_fu_1277_p1 <= p_08_cast_cast_fu_1042_p1(8 - 1 downto 0);
    p_Val2_3_fu_1277_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_fu_1277_p0) * signed(p_Val2_3_fu_1277_p1))), 14));
    p_Val2_s_142_fu_1049_p0 <= weights0_m_weights_V_q0;
    p_Val2_s_142_fu_1049_p1 <= p_08_cast_cast_fu_1042_p1(8 - 1 downto 0);
    p_Val2_s_142_fu_1049_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_s_142_fu_1049_p0) * signed(p_Val2_s_142_fu_1049_p1))), 14));
    p_Val2_s_fu_1465_p2 <= std_logic_vector(unsigned(newSel57_cast_mid2_c_fu_1361_p1) + unsigned(macRegisters_0_V_fu_1385_p2));
    p_shl_cast_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_297_p3),6));
    p_shl_cast_mid1_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid1_fu_681_p3),6));
    p_shl_fu_297_p3 <= (tmp_fu_293_p1 & ap_const_lv2_0);
    p_shl_mid1_fu_681_p3 <= (tmp_634_fu_677_p1 & ap_const_lv2_0);
    qb_assign_3_1_fu_1191_p2 <= (tmp_639_fu_1149_p3 and tmp_251_1_fu_1185_p2);
    qb_assign_3_2_fu_1267_p2 <= (tmp_642_fu_1225_p3 and tmp_251_2_fu_1261_p2);
    qb_assign_3_3_fu_1343_p2 <= (tmp_645_fu_1301_p3 and tmp_251_3_fu_1337_p2);
    qb_assign_3_fu_1115_p2 <= (tmp_636_fu_1073_p3 and tmp_121_fu_1109_p2);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    sf_2_fu_1011_p2 <= std_logic_vector(unsigned(sf_mid2_fu_665_p3) + unsigned(ap_const_lv2_1));
    sf_cast_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_mid2_fu_665_p3),6));
    sf_mid2_fu_665_p3 <= 
        ap_const_lv2_0 when (tmp_358_fu_659_p2(0) = '1') else 
        sf_reg_258;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp43_fu_1379_p2 <= std_logic_vector(unsigned(tmp_122_fu_1376_p1) + unsigned(macRegisters_0_V_4_fu_144));
    tmp44_fu_1397_p2 <= std_logic_vector(unsigned(tmp_252_1_fu_1394_p1) + unsigned(macRegisters_1_V_4_fu_148));
    tmp45_fu_1415_p2 <= std_logic_vector(unsigned(tmp_252_2_fu_1412_p1) + unsigned(macRegisters_2_V_4_fu_152));
    tmp46_fu_1433_p2 <= std_logic_vector(unsigned(tmp_252_3_fu_1430_p1) + unsigned(macRegisters_3_V_4_fu_156));
    tmp_100_fu_321_p2 <= "1" when (tmp_fu_293_p1 = ap_const_lv3_1) else "0";
    tmp_101_fu_327_p2 <= "1" when (tmp_fu_293_p1 = ap_const_lv3_2) else "0";
    tmp_102_fu_333_p2 <= "1" when (tmp_fu_293_p1 = ap_const_lv3_3) else "0";
    tmp_102_mid1_fu_693_p2 <= std_logic_vector(unsigned(p_shl_cast_mid1_fu_689_p1) - unsigned(nm_cast1_mid1_fu_673_p1));
    tmp_102_mid2_fu_699_p3 <= 
        tmp_102_mid1_fu_693_p2 when (tmp_103_mid_fu_647_p2(0) = '1') else 
        tmp_102_mid_fu_581_p3;
    tmp_102_mid_fu_581_p3 <= 
        ap_const_lv6_0 when (exitcond_flatten_fu_567_p2(0) = '1') else 
        tmp_s_fu_309_p2;
    tmp_103_mid_fu_647_p2 <= (tmp_357_fu_641_p2 and not_exitcond_flatten_fu_635_p2);
        tmp_104_cast_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_104_reg_1564),32));

    tmp_104_fu_999_p2 <= std_logic_vector(unsigned(sf_cast_fu_995_p1) + unsigned(tmp_102_mid2_fu_699_p3));
    tmp_105_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_104_cast_fu_1031_p1),64));
    tmp_106_fu_1005_p2 <= "1" when (sf_mid2_fu_665_p3 = ap_const_lv2_2) else "0";
    tmp_107_fu_339_p2 <= "1" when (tmp_fu_293_p1 = ap_const_lv3_4) else "0";
    tmp_108_fu_345_p2 <= "1" when (tmp_fu_293_p1 = ap_const_lv3_5) else "0";
    tmp_109_fu_351_p2 <= "1" when (tmp_fu_293_p1 = ap_const_lv3_6) else "0";
    tmp_110_fu_357_p2 <= (tmp_109_fu_351_p2 or tmp_108_fu_345_p2);
    tmp_111_fu_363_p2 <= (tmp_107_fu_339_p2 or tmp_102_fu_333_p2);
    tmp_112_fu_369_p2 <= (tmp_101_fu_327_p2 or tmp_100_fu_321_p2);
    tmp_113_fu_453_p2 <= (tmp_99_fu_315_p2 or tmp_112_fu_369_p2);
        tmp_116_fu_1373_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_115_reg_1608),8));

    tmp_118_fu_1085_p2 <= (tmp_637_fu_1081_p1 or tmp_635_fu_1055_p3);
    tmp_119_fu_1091_p4 <= p_Val2_s_142_fu_1049_p2(5 downto 1);
    tmp_120_fu_1101_p3 <= (tmp_119_fu_1091_p4 & tmp_118_fu_1085_p2);
    tmp_121_fu_1109_p2 <= "0" when (tmp_120_fu_1101_p3 = ap_const_lv6_0) else "1";
    tmp_122_fu_1376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_3_reg_1613),8));
        tmp_124_fu_1391_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_123_reg_1618),8));

    tmp_126_fu_1161_p2 <= (tmp_640_fu_1157_p1 or tmp_638_fu_1131_p3);
    tmp_127_fu_1167_p4 <= p_Val2_1_fu_1125_p2(5 downto 1);
    tmp_128_fu_1177_p3 <= (tmp_127_fu_1167_p4 & tmp_126_fu_1161_p2);
        tmp_130_fu_1409_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_129_reg_1628),8));

    tmp_132_fu_1237_p2 <= (tmp_643_fu_1233_p1 or tmp_641_fu_1207_p3);
    tmp_133_fu_1243_p4 <= p_Val2_2_fu_1201_p2(5 downto 1);
    tmp_134_fu_1253_p3 <= (tmp_133_fu_1243_p4 & tmp_132_fu_1237_p2);
        tmp_136_fu_1427_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_135_reg_1638),8));

    tmp_138_fu_1313_p2 <= (tmp_646_fu_1309_p1 or tmp_644_fu_1283_p3);
    tmp_139_fu_1319_p4 <= p_Val2_3_fu_1277_p2(5 downto 1);
    tmp_140_fu_1329_p3 <= (tmp_139_fu_1319_p4 & tmp_138_fu_1313_p2);
    tmp_251_1_fu_1185_p2 <= "0" when (tmp_128_fu_1177_p3 = ap_const_lv6_0) else "1";
    tmp_251_2_fu_1261_p2 <= "0" when (tmp_134_fu_1253_p3 = ap_const_lv6_0) else "1";
    tmp_251_3_fu_1337_p2 <= "0" when (tmp_140_fu_1329_p3 = ap_const_lv6_0) else "1";
    tmp_252_1_fu_1394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_3_1_reg_1623),8));
    tmp_252_2_fu_1412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_3_2_reg_1633),8));
    tmp_252_3_fu_1430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_3_3_reg_1643),8));
    tmp_286_mid1_fu_707_p2 <= "1" when (tmp_634_fu_677_p1 = ap_const_lv3_0) else "0";
    tmp_287_mid1_fu_713_p2 <= "1" when (tmp_634_fu_677_p1 = ap_const_lv3_1) else "0";
    tmp_288_mid1_fu_719_p2 <= "1" when (tmp_634_fu_677_p1 = ap_const_lv3_2) else "0";
    tmp_289_mid1_fu_725_p2 <= "1" when (tmp_634_fu_677_p1 = ap_const_lv3_3) else "0";
    tmp_290_mid1_fu_731_p2 <= "1" when (tmp_634_fu_677_p1 = ap_const_lv3_4) else "0";
    tmp_291_mid1_fu_737_p2 <= "1" when (tmp_634_fu_677_p1 = ap_const_lv3_5) else "0";
    tmp_292_mid1_fu_743_p2 <= "1" when (tmp_634_fu_677_p1 = ap_const_lv3_6) else "0";
    tmp_293_mid1_fu_749_p2 <= (tmp_292_mid1_fu_743_p2 or tmp_291_mid1_fu_737_p2);
    tmp_294_mid1_fu_755_p2 <= (tmp_290_mid1_fu_731_p2 or tmp_289_mid1_fu_725_p2);
    tmp_295_mid1_fu_761_p2 <= (tmp_288_mid1_fu_719_p2 or tmp_287_mid1_fu_713_p2);
    tmp_308_mid1_fu_853_p2 <= (tmp_295_mid1_fu_761_p2 or tmp_286_mid1_fu_707_p2);
    tmp_357_fu_641_p2 <= "1" when (sf_reg_258 = ap_const_lv2_3) else "0";
    tmp_358_fu_659_p2 <= (tmp_103_mid_fu_647_p2 or exitcond_flatten_fu_567_p2);
    tmp_633_fu_621_p2 <= (or_cond_fu_415_p2 or exitcond_flatten_fu_567_p2);
    tmp_634_fu_677_p1 <= nm_2_fu_653_p2(3 - 1 downto 0);
    tmp_635_fu_1055_p3 <= p_Val2_s_142_fu_1049_p2(13 downto 13);
    tmp_636_fu_1073_p3 <= p_Val2_s_142_fu_1049_p2(6 downto 6);
    tmp_637_fu_1081_p1 <= p_Val2_s_142_fu_1049_p2(1 - 1 downto 0);
    tmp_638_fu_1131_p3 <= p_Val2_1_fu_1125_p2(13 downto 13);
    tmp_639_fu_1149_p3 <= p_Val2_1_fu_1125_p2(6 downto 6);
    tmp_640_fu_1157_p1 <= p_Val2_1_fu_1125_p2(1 - 1 downto 0);
    tmp_641_fu_1207_p3 <= p_Val2_2_fu_1201_p2(13 downto 13);
    tmp_642_fu_1225_p3 <= p_Val2_2_fu_1201_p2(6 downto 6);
    tmp_643_fu_1233_p1 <= p_Val2_2_fu_1201_p2(1 - 1 downto 0);
    tmp_644_fu_1283_p3 <= p_Val2_3_fu_1277_p2(13 downto 13);
    tmp_645_fu_1301_p3 <= p_Val2_3_fu_1277_p2(6 downto 6);
    tmp_646_fu_1309_p1 <= p_Val2_3_fu_1277_p2(1 - 1 downto 0);
    tmp_99_fu_315_p2 <= "1" when (tmp_fu_293_p1 = ap_const_lv3_0) else "0";
    tmp_fu_293_p1 <= nm_reg_247(3 - 1 downto 0);
    tmp_s_fu_309_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_305_p1) - unsigned(nm_cast1_fu_289_p1));
    weights0_m_weights_V_1_address0 <= tmp_105_fu_1034_p1(5 - 1 downto 0);

    weights0_m_weights_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weights0_m_weights_V_1_ce0 <= ap_const_logic_1;
        else 
            weights0_m_weights_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights0_m_weights_V_2_address0 <= tmp_105_fu_1034_p1(5 - 1 downto 0);

    weights0_m_weights_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weights0_m_weights_V_2_ce0 <= ap_const_logic_1;
        else 
            weights0_m_weights_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights0_m_weights_V_3_address0 <= tmp_105_fu_1034_p1(5 - 1 downto 0);

    weights0_m_weights_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weights0_m_weights_V_3_ce0 <= ap_const_logic_1;
        else 
            weights0_m_weights_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    weights0_m_weights_V_address0 <= tmp_105_fu_1034_p1(5 - 1 downto 0);

    weights0_m_weights_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            weights0_m_weights_V_ce0 <= ap_const_logic_1;
        else 
            weights0_m_weights_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
